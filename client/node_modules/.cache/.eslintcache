[{"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/index.js":"1","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/App.js":"2","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/NavBar.js":"3","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/styledComponents/StyledButton.js":"4","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/styledComponents/StyledTextField.js":"5","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/HomePage.js":"6","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/SignInPage.js":"7","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/SchedulePage.js":"8","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/EmployeesPage.js":"9","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/styledComponents/NewEmployeeForm.js":"10","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/testData/testEmployees.js":"11","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/testData/testTimes.js":"12","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/styledComponents/EmployeeCard.js":"13","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/themes/theme.js":"14","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/themes/mintTheme.js":"15","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Calendar.js":"16","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/PersonalCalendar.js":"17","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js":"18","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/index.js":"19","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/App.js":"20","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/themes/theme.js":"21","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/themes/mintTheme.js":"22","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/testData/testEmployees.js":"23","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/testData/testTimes.js":"24","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/styledComponents/StyledTextField.js":"25","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/styledComponents/StyledButton.js":"26","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/calendars/Calendar.js":"27","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/calendars/PersonalCalendar.js":"28","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/calendars/Availability.js":"29","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/actions/employees.js":"30","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/constants/actionTypes.js":"31","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/api/index.js":"32","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/reducers/index.js":"33","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/reducers/employees.js":"34","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/homePage/HomePage.js":"35","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/EmployeesPage.js":"36","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/SchedulePage.js":"37","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/signInPage/SignInPage.js":"38","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/signInPage/styles.js":"39","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/styles.js":"40","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/homePage/styles.js":"41","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/styles.js":"42","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/EmployeeForm.js":"43","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/styles.js":"44","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/navBar/NavBar.js":"45","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/navBar/styles.js":"46","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EmployeeCard.js":"47","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/styles.js":"48","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/constants/positions.js":"49","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/formatAndValidations/formatPhoneNumber.js":"50","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/formatAndValidations/validateEmail.js":"51"},{"size":196,"mtime":1615639479491,"results":"52","hashOfConfig":"53"},{"size":2273,"mtime":1616300620000,"results":"54","hashOfConfig":"53"},{"size":2066,"mtime":1616113522105,"results":"55","hashOfConfig":"53"},{"size":591,"mtime":1616292777073,"results":"56","hashOfConfig":"53"},{"size":1274,"mtime":1616055153810,"results":"57","hashOfConfig":"53"},{"size":2909,"mtime":1617265347543,"results":"58","hashOfConfig":"53"},{"size":3667,"mtime":1616573620201,"results":"59","hashOfConfig":"53"},{"size":888,"mtime":1616302239638,"results":"60","hashOfConfig":"53"},{"size":1428,"mtime":1617135589449,"results":"61","hashOfConfig":"53"},{"size":7472,"mtime":1616292616538,"results":"62","hashOfConfig":"53"},{"size":7635,"mtime":1616567322274,"results":"63","hashOfConfig":"53"},{"size":991,"mtime":1617047387478,"results":"64","hashOfConfig":"53"},{"size":4253,"mtime":1616273529229,"results":"65","hashOfConfig":"53"},{"size":999,"mtime":1616250125729,"results":"66","hashOfConfig":"53"},{"size":684,"mtime":1616274998997,"results":"67","hashOfConfig":"53"},{"size":1412,"mtime":1616571742173,"results":"68","hashOfConfig":"53"},{"size":1126,"mtime":1616571314543,"results":"69","hashOfConfig":"53"},{"size":4056,"mtime":1616573252515,"results":"70","hashOfConfig":"53"},{"size":525,"mtime":1617353195790,"results":"71","hashOfConfig":"72"},{"size":2515,"mtime":1617774398328,"results":"73","hashOfConfig":"72"},{"size":999,"mtime":1616250125729,"results":"74","hashOfConfig":"72"},{"size":684,"mtime":1616274998997,"results":"75","hashOfConfig":"72"},{"size":7635,"mtime":1617781053939,"results":"76","hashOfConfig":"72"},{"size":991,"mtime":1617047387478,"results":"77","hashOfConfig":"72"},{"size":1274,"mtime":1616055153810,"results":"78","hashOfConfig":"72"},{"size":591,"mtime":1616292777073,"results":"79","hashOfConfig":"72"},{"size":1412,"mtime":1616571742173,"results":"80","hashOfConfig":"72"},{"size":1053,"mtime":1617923649134,"results":"81","hashOfConfig":"72"},{"size":4056,"mtime":1616573252515,"results":"82","hashOfConfig":"72"},{"size":787,"mtime":1617777605399,"results":"83","hashOfConfig":"72"},{"size":133,"mtime":1617339906759,"results":"84","hashOfConfig":"72"},{"size":366,"mtime":1617347928933,"results":"85","hashOfConfig":"72"},{"size":123,"mtime":1617342968319,"results":"86","hashOfConfig":"72"},{"size":566,"mtime":1617343547885,"results":"87","hashOfConfig":"72"},{"size":2235,"mtime":1617907502709,"results":"88","hashOfConfig":"72"},{"size":1046,"mtime":1617922505949,"results":"89","hashOfConfig":"72"},{"size":498,"mtime":1617774055155,"results":"90","hashOfConfig":"72"},{"size":3433,"mtime":1617907326284,"results":"91","hashOfConfig":"72"},{"size":883,"mtime":1617906123763,"results":"92","hashOfConfig":"72"},{"size":420,"mtime":1617774023963,"results":"93","hashOfConfig":"72"},{"size":752,"mtime":1617774137504,"results":"94","hashOfConfig":"72"},{"size":407,"mtime":1617909367271,"results":"95","hashOfConfig":"72"},{"size":8171,"mtime":1617916763129,"results":"96","hashOfConfig":"72"},{"size":592,"mtime":1617892300884,"results":"97","hashOfConfig":"72"},{"size":1553,"mtime":1617891053389,"results":"98","hashOfConfig":"72"},{"size":606,"mtime":1617890833962,"results":"99","hashOfConfig":"72"},{"size":2508,"mtime":1617915779644,"results":"100","hashOfConfig":"72"},{"size":2053,"mtime":1617777097933,"results":"101","hashOfConfig":"72"},{"size":252,"mtime":1617785725420,"results":"102","hashOfConfig":"72"},{"size":1039,"mtime":1617797413318,"results":"103","hashOfConfig":"72"},{"size":320,"mtime":1617809841666,"results":"104","hashOfConfig":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"7o5q2r",{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"107"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"107"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"107"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"107"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"107"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"107"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"107"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"2miu32",{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"153"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"153"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"153"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"153"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"153"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"153"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"153"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"153"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"153"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"153"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/index.js",[],["227","228"],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/App.js",["229","230","231","232"],"import './App.css';\nimport Home from './components/HomePage.js'\nimport NavBar from './components/NavBar.js'\nimport SignIn from './components/SignInPage.js'\nimport Schedule from './components/SchedulePage.js'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EmployeesPage from './components/EmployeesPage.js'\nimport theme from './themes/theme'\nimport mintTheme from './themes/mintTheme'\nimport {  ThemeProvider } from '@material-ui/core/styles'\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { useState } from 'react'\nimport { testEmployees } from './testData/testEmployees'\nimport { appointments } from './testData/testTimes'\nimport { Container } from '@material-ui/core'\n\nfunction App() {\n  const [employees, setEmployees] = useState(testEmployees)\n  const [employeesSchedules, setEmployeesSchedules] = useState(testEmployees.weekSchedule)\n  \n  const isUserAuthenticated = false\n\n  const setEmployee = ({employee}) => {\n    const newEmployee = {\n      firstName: employee.firstName,\n      middleInitial: employee.middleInitial,\n      lastName: employee.lastName,\n      email: employee.email,\n      phoneNumber: employee.phoneNumber,\n      tenure: employee.startDate,\n      positions: [employee.position],\n      availability: [employee.availability],\n      desiredHours: employee.desiredHours,\n    }\n    setEmployees([...employees, newEmployee])\n  }\n\n  \n  return (\n    <Router>\n      <ThemeProvider theme={ mintTheme }>\n        <CssBaseline />\n          <NavBar/>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n                return (\n                  isUserAuthenticated ?\n                  <Redirect to=\"/home\" /> :\n                  <Redirect to=\"/sign-in\" /> \n                )\n            }}\n          />\n          <Route path='/sign-in' component={ SignIn } />\n          <Route path='/home'>\n            <Home employee={testEmployees[0]}/>\n          </Route>\n          <Route path='/schedule'>\n            <Schedule employeesSchedules={employeesSchedules} />\n          </Route>\n          <Route path='/employees'>\n            <EmployeesPage employees={employees} addEmployee={setEmployee} />\n          </Route>  \n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/NavBar.js",["233"],"import AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Container from '@material-ui/core/Container'\nimport { Link, } from 'react-router-dom'\nimport logo from './images/avacado.png'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    navbar: {\n        backgroundColor: theme.palette.background.default,\n    },\n    navbarLinks: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    link: {\n        color: theme.palette.primary.main,\n        fontSize: '1.3rem',\n        fontWeight: 'bold',\n        textDecoration: 'none',\n        marginRight: '2rem',\n        marginLeft: '2rem',\n        '&:hover': {\n            color: theme.palette.primary.light,\n        },\n    },\n}))\n\nconst NavBar = () => {\n    const classes = useStyles()\n    return (\n        <div>\n            <AppBar className={classes.navbar} position='sticky'>\n                <ToolBar>\n                    <Link to='/home'>\n                        <img src={ logo } className='navbar-logo' alt='logo'/>\n                    </Link>\n                        <Container className={classes.navbarLinks}>\n                            <Link className={classes.link} to='/home'>\n                                Home\n                            </Link>\n                            <Link className={classes.link} to='/schedule' >\n                                Schedule\n                            </Link>\n                            <Link className={classes.link} to='/employees'>\n                                Employees\n                            </Link>\n                        </Container>\n                    <Link className='navbar-sign-in-logo' to='/sign-in'>\n                        <Typography class='material-icons md-36'>account_box</Typography>\n                    </Link>\n                </ToolBar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default NavBar\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/styledComponents/StyledButton.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/styledComponents/StyledTextField.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/HomePage.js",["234","235","236","237","238","239"],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/SignInPage.js",["240"],"import lime from './images/lime.svg'\nimport { useState } from 'react'\nimport { makeStyles, } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport IconButton from '@material-ui/core/IconButton'\nimport clsx from 'clsx'\nimport Container from '@material-ui/core/Container'\nimport StyledTextField from './styledComponents/StyledTextField.js'\nimport StyledButton from './styledComponents/StyledButton.js'\n\nconst useStyles = makeStyles((theme) => ({\n    center: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems:'center',\n        justifyContent:'center',\n        padding:'2rem',\n    },\n    card: {\n        maxWidth: '95vh', \n        borderRadius: '10px',\n        boxShadow: '0px 0px 25px 0px rgba(0, 0, 0, .7)',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems:'center',\n        justifyContent:'center',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.short,\n        }),\n      },\n      expandOpen: {\n        transform: 'rotate(180deg)',\n      },\n}))\n\nconst Home = () => {\n    const classes = useStyles()\n    const [expanded, setExpanded] = useState(false)\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n    return (\n        <Container className={classes.center}>\n            <Card className={classes.card}>\n                <CardContent>\n                    <img src={ lime } className='App-logo' alt='logo' />\n                </CardContent>\n                <CardContent>\n                    <StyledButton \n                        style={{width:'12rem'}} \n                        onClick={handleExpandClick}>\n                            SIGN IN\n                    </StyledButton>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"sign in\"\n                    >\n                        <ExpandMoreIcon style={{ color: 'lightgray' }} />\n                    </IconButton>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        <div>\n                            <StyledTextField \n                                variant='filled' \n                                color='primary' \n                                label='Username' \n                                required='true'\n                            />\n                        </div>\n                        <div>\n                            <StyledTextField \n                                variant='filled' \n                                color='primary' \n                                label='Password' \n                                required='true'\n                                style={{marginBottom: '1rem'}}\n                            />\n                        </div>\n                    </CardContent>\n                </Collapse>\n            </Card> \n        </Container>\n    )\n}\n\nexport default Home\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/SchedulePage.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/EmployeesPage.js",["241"],"import { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core'\nimport NewEmployeeForm from './styledComponents/NewEmployeeForm.js'\nimport Divider from '@material-ui/core/Divider'\nimport EmployeeCard from './styledComponents/EmployeeCard.js'\n\nconst useStyles = makeStyles((theme) => ({\n    center: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    title: {\n        margin: '2rem',\n        color: '#F7F7FF',\n    },\n    grid: {\n        flexGrow: 1,\n        justifyContent: 'space-around',\n        alignItems: 'center'\n    },\n}))\n\nconst EmployeesView = ({employees, addEmployee}) => {\n    const classes = useStyles()\n    return (\n        <Container className={classes.center}>\n            <Typography variant='h4' className={classes.title}>Employees</Typography>\n            <Divider light/>\n            <NewEmployeeForm addEmployee={addEmployee}/>\n            <Grid container className={classes.grid} spacing={1}>\n                {employees.map((employee) => (\n                    <Grid item>\n                        <EmployeeCard employee={employee} />\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    )\n}\n\nexport default EmployeesView\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/styledComponents/NewEmployeeForm.js",["242","243","244","245"],"import StyledTextField from './StyledTextField.js'\nimport Card from '@material-ui/core/Card'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Slide from '@material-ui/core/Slide'\nimport Icon from '@material-ui/core/Icon'\nimport IconButton from '@material-ui/core/IconButton'\nimport StyledButton from './StyledButton.js'\nimport { useState, forwardRef, useEffect, useRef} from 'react'\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme)=> ({\n    root: {\n        [theme.breakpoints.down('sm')]: {\n            width:'100%',\n            margin: 0,\n            padding: 0,\n        },\n        backgroundColor: 'rgba(25,25,25,.8)',\n    }\n}))\n\nconst NewEmployeeForm = ({addEmployee}) => {\n    const [open, setOpen] = useState(false)\n    const [scroll, setScroll] = useState('paper')\n    const classes = useStyles()\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        middleInitial: '',\n        lastName: '',\n        phoneNumber: '',\n        email: '',\n        position: '',\n    })\n  \n    const handleClickOpen = (scrollType) => () => {\n        setOpen(true)\n        setScroll(scrollType)\n    }\n  \n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const addEmployeeButton = () => {\n        setOpen(false)\n        addEmployee({employee})\n    }\n\n  \n    const descriptionElementRef = useRef(null)\n    useEffect(() => {\n      if (open) {\n        const { current: descriptionElement } = descriptionElementRef\n        if (descriptionElement !== null) {\n          descriptionElement.focus()\n        }\n      }\n    }, [open])\n  \n    return (\n      <div>\n        <IconButton style={{bottom: '2vh'}} onClick={handleClickOpen('paper')}>\n            <Icon color='primary'>add-icon</Icon>\n        </IconButton>\n        <Dialog\n            className={classes.root}\n            open={open}\n            onClose={handleClose}\n            scroll={scroll}\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            style={{width: '100%', borderRadius: '20px',}}\n        >\n        <DialogTitle \n            id=\"scroll-dialog-title\"\n            style={{\n                backgroundImage:'linear-gradient(0deg, #353535 30%, #424242 70%)',\n            }}\n        >\n            <h3 className='card-title'>New Employee</h3>\n        </DialogTitle>\n            <DialogContent \n                dividers={scroll === 'paper'}\n                style={{\n                    backgroundColor:'#333333',\n                    boxShadow: '0 0 10px #202020',\n                    paddingTop: '2.5rem',\n                    margin: 0\n                }}\n            >\n            <DialogContentText\n              id=\"scroll-dialog-description\"\n              ref={descriptionElementRef}\n              tabIndex={-1}\n            >\n                <Box >\n                    <form noValidate autoComplete='off'>\n                        <div>\n                            <StyledTextField \n                                label='First Name' \n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.firstName}\n                                onChange={(e) => setEmployee({...employee, firstName: e.target.value})}\n                            />\n                        </div>\n                        <div >\n                            <StyledTextField \n                                label='M.I.' \n                                inputProps={{ maxLength: '1'}}\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.middleInitial}\n                                onChange={(e) => setEmployee({...employee, middleInitial: e.target.value})}\n                            />\n                        </div>\n                        <div>\n                            <StyledTextField \n                                label='Last Name' \n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.lastName}\n                                onChange={(e) => setEmployee({...employee, lastName: e.target.value})}\n                            />\n                        </div>\n                        <div>\n                            <StyledTextField \n                                label='Phone Number' \n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.phoneNumber}\n                                onChange={(e) => setEmployee({...employee, phoneNumber: e.target.value})}\n                            />\n                        </div>\n                        <div>\n                            <StyledTextField \n                                label='Email' \n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.email}\n                                onChange={(e) => setEmployee({...employee, email: e.target.value})}\n                            />\n                        </div>\n                        <div>\n                            <StyledTextField \n                                label='Date Started'\n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                            />\n                        </div>\n                        <div>\n                            <StyledTextField \n                                label='Starting Position'\n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.position}\n                                onChange={(e) => setEmployee({...employee, position: e.target.value})}\n                            />\n                        </div>\n                    </form>\n                </Box>\n            </DialogContentText>\n            </DialogContent>\n            <DialogActions style={{backgroundColor:'#424242', padding:'1rem 2rem 1rem 2rem'}}>\n            <Button variant='text' onClick={handleClose} color='primary' style={{color:'#bbb'}}>\n              Cancel\n            </Button>\n            <StyledButton style={{height:'3rem', width:'12rem'}} variant='contained' onClick={addEmployeeButton} color='secondary'>\n              Add Employee\n            </StyledButton>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}\n\nexport default NewEmployeeForm","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/testData/testEmployees.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/testData/testTimes.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/styledComponents/EmployeeCard.js",["246","247"],"import { useState } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport ReactCardFlip from 'react-card-flip'\nimport Card from '@material-ui/core/Card'\nimport Container from '@material-ui/core/Container'\nimport EmployeesView from '../EmployeesPage'\nimport Divider from '@material-ui/core/Divider'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        height: '200px',\n        width: '200px',\n        margin: '5px',\n        marginTop: '10px',\n        marginBottom: '10px',\n        borderRadius: '10px',\n        boxShadow: '0 5px 40px -12px rgba(0,0,0,0.8)',\n        transition: '0.1s',\n        '&:hover' : {\n            boxShadow: '0 10px 70px -12.125px rgba(0,0,0,0.8)',\n            height: '205px',\n            width: '205px',\n            margin: '2px'\n        },\n        '&:hover button' : {\n            opacity: '1',\n        }\n    },\n    cardFrontTop: {\n        height: '50px',\n        justifyContent: 'center',\n        textAlign: 'center',\n        margin:'auto',\n        alignContent: 'center',\n        fontSize: '18px',\n    },\n    cardFrontDetails: {\n        height: '120px',\n        display: 'flex',\n        flexDirection: 'column',\n        justfiyContent: 'space-between',\n        alignItems: 'center',\n        textAlign: 'center',\n        fontSize: '14px'\n    },\n    cardBack: {\n        height: '230px',\n        width: '200px',\n        margin: '5px',\n        marginTop:'-25px',\n        marginBottom:'-25px',\n        borderRadius: '10px',\n        boxShadow: '0 10px 70px -12.125px rgba(0,0,0,0.8)',\n        '&:hover button' : {\n            boxShadow: '0 10px 70px -12.125px rgba(0,0,0,0.8)',\n            opacity: 1,\n        }\n    },\n    cardBackContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        justfiyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n    },\n    flipButtonFrontArea: {\n        height: '30px',\n        top: '90px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    flipButton: {\n        color: theme.palette.secondary.main,\n        opacity: 0,\n        margin:0,\n        padding:0,\n        transition: '0.1s',\n        height: '25px',\n        width: '90px',\n        fontSize: '12px',\n    },\n    divider: {\n        backgroundColor: theme.palette.secondary.main,\n    }\n}))\n\nconst EmployeeCard = ({employee}) => {\n    const classes = useStyles()\n    const [isFlipped, setIsFlipped] = useState()\n    const positions = employee.positions\n\n    return (\n        <ReactCardFlip isFlipped={isFlipped} flipDirection='vertical'>\n\n            <Card className={classes.card}>\n                <Container className={classes.cardFrontTop}>\n                    {employee.firstName} {employee.lastName}\n                    <Divider className={classes.divider}/>\n                </Container>\n                <Container className={classes.cardFrontDetails}>\n                    {positions.map((position)=>\n                        <li>{position}</li>\n                    )}\n                </Container>\n                <Container className={classes.flipButtonFrontArea}>\n                    <Button \n                        className={classes.flipButton} \n                        variant='text'\n                        style={{}}\n                        onClick={() => setIsFlipped(!isFlipped)}\n                    >\n                        Flip Card\n                    </Button>\n                </Container>\n            </Card>\n            <Card className={classes.cardBack}>\n                <Container className={classes.cardBackContent}>\n                    <div>\n                        {employee.phoneNumber}\n                    </div>\n                    <div>\n                        {employee.email}\n                    </div>\n                    <Button \n                        className={classes.flipButton} \n                        onClick={() => setIsFlipped(!isFlipped)}\n                        >\n                            Flip Card\n                    </Button>\n                </Container>\n            </Card>\n        </ReactCardFlip>\n    )\n}\n\nexport default EmployeeCard\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/themes/theme.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/themes/mintTheme.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Calendar.js",["248","249","250","251","252","253"],"import { makeStyles } from '@material-ui/core/styles'\nimport { \n    ViewState, \n    EditingState, \n    IntegratedEditing \n} from '@devexpress/dx-react-scheduler'\nimport { \n    Scheduler, \n    DayView, \n    WeekView,\n    Appointments, \n    AppointmentForm,\n    ConfirmationDialog,\n    AppointmentTooltip,\n    Toolbar,\n    ViewSwitcher,\n    TodayButton,\n    DateNavigator,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport Card from '@material-ui/core/Card'\nimport { appointments } from '../../testData/testTimes'\n\nconst Calendar = ({employeesSchedules}) => {\n    const currentDate = new Date()\n    const schedulerData = appointments\n\n    return (\n        <Scheduler\n            data={schedulerData}\n            firstDayOfWeek={1}\n        >\n            <ViewState\n                defaultCurrentDate={currentDate}\n            />\n            <DayView\n                startDayHour={7}\n                cellDuration={60}\n                endDayHour={23}\n            />\n            <WeekView\n                startDayHour={7}\n                cellDuration={60}\n                endDayHour={23}\n            />\n            <Toolbar />\n            <ViewSwitcher />\n            <Appointments />\n            <AppointmentTooltip \n                showCloseButton\n                showDeleteButton\n            />\n            <TodayButton />\n            <DateNavigator />\n        </Scheduler>\n    )\n}\n\nexport default Calendar","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/PersonalCalendar.js",["254","255","256","257","258","259","260","261","262"],"import { makeStyles } from '@material-ui/core/styles'\nimport { \n    ViewState, \n} from '@devexpress/dx-react-scheduler'\nimport { \n    Scheduler, \n    DayView, \n    WeekView,\n    Appointments, \n    AppointmentTooltip,\n    Toolbar,\n    ViewSwitcher,\n    TodayButton,\n    DateNavigator,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport Card from '@material-ui/core/Card'\nimport { appointments } from '../../testData/testTimes'\n\nconst PersonalCalendar = ({employeeWeekSchedule}) => {\n    const currentDate = new Date()\n\n    return (\n            <Scheduler\n                data={employeeWeekSchedule}\n                firstDayOfWeek={1}\n            >\n                <ViewState\n                    defaultCurrentDate={currentDate}\n                />\n                <WeekView\n                    startDayHour={6}\n                    cellDuration={120}\n                    endDayHour={24}\n                />\n                \n                <Appointments />\n                {/* <AppointmentTooltip \n                    showCloseButton\n                /> */}\n            </Scheduler>\n    )\n}\n\nexport default PersonalCalendar","/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js",["263","264","265","266","267","268","269","270","271","272","273"],"import React from 'react'\nimport { useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { \n    ViewState, \n    EditingState, \n    IntegratedEditing,\n } from '@devexpress/dx-react-scheduler'\nimport { \n    Scheduler,  \n    WeekView,\n    Appointments, \n    AppointmentForm,\n    AppointmentTooltip,\n    DragDropProvider,\n    ConfirmationDialog,\n    EditRecurrenceMenu,\n    AllDayPanel,\n    DateNavigator,\n    Toolbar,\n    ViewSwitcher,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport { areIntervalsOverlapping } from 'date-fns'\nimport { testEmployees } from '../../testData/testEmployees'\n\n// const Availability = ({employeeAvailability}) => {\n//     const currentDate = new Date()\n//     const [availability, setAvailability] = useState(employeeAvailability)\n\n//     const commitChanges = ({ added, changed, deleted }) => {\n//         if (added) {\n//             setAvailability([...availability, {...added}])\n//         }\n//         if (changed) {\n//              setAvailability(() => availability.map(appointment => (\n//                 changed[appointment] ? [...appointment, {...changed}] : appointment\n//              )))\n//         }\n//         if (deleted !== undefined) {\n//             setAvailability(() => availability.filter(appointment => appointment.id !== deleted))\n//         }\n//     }\n\n//     return (\n//             <Scheduler\n//                 data={availability}\n//                 firstDayOfWeek={1}\n//             >\n//                 <ViewState\n//                     defaultCurrentDate={currentDate}\n//                 />\n//                 <WeekView\n//                     startDayHour={6}\n//                     cellDuration={120}\n//                     endDayHour={24}\n//                 />\n//                 <EditingState onCommitChanges={commitChanges}/>\n//                 <IntegratedEditing />\n//                 <ConfirmationDialog />\n//                 <Appointments />\n//                 <AppointmentTooltip \n//                     showOpenButton\n//                     showCloseButton\n//                     showDeleteButton\n//                 />\n//                 <AppointmentForm />\n//                 <DragDropProvider />\n//             </Scheduler>\n//     )\n// }\n\n// export default Availability\n\nexport default class Demo extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: testEmployees[0].availability,\n        currentDate: new Date(),\n      };\n  \n      this.commitChanges = this.commitChanges.bind(this);\n    }\n  \n    commitChanges({ added, changed, deleted }) {\n      this.setState((state) => {\n        let { data } = state;\n        if (added) {\n          const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n          data = [...data, { id: startingAddedId, ...added }];\n        }\n        if (changed) {\n          data = data.map(appointment => (\n            changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\n        }\n        if (deleted !== undefined) {\n          data = data.filter(appointment => appointment.id !== deleted);\n        }\n        return { data };\n      });\n    }\n  \n    render() {\n      const { currentDate, data } = this.state;\n  \n      return (\n        // <Paper >\n          <Scheduler\n            data={data}\n            firstDayOfWeek={1}\n          >\n            <ViewState\n              currentDate={currentDate}\n            />\n            <EditingState onCommitChanges={this.commitChanges}/>\n            <IntegratedEditing />\n            <WeekView\n              startDayHour={6}\n              cellDuration={120}\n              endDayHour={24}\n            />\n            <ConfirmationDialog />\n            <Appointments />\n            <AppointmentTooltip\n              showOpenButton\n              showDeleteButton\n            />\n            <AppointmentForm />\n          </Scheduler>\n        // </Paper>\n      );\n    }\n  }\n  \n  ","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/index.js",[],["274","275"],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/App.js",["276","277","278","279","280"],"import './App.css';\nimport Home from './components/homePage/HomePage.js'\nimport NavBar from './components/navBar/NavBar.js'\nimport SignIn from './components/signInPage/SignInPage.js'\nimport Schedule from './components/schedulePage/SchedulePage.js'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EmployeesPage from './components/employeesPage/EmployeesPage.js'\nimport theme from './themes/theme'\nimport mintTheme from './themes/mintTheme'\nimport {  ThemeProvider } from '@material-ui/core/styles'\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { testEmployees } from './testData/testEmployees'\nimport { Container } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport { getEmployees } from './actions/employees'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const [currentId, setCurrentId] = useState(null)\n  const [employees, setEmployees] = useState(testEmployees)\n  const [employeesSchedules, setEmployeesSchedules] = useState(testEmployees.weekSchedule)\n\n  useEffect(() => {\n    dispatch(getEmployees())\n  }, [currentId, dispatch])\n  \n  const isUserAuthenticated = false\n\n  const setEmployee = ({employee}) => {\n    const newEmployee = {\n      firstName: employee.firstName,\n      middleInitial: employee.middleInitial,\n      lastName: employee.lastName,\n      email: employee.email,\n      phoneNumber: employee.phoneNumber,\n      tenure: employee.startDate,\n      positions: [employee.position],\n      availability: [employee.availability],\n      desiredHours: employee.desiredHours,\n    }\n    setEmployees([...employees, newEmployee])\n  }\n\n  return (\n    <Router>\n      <ThemeProvider theme={ mintTheme }>\n        <CssBaseline />\n          <NavBar/>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n                return (\n                  isUserAuthenticated ?\n                  <Redirect to=\"/home\" /> :\n                  <Redirect to=\"/sign-in\" /> \n                )\n            }}\n          />\n          <Route path='/sign-in' component={ SignIn } />\n          <Route path='/home'>\n            <Home employee={testEmployees[0]}/>\n          </Route>\n          <Route path='/schedule'>\n            <Schedule employeesSchedules={employeesSchedules} />\n          </Route>\n          <Route path='/employees'>\n            <EmployeesPage employees={employees} />\n          </Route>  \n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/themes/theme.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/themes/mintTheme.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/testData/testEmployees.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/testData/testTimes.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/styledComponents/StyledTextField.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/styledComponents/StyledButton.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/calendars/Calendar.js",["281","282","283","284","285","286"],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/calendars/PersonalCalendar.js",["287","288","289","290","291","292","293"],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/calendars/Availability.js",["294","295","296","297","298","299","300","301","302","303","304"],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/actions/employees.js",["305"],"import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes'\nimport * as api from '../api'\n\nexport const getEmployees = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchEmployees()\n\n        dispatch({ type: FETCH_ALL, payload: data})\n    } catch(error) {\n        console.log(error)\n    }\n}\n\nexport const addEmployee = (employee) => async (dispatch) => {\n    try {\n        const { data } = await api.addEmployee(employee)\n\n        dispatch({ type: CREATE, payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const deleteEmployee = (id) => async (dispatch) => {\n    try {\n        await api.deleteEmployee(id)\n\n        dispatch({ type: DELETE, payload: id })\n    } catch (error) {\n        console.log(error)\n    }\n}","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/constants/actionTypes.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/api/index.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/reducers/index.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/reducers/employees.js",["306"],"import { FETCH_ALL, DELETE, UPDATE, CREATE } from '../constants/actionTypes'\n\nexport default (employees=[], action) => {\n    switch(action.type) {\n        case FETCH_ALL:\n            return action.payload\n        case CREATE:\n            return [...employees, action.payload]\n        case DELETE:\n            return employees.filter((employee) => employee._id !== action.payload)\n        case UPDATE:\n            return employees.map((employee) => employee._id === action.payload._id ? action.payload : employee)\n        default:\n            return employees\n    }\n}","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/homePage/HomePage.js",["307","308","309","310","311","312"],"import { useState } from 'react'\nimport ReactCardFlip from 'react-card-flip'\nimport { Box, Card, Container, Grid, makeStyles, Grow } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport PersonalCalendar from '../calendars/PersonalCalendar'\nimport Availability from '../calendars/Availability'\nimport Switch from '@material-ui/core/Switch'\nimport useStyles from './styles'\n\nconst Home = ({employee}) => {\n    const classes = useStyles()\n    const [state, setState] = useState(false)\n    const [isFlipped, setIsFlipped] = useState(false)\n\n\n    return (\n        <Container className={classes.root} >\n                <Typography variant='h4' className={classes.title}>Home Page</Typography>\n                <Container className={classes.switchRow}>\n                    {/* <Typography>My Schedule</Typography> */}\n                    <Switch\n                        checked={state}\n                        onChange={ (e)=>setState(e.target.checked)}\n                        name='checked'\n                        inputProps={{ 'aria-label': 'calendar checkbox' }}\n                        />\n                    <Typography>Change My Availability</Typography>\n                </Container>\n                <Container className={classes.homeDisplay} >\n                    <Grow in>\n                        <Card className={classes.calendarCard}>\n                            {state ? \n                            <Availability employeeAvailability={employee.availability}/> :\n                            <PersonalCalendar employeeWeekSchedule={employee.weekSchedule}/>}\n                        </Card>\n                    </Grow>\n                    {/* <ReactCardFlip isFlipped={state} flipDirection='vertical'>\n                        <Card className={classes.calendarCard}>\n                            <PersonalCalendar employeeWeekSchedule={employee.weekSchedule}/>\n                        </Card>\n                        <Card className={classes.calendarCard}>\n                            <Availability employeeAvailability={employee.availability}/>\n                        </Card>\n                    </ReactCardFlip> */}\n                </Container>\n            </Container>\n    )\n}\n\nexport default Home","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/EmployeesPage.js",["313","314","315","316","317","318"],"import { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Grow, Container, Grid, Typography, } from '@material-ui/core'\nimport { getEmployees } from '../../actions/employees'\nimport EmployeeCard from './employeeCard/EmployeeCard'\nimport NewEmployeeForm from './employeeForm/EmployeeForm'\nimport useStyles from './styles'\n\nconst EmployeesView = () => {\n    const employees = useSelector((state) => state.employees)\n    const classes = useStyles()\n\n    return (\n        <Container className={classes.center}>\n            \n            \n            {/* <NewEmployeeForm /> */}\n\n            <Grow in>\n                <Grid container className={classes.grid} spacing={1}>\n                    {employees.map((employee) => (\n                        <Grid key={employee._id} item>\n                            <EmployeeCard employee={employee} />\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grow>\n        </Container>\n    )\n}\n\nexport default EmployeesView\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/SchedulePage.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/signInPage/SignInPage.js",["319","320","321","322"],"import lime from '../../images/lime.svg'\nimport { useState } from 'react'\nimport { makeStyles, } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport IconButton from '@material-ui/core/IconButton'\nimport clsx from 'clsx'\nimport Container from '@material-ui/core/Container'\nimport StyledTextField from '../../components/styledComponents/StyledTextField.js'\nimport StyledButton from '../../components/styledComponents/StyledButton.js'\nimport { Button, TextField, Grow } from '@material-ui/core'\nimport useStyles from './styles'\n\nconst Home = () => {\n    const classes = useStyles()\n    const [expanded, setExpanded] = useState(false)\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n    return (\n        <Grow in>\n            <Container className={classes.center}>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <img src={ lime } className='App-logo' alt='logo' />\n                    </CardContent>\n                    <CardContent>\n                        <Button \n                            variant='contained'\n                            color='primary'\n                            style={{width:'12rem'}} \n                            onClick={handleExpandClick}>\n                                SIGN IN\n                        </Button>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                                onClick={handleExpandClick}\n                                aria-expanded={expanded}\n                                aria-label=\"sign in\"\n                        >\n                            <ExpandMoreIcon style={{ color: 'lightgray' }} />\n                        </IconButton>\n                    </CardActions>\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                        <CardContent>\n                            <div>\n                                <TextField \n                                    className={classes.textField}\n                                    variant='outlined' \n                                    color='primary' \n                                    label='Username' \n                                    required\n                                />\n                            </div>\n                            <div>\n                                <TextField \n                                    className={classes.textField}\n                                    variant='outlined' \n                                    color='primary' \n                                    label='Password' \n                                    required\n                                    style={{marginBottom: '1rem'}}\n                                />\n                            </div>\n                        </CardContent>\n                    </Collapse>\n                </Card> \n            </Container>\n        </Grow>\n    )\n}\n\nexport default Home\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/signInPage/styles.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/styles.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/homePage/styles.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/styles.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/EmployeeForm.js",["323","324","325","326","327","328","329"],"import { Card, Typography, TextField, Button, MenuItem, Divider } from \"@material-ui/core\"\nimport { useState } from 'react'\nimport useStyles from './styles'\nimport { useDispatch } from 'react-redux'\nimport { addEmployee } from '../../../actions/employees'\nimport {formatPhoneNumber} from '../../../formatAndValidations/formatPhoneNumber'\nimport {isEmailValid} from '../../../formatAndValidations/validateEmail'\nimport { HOTLINE, COLDLINE, MAINTENANCE, FLOATER, BACKUPCASH, CASHIER, MEATPREP } from '../../../constants/positions'\n\n\nconst positions = [ MAINTENANCE, HOTLINE, COLDLINE, FLOATER, BACKUPCASH, CASHIER, MEATPREP]\n\nconst EmployeeForm = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [firstNameError, setFirstNameError] = useState(null)\n    const [firstNameHelperText, setFirstNameHelperText] = useState('')\n    const [lastNameError, setLastNameError] = useState(null)\n    const [lastNameHelperText, setLastNameHelperText] = useState('')\n    const [emailError, setEmailError] = useState(null)\n    const [emailHelperText, setEmailHelperText] = useState('')\n    const [phoneNumberError, setPhoneNumberError] = useState(null)\n    const [phoneNumberHelperText, setPhoneNumberHelperText] = useState('')\n\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        middleInitial: '',\n        lastName: '',\n        phoneNumber: '',\n        email: '',\n        positions: [MAINTENANCE],\n        availability: [\n            { \n                id: 1,\n                startDate: '2021-03-15T07:30',\n                endDate: '2021-03-15T22:30',\n                rRule: 'FREQ=WEEKLY;WKST=SU'\n            },\n            { \n                id: 2,\n                startDate: '2021-03-16T07:30',\n                endDate: '2021-03-16T22:30',\n                rRule: 'FREQ=WEEKLY;WKST=SU'\n            },\n            { \n                id: 3,\n                startDate: '2021-03-17T07:30',\n                endDate: '2021-03-17T22:30',\n                rRule: 'FREQ=WEEKLY;WKST=SU'\n            },\n            { \n                id: 4,\n                startDate: '2021-03-18T07:30',\n                endDate: '2021-03-18T22:30',\n                rRule: 'FREQ=WEEKLY;WKST=SU'\n            },\n            { \n                id: 5,\n                startDate: '2021-03-19T07:30',\n                endDate: '2021-03-19T22:30',\n                rRule: 'FREQ=WEEKLY;WKST=SU'\n            },\n            { \n                id: 6,\n                startDate: '2021-03-20T07:30',\n                endDate: '2021-03-20T22:30',\n                rRule: 'FREQ=WEEKLY;WKST=SU'\n            },\n            { \n                id: 0,\n                startDate: '2021-03-21T07:30',\n                endDate: '2021-03-21T22:30',\n                rRule: 'FREQ=WEEKLY;WKST=SU'\n            },\n        ],\n    }) \n\n    const handleFocus = (e) => {\n        const fieldName = e.target.name\n        switch (fieldName){\n            case 'firstName':{\n                setFirstNameError(null)\n                setFirstNameHelperText('')\n                break\n            }\n            case 'lastName': {\n                setLastNameError(null)\n                setLastNameHelperText('')\n                break\n            }\n            case 'email': {\n                setEmailError(null)\n                setEmailHelperText('')\n                break\n            }\n            case 'phoneNumber': {\n                setPhoneNumberError(null)\n                setPhoneNumberHelperText('')\n                break\n            }\n        }\n    }\n    \n    const handleFirstName = () => {\n        if (employee.firstName == '') {\n            setFirstNameError(true)\n            setFirstNameHelperText('Gotta have a first name!')\n        }\n        else {\n            setFirstNameError(false)\n            setFirstNameHelperText('')\n        }\n    }\n\n    const handleLastName = () => {\n        if (employee.lastName == '') {\n            setLastNameError(true)\n            setLastNameHelperText('Gotta have a last name!')\n        }\n        else {\n            setLastNameError(false)\n            setLastNameHelperText('')\n        }\n    }\n\n    const handlePhoneNumber = () => {\n        if (employee.phoneNumber.length < 14) {\n            setPhoneNumberError(true)\n            setPhoneNumberHelperText('Phone number is too short!')\n        }\n        else {\n            setPhoneNumberError(false)\n            setPhoneNumberHelperText('')\n        }\n    }\n\n    const handleEmail = () => {\n        if (!isEmailValid(employee.email)) {\n            setEmailError(true)\n            setEmailHelperText(\"That isn't a valid email!\")\n        }\n        else {\n            setEmailError(false)\n            setEmailHelperText('')\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        handleFirstName()\n        handleLastName()\n        handlePhoneNumber()\n        handleEmail()\n\n        if(firstNameError==false && lastNameError==false && phoneNumberError==false && emailError==false){\n            dispatch(addEmployee(employee))\n            clear()\n        }\n\n    }\n\n    const clear = () => {\n        setEmployee({\n            firstName: '',\n            middleInitial: '',\n            lastName: '',\n            phoneNumber: '',\n            email: '',\n            positions: MAINTENANCE,\n        })\n        setFirstNameError(null)\n        setFirstNameHelperText('')\n        setLastNameError(null)\n        setLastNameHelperText('')\n        setEmailError(null)\n        setEmailHelperText('')\n        setPhoneNumberError(null)\n        setPhoneNumberHelperText('')\n    }\n\n    return (\n        <Card className={classes.card} >\n            <form className={`${classes.root} ${classes.form}`} autoComplete=\"off\" noValidate onSubmit={handleSubmit} >\n                <Typography className={classes.title} variant=\"h5\">Add New Employee</Typography>\n                <Divider orientation=\"horizontal\" />\n                <TextField key=\"firstNameTextField\" name=\"firstName\" required error={firstNameError} variant=\"outlined\" label=\"First Name\" fullWidth value={employee.firstName} helperText={firstNameHelperText} onChange={ (e) => setEmployee({ ...employee, firstName: e.target.value.trim() })}  onFocus={ (e) => handleFocus(e) } />\n                <TextField name=\"middleInitial\" variant=\"outlined\" label=\"Middle Initial\" fullWidth value={employee.middleInitial} onChange={ (e) => setEmployee({ ...employee, middleInitial: e.target.value.toUpperCase() })} inputProps={{ maxLength:1 }}/>\n                <TextField name=\"lastName\" required error={lastNameError} variant=\"outlined\" label=\"Last Name\" fullWidth value={employee.lastName} helperText={lastNameHelperText} onChange={ (e) => setEmployee({ ...employee, lastName: e.target.value.trim() })}  onFocus={ (e) => handleFocus(e) }/>\n                <TextField name=\"phoneNumber\" required error={phoneNumberError} variant=\"outlined\" label=\"Phone Number\" fullWidth value={employee.phoneNumber} helperText={phoneNumberHelperText} onChange={ (e) => setEmployee({...employee, phoneNumber: formatPhoneNumber(e.target.value) })}  onFocus={ (e) => handleFocus(e)} />\n                <TextField name=\"email\" required error={emailError} variant=\"outlined\" label=\"Email\" fullWidth value={employee.email} helperText={emailHelperText} onChange={ (e) => setEmployee({...employee, email: e.target.value})} onFocus={ (e) => handleFocus(e) } />\n                <TextField select name=\"position\" required variant=\"outlined\" label=\"Position\" fullWidth value={employee.positions} onChange={ (e) => setEmployee({...employee, positions: e.target.value })} >\n                    {positions.map((option) => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <Button className={classes.submitButton} variant=\"contained\" color=\"primary\" size=\"large\"  type='submit' fullWidth>Submit</Button>\n                <Button className={classes.clearButton} variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Card>\n    )\n}\n\nexport default EmployeeForm\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/styles.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/navBar/NavBar.js",["330"],"import AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Container from '@material-ui/core/Container'\nimport { NavLink, Link, } from 'react-router-dom'\nimport logo from '../../images/avacado.png'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport useStyles from './styles'\n\nconst NavBar = () => {\n    const classes = useStyles()\n    return (\n        <div>\n            <AppBar className={classes.navbar} position='sticky'>\n                <ToolBar>\n                    <Link to='/home'>\n                        <img src={ logo } className='navbar-logo' alt='logo'/>\n                    </Link>\n                        <Container className={classes.navbarLinks}>\n                            <NavLink className={classes.link} to='/home'>\n                                Home\n                            </NavLink>\n                            <NavLink className={classes.link} to='/schedule' >\n                                Schedule\n                            </NavLink>\n                            <NavLink className={classes.link} to='/employees'>\n                                Employees\n                            </NavLink>\n                        </Container>\n                    <Link className='navbar-sign-in-logo' to='/sign-in'>\n                        <Typography class='material-icons md-36'>account_box</Typography>\n                    </Link>\n                </ToolBar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default NavBar\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/navBar/styles.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EmployeeCard.js",["331"],"import { useState } from 'react'\nimport ReactCardFlip from 'react-card-flip'\nimport { deleteEmployee } from '../../../actions/employees'\nimport Card from '@material-ui/core/Card'\nimport Container from '@material-ui/core/Container'\nimport Divider from '@material-ui/core/Divider'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport useStyles from './styles'\nimport { useDispatch } from 'react-redux'\n\nconst EmployeeCard = ({employee}) => {\n    const classes = useStyles()\n    const [isFlipped, setIsFlipped] = useState()\n    const dispatch = useDispatch()\n\n    return (\n        <ReactCardFlip isFlipped={isFlipped} flipDirection='vertical'>\n\n            <Card className={classes.card}>\n                <Container className={classes.cardFrontTop}>\n                    {employee.firstName} {employee.lastName}\n                    <Divider className={classes.divider}/>\n                </Container>\n                <Container className={classes.cardFrontDetails}>\n                    {employee.positions.map((position)=>\n                        <li>{position}</li>\n                    )}\n                </Container>\n                <Container className={classes.flipButtonFrontArea}>\n                    <Button \n                        className={classes.flipButton} \n                        variant='text'\n                        onClick={() => setIsFlipped(!isFlipped)}\n                    >\n                        Flip Card\n                    </Button>\n                    <Button \n                        className={classes.flipButton} \n                        variant='text' \n                        onClick={() => dispatch(deleteEmployee(employee._id))}\n                    >\n                        Delete\n                    </Button>\n                </Container>\n            </Card>\n            <Card className={classes.cardBack}>\n                <Container className={classes.cardBackContent}>\n                    <div>\n                        {employee.phoneNumber}\n                    </div>\n                    <div>\n                        {employee.email}\n                    </div>\n                    <Button \n                        className={classes.flipButton} \n                        onClick={() => setIsFlipped(!isFlipped)}\n                        >\n                            Flip Card\n                    </Button>\n                </Container>\n            </Card>\n        </ReactCardFlip>\n    )\n}\n\nexport default EmployeeCard\n","/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/styles.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/constants/positions.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/formatAndValidations/formatPhoneNumber.js",[],"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/formatAndValidations/validateEmail.js",[],{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":8,"column":8,"nodeType":"338","messageId":"339","endLine":8,"endColumn":13},{"ruleId":"336","severity":1,"message":"340","line":14,"column":10,"nodeType":"338","messageId":"339","endLine":14,"endColumn":22},{"ruleId":"336","severity":1,"message":"341","line":15,"column":10,"nodeType":"338","messageId":"339","endLine":15,"endColumn":19},{"ruleId":"336","severity":1,"message":"342","line":19,"column":30,"nodeType":"338","messageId":"339","endLine":19,"endColumn":51},{"ruleId":"336","severity":1,"message":"343","line":7,"column":8,"nodeType":"338","messageId":"339","endLine":7,"endColumn":14},{"ruleId":"336","severity":1,"message":"344","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":21},{"ruleId":"336","severity":1,"message":"345","line":3,"column":8,"nodeType":"338","messageId":"339","endLine":3,"endColumn":20},{"ruleId":"336","severity":1,"message":"346","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":13},{"ruleId":"336","severity":1,"message":"347","line":4,"column":32,"nodeType":"338","messageId":"339","endLine":4,"endColumn":36},{"ruleId":"336","severity":1,"message":"348","line":44,"column":12,"nodeType":"338","messageId":"339","endLine":44,"endColumn":21},{"ruleId":"336","severity":1,"message":"349","line":44,"column":23,"nodeType":"338","messageId":"339","endLine":44,"endColumn":35},{"ruleId":"336","severity":1,"message":"347","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":12},{"ruleId":"336","severity":1,"message":"350","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":18},{"ruleId":"336","severity":1,"message":"351","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":12},{"ruleId":"336","severity":1,"message":"352","line":10,"column":8,"nodeType":"338","messageId":"339","endLine":10,"endColumn":13},{"ruleId":"336","severity":1,"message":"353","line":14,"column":20,"nodeType":"338","messageId":"339","endLine":14,"endColumn":30},{"ruleId":"336","severity":1,"message":"354","line":15,"column":10,"nodeType":"338","messageId":"339","endLine":15,"endColumn":18},{"ruleId":"336","severity":1,"message":"355","line":6,"column":8,"nodeType":"338","messageId":"339","endLine":6,"endColumn":21},{"ruleId":"336","severity":1,"message":"356","line":9,"column":8,"nodeType":"338","messageId":"339","endLine":9,"endColumn":18},{"ruleId":"336","severity":1,"message":"357","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":20},{"ruleId":"336","severity":1,"message":"358","line":4,"column":5,"nodeType":"338","messageId":"339","endLine":4,"endColumn":17},{"ruleId":"336","severity":1,"message":"359","line":5,"column":5,"nodeType":"338","messageId":"339","endLine":5,"endColumn":22},{"ruleId":"336","severity":1,"message":"360","line":12,"column":5,"nodeType":"338","messageId":"339","endLine":12,"endColumn":20},{"ruleId":"336","severity":1,"message":"361","line":13,"column":5,"nodeType":"338","messageId":"339","endLine":13,"endColumn":23},{"ruleId":"336","severity":1,"message":"351","line":20,"column":8,"nodeType":"338","messageId":"339","endLine":20,"endColumn":12},{"ruleId":"336","severity":1,"message":"357","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":20},{"ruleId":"336","severity":1,"message":"362","line":7,"column":5,"nodeType":"338","messageId":"339","endLine":7,"endColumn":12},{"ruleId":"336","severity":1,"message":"363","line":10,"column":5,"nodeType":"338","messageId":"339","endLine":10,"endColumn":23},{"ruleId":"336","severity":1,"message":"364","line":11,"column":5,"nodeType":"338","messageId":"339","endLine":11,"endColumn":12},{"ruleId":"336","severity":1,"message":"365","line":12,"column":5,"nodeType":"338","messageId":"339","endLine":12,"endColumn":17},{"ruleId":"336","severity":1,"message":"366","line":13,"column":5,"nodeType":"338","messageId":"339","endLine":13,"endColumn":16},{"ruleId":"336","severity":1,"message":"367","line":14,"column":5,"nodeType":"338","messageId":"339","endLine":14,"endColumn":18},{"ruleId":"336","severity":1,"message":"351","line":16,"column":8,"nodeType":"338","messageId":"339","endLine":16,"endColumn":12},{"ruleId":"336","severity":1,"message":"340","line":17,"column":10,"nodeType":"338","messageId":"339","endLine":17,"endColumn":22},{"ruleId":"336","severity":1,"message":"350","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":18},{"ruleId":"336","severity":1,"message":"368","line":3,"column":8,"nodeType":"338","messageId":"339","endLine":3,"endColumn":13},{"ruleId":"336","severity":1,"message":"341","line":4,"column":8,"nodeType":"338","messageId":"339","endLine":4,"endColumn":17},{"ruleId":"336","severity":1,"message":"357","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":20},{"ruleId":"336","severity":1,"message":"369","line":17,"column":5,"nodeType":"338","messageId":"339","endLine":17,"endColumn":21},{"ruleId":"336","severity":1,"message":"370","line":19,"column":5,"nodeType":"338","messageId":"339","endLine":19,"endColumn":23},{"ruleId":"336","severity":1,"message":"371","line":20,"column":5,"nodeType":"338","messageId":"339","endLine":20,"endColumn":16},{"ruleId":"336","severity":1,"message":"367","line":21,"column":5,"nodeType":"338","messageId":"339","endLine":21,"endColumn":18},{"ruleId":"336","severity":1,"message":"364","line":22,"column":5,"nodeType":"338","messageId":"339","endLine":22,"endColumn":12},{"ruleId":"336","severity":1,"message":"365","line":23,"column":5,"nodeType":"338","messageId":"339","endLine":23,"endColumn":17},{"ruleId":"336","severity":1,"message":"372","line":25,"column":10,"nodeType":"338","messageId":"339","endLine":25,"endColumn":33},{"ruleId":"332","replacedBy":"373"},{"ruleId":"334","replacedBy":"374"},{"ruleId":"336","severity":1,"message":"337","line":8,"column":8,"nodeType":"338","messageId":"339","endLine":8,"endColumn":13},{"ruleId":"336","severity":1,"message":"341","line":14,"column":10,"nodeType":"338","messageId":"339","endLine":14,"endColumn":19},{"ruleId":"336","severity":1,"message":"375","line":20,"column":21,"nodeType":"338","messageId":"339","endLine":20,"endColumn":33},{"ruleId":"336","severity":1,"message":"342","line":22,"column":30,"nodeType":"338","messageId":"339","endLine":22,"endColumn":51},{"ruleId":"336","severity":1,"message":"376","line":30,"column":9,"nodeType":"338","messageId":"339","endLine":30,"endColumn":20},{"ruleId":"336","severity":1,"message":"357","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":20},{"ruleId":"336","severity":1,"message":"358","line":4,"column":5,"nodeType":"338","messageId":"339","endLine":4,"endColumn":17},{"ruleId":"336","severity":1,"message":"359","line":5,"column":5,"nodeType":"338","messageId":"339","endLine":5,"endColumn":22},{"ruleId":"336","severity":1,"message":"360","line":12,"column":5,"nodeType":"338","messageId":"339","endLine":12,"endColumn":20},{"ruleId":"336","severity":1,"message":"361","line":13,"column":5,"nodeType":"338","messageId":"339","endLine":13,"endColumn":23},{"ruleId":"336","severity":1,"message":"351","line":20,"column":8,"nodeType":"338","messageId":"339","endLine":20,"endColumn":12},{"ruleId":"336","severity":1,"message":"357","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":20},{"ruleId":"336","severity":1,"message":"362","line":7,"column":5,"nodeType":"338","messageId":"339","endLine":7,"endColumn":12},{"ruleId":"336","severity":1,"message":"364","line":11,"column":5,"nodeType":"338","messageId":"339","endLine":11,"endColumn":12},{"ruleId":"336","severity":1,"message":"365","line":12,"column":5,"nodeType":"338","messageId":"339","endLine":12,"endColumn":17},{"ruleId":"336","severity":1,"message":"366","line":13,"column":5,"nodeType":"338","messageId":"339","endLine":13,"endColumn":16},{"ruleId":"336","severity":1,"message":"367","line":14,"column":5,"nodeType":"338","messageId":"339","endLine":14,"endColumn":18},{"ruleId":"336","severity":1,"message":"351","line":16,"column":8,"nodeType":"338","messageId":"339","endLine":16,"endColumn":12},{"ruleId":"336","severity":1,"message":"350","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":18},{"ruleId":"336","severity":1,"message":"368","line":3,"column":8,"nodeType":"338","messageId":"339","endLine":3,"endColumn":13},{"ruleId":"336","severity":1,"message":"341","line":4,"column":8,"nodeType":"338","messageId":"339","endLine":4,"endColumn":17},{"ruleId":"336","severity":1,"message":"357","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":20},{"ruleId":"336","severity":1,"message":"369","line":17,"column":5,"nodeType":"338","messageId":"339","endLine":17,"endColumn":21},{"ruleId":"336","severity":1,"message":"370","line":19,"column":5,"nodeType":"338","messageId":"339","endLine":19,"endColumn":23},{"ruleId":"336","severity":1,"message":"371","line":20,"column":5,"nodeType":"338","messageId":"339","endLine":20,"endColumn":16},{"ruleId":"336","severity":1,"message":"367","line":21,"column":5,"nodeType":"338","messageId":"339","endLine":21,"endColumn":18},{"ruleId":"336","severity":1,"message":"364","line":22,"column":5,"nodeType":"338","messageId":"339","endLine":22,"endColumn":12},{"ruleId":"336","severity":1,"message":"365","line":23,"column":5,"nodeType":"338","messageId":"339","endLine":23,"endColumn":17},{"ruleId":"336","severity":1,"message":"372","line":25,"column":10,"nodeType":"338","messageId":"339","endLine":25,"endColumn":33},{"ruleId":"336","severity":1,"message":"377","line":1,"column":29,"nodeType":"338","messageId":"339","endLine":1,"endColumn":35},{"ruleId":"378","severity":1,"message":"379","line":3,"column":1,"nodeType":"380","endLine":16,"endColumn":2},{"ruleId":"336","severity":1,"message":"344","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":21},{"ruleId":"336","severity":1,"message":"346","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":13},{"ruleId":"336","severity":1,"message":"347","line":3,"column":32,"nodeType":"338","messageId":"339","endLine":3,"endColumn":36},{"ruleId":"336","severity":1,"message":"357","line":3,"column":38,"nodeType":"338","messageId":"339","endLine":3,"endColumn":48},{"ruleId":"336","severity":1,"message":"348","line":13,"column":12,"nodeType":"338","messageId":"339","endLine":13,"endColumn":21},{"ruleId":"336","severity":1,"message":"349","line":13,"column":23,"nodeType":"338","messageId":"339","endLine":13,"endColumn":35},{"ruleId":"336","severity":1,"message":"350","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":18},{"ruleId":"336","severity":1,"message":"381","line":1,"column":20,"nodeType":"338","messageId":"339","endLine":1,"endColumn":29},{"ruleId":"336","severity":1,"message":"382","line":2,"column":23,"nodeType":"338","messageId":"339","endLine":2,"endColumn":34},{"ruleId":"336","severity":1,"message":"356","line":3,"column":33,"nodeType":"338","messageId":"339","endLine":3,"endColumn":43},{"ruleId":"336","severity":1,"message":"383","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":22},{"ruleId":"336","severity":1,"message":"384","line":6,"column":8,"nodeType":"338","messageId":"339","endLine":6,"endColumn":23},{"ruleId":"336","severity":1,"message":"357","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":20},{"ruleId":"336","severity":1,"message":"347","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":12},{"ruleId":"336","severity":1,"message":"385","line":13,"column":8,"nodeType":"338","messageId":"339","endLine":13,"endColumn":23},{"ruleId":"336","severity":1,"message":"345","line":14,"column":8,"nodeType":"338","messageId":"339","endLine":14,"endColumn":20},{"ruleId":"386","severity":1,"message":"387","line":81,"column":9,"nodeType":"388","messageId":"389","endLine":102,"endColumn":10},{"ruleId":"390","severity":1,"message":"391","line":106,"column":32,"nodeType":"392","messageId":"393","endLine":106,"endColumn":34},{"ruleId":"390","severity":1,"message":"391","line":117,"column":31,"nodeType":"392","messageId":"393","endLine":117,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":157,"column":26,"nodeType":"392","messageId":"393","endLine":157,"endColumn":28},{"ruleId":"390","severity":1,"message":"391","line":157,"column":50,"nodeType":"392","messageId":"393","endLine":157,"endColumn":52},{"ruleId":"390","severity":1,"message":"391","line":157,"column":77,"nodeType":"392","messageId":"393","endLine":157,"endColumn":79},{"ruleId":"390","severity":1,"message":"391","line":157,"column":98,"nodeType":"392","messageId":"393","endLine":157,"endColumn":100},{"ruleId":"336","severity":1,"message":"343","line":7,"column":8,"nodeType":"338","messageId":"339","endLine":7,"endColumn":14},{"ruleId":"336","severity":1,"message":"356","line":8,"column":8,"nodeType":"338","messageId":"339","endLine":8,"endColumn":18},"no-native-reassign",["394"],"no-negated-in-lhs",["395"],"no-unused-vars","'theme' is defined but never used.","Identifier","unusedVar","'appointments' is defined but never used.","'Container' is defined but never used.","'setEmployeesSchedules' is assigned a value but never used.","'Button' is defined but never used.","'ReactCardFlip' is defined but never used.","'StyledButton' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'isFlipped' is assigned a value but never used.","'setIsFlipped' is assigned a value but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'Slide' is defined but never used.","'forwardRef' is defined but never used.","'useTheme' is defined but never used.","'EmployeesView' is defined but never used.","'Typography' is defined but never used.","'makeStyles' is defined but never used.","'EditingState' is defined but never used.","'IntegratedEditing' is defined but never used.","'AppointmentForm' is defined but never used.","'ConfirmationDialog' is defined but never used.","'DayView' is defined but never used.","'AppointmentTooltip' is defined but never used.","'Toolbar' is defined but never used.","'ViewSwitcher' is defined but never used.","'TodayButton' is defined but never used.","'DateNavigator' is defined but never used.","'Paper' is defined but never used.","'DragDropProvider' is defined but never used.","'EditRecurrenceMenu' is defined but never used.","'AllDayPanel' is defined but never used.","'areIntervalsOverlapping' is defined but never used.",["394"],["395"],"'setCurrentId' is assigned a value but never used.","'setEmployee' is assigned a value but never used.","'UPDATE' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'getEmployees' is defined but never used.","'NewEmployeeForm' is defined but never used.","'StyledTextField' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]