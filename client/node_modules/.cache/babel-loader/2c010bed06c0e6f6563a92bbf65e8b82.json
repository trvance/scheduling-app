{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/homePage/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport { Box, Card, Container, Grid, makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport PersonalCalendar from '../calendars/PersonalCalendar';\nimport Availability from '../calendars/Availability';\nimport Switch from '@material-ui/core/Switch';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  employee\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState(false);\n  const [isFlipped, setIsFlipped] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      className: classes.title,\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.switchRow,\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        checked: state,\n        onChange: e => setState(e.target.checked),\n        name: \"checked\",\n        inputProps: {\n          'aria-label': 'calendar checkbox'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Change My Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.homeDisplay,\n      children: /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        isFlipped: state,\n        flipDirection: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: classes.calendarCard,\n          children: /*#__PURE__*/_jsxDEV(PersonalCalendar, {\n            employeeWeekSchedule: employee.weekSchedule\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.calendarCard,\n          children: /*#__PURE__*/_jsxDEV(Availability, {\n            employeeAvailability: employee.availability\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"Pf7/QDTpSo73TQm/66cgc3W1rfw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/homePage/HomePage.js"],"names":["useState","ReactCardFlip","Box","Card","Container","Grid","makeStyles","Typography","PersonalCalendar","Availability","Switch","useStyles","Home","employee","classes","state","setState","isFlipped","setIsFlipped","root","title","switchRow","e","target","checked","homeDisplay","calendarCard","weekSchedule","availability"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,mBAAvD;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACzB,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AAGA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEc,OAAO,CAACK,IAA9B;AAAA,4BACQ,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAEL,OAAO,CAACM,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEN,OAAO,CAACO,SAA9B;AAAA,8BAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAEN,KADb;AAEI,QAAA,QAAQ,EAAIO,CAAD,IAAKN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,OAAV,CAF5B;AAGI,QAAA,IAAI,EAAC,SAHT;AAII,QAAA,UAAU,EAAE;AAAE,wBAAc;AAAhB;AAJhB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAYQ,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEV,OAAO,CAACW,WAA9B;AAAA,6BAMI,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEV,KAA1B;AAAiC,QAAA,aAAa,EAAC,UAA/C;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAED,OAAO,CAACY,YAAzB;AAAA,iCACI,QAAC,gBAAD;AAAkB,YAAA,oBAAoB,EAAEb,QAAQ,CAACc;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD;AAAM,UAAA,SAAS,EAAEb,OAAO,CAACY,YAAzB;AAAA,iCACI,QAAC,YAAD;AAAc,YAAA,oBAAoB,EAAEb,QAAQ,CAACe;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CApCD;;GAAMhB,I;UACcD,S;;;KADdC,I;AAsCN,eAAeA,IAAf","sourcesContent":["import { useState } from 'react'\nimport ReactCardFlip from 'react-card-flip'\nimport { Box, Card, Container, Grid, makeStyles } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport PersonalCalendar from '../calendars/PersonalCalendar'\nimport Availability from '../calendars/Availability'\nimport Switch from '@material-ui/core/Switch'\nimport useStyles from './styles'\n\nconst Home = ({employee}) => {\n    const classes = useStyles()\n    const [state, setState] = useState(false)\n    const [isFlipped, setIsFlipped] = useState(false)\n\n\n    return (\n        <Container className={classes.root} >\n                <Typography variant='h4' className={classes.title}>Home Page</Typography>\n                <Container className={classes.switchRow}>\n                    {/* <Typography>My Schedule</Typography> */}\n                    <Switch\n                        checked={state}\n                        onChange={ (e)=>setState(e.target.checked)}\n                        name='checked'\n                        inputProps={{ 'aria-label': 'calendar checkbox' }}\n                        />\n                    <Typography>Change My Availability</Typography>\n                </Container>\n                <Container className={classes.homeDisplay} >\n                        {/* <Card className={classes.calendarCard}>\n                            {state ? \n                            <Availability employeeAvailability={employee.availability}/> :\n                            <PersonalCalendar employeeWeekSchedule={employee.weekSchedule}/>}\n                        </Card> */}\n                    <ReactCardFlip isFlipped={state} flipDirection='vertical'>\n                        <Card className={classes.calendarCard}>\n                            <PersonalCalendar employeeWeekSchedule={employee.weekSchedule}/>\n                        </Card>\n                        <Card className={classes.calendarCard}>\n                            <Availability employeeAvailability={employee.availability}/>\n                        </Card>\n                    </ReactCardFlip>\n                </Container>\n            </Container>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}