{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/EmployeesPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grow, Container, Grid, Typography, Fab, Slide, Zoom, Collapse } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport EmployeeCard from './employeeCard/EmployeeCard';\nimport EditCard from './employeeCard/EditCard';\nimport NewEmployeeForm from './employeeForm/EmployeeForm';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeesView = () => {\n  _s();\n\n  const classes = useStyles();\n  const employees = useSelector(state => state.employees);\n  const [showEmployeeForm, setShowEmployeeForm] = useState(false);\n  const [showEmployeeGrid, setShowEmployeeGrid] = useState(true);\n  const [editMode, setEditMode] = useState(false);\n  const [currentId, setCurrentId] = useState(null);\n  useEffect(() => {\n    dispactch(getEmployees());\n  }, [currentId, dispatch]);\n\n  const handleAddButton = () => {\n    showEmployeeForm ? unmountEmployeeForm() : mountEmployeeForm();\n  };\n\n  const mountEmployeeForm = () => {\n    setTimeout(function () {\n      setShowEmployeeForm(!showEmployeeForm);\n    }, 250);\n    setShowEmployeeGrid(!showEmployeeGrid);\n  };\n\n  const unmountEmployeeForm = () => {\n    setShowEmployeeForm(!showEmployeeForm);\n    setTimeout(function () {\n      setShowEmployeeGrid(!showEmployeeGrid);\n    }, 250);\n  };\n\n  const handleEditButton = () => {\n    console.log(editMode);\n    setEditMode(!editMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    xs: 12,\n    spacing: 0,\n    children: [/*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"down\",\n      in: showEmployeeGrid,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: editMode ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"space-around\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"center\",\n          xs: 12,\n          spacing: 0,\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(EditCard, {\n              employee: employee\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, employee._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"space-around\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"center\",\n          xs: 12,\n          spacing: 0,\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(EmployeeCard, {\n              employee: employee\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, employee._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.buttonTray,\n      children: [/*#__PURE__*/_jsxDEV(Fab, {\n        className: classes.button,\n        color: \"primary\",\n        \"aria-label\": \"addButton\",\n        onClick: handleAddButton,\n        children: showEmployeeForm ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        className: classes.button,\n        color: \"primary\",\n        style: {\n          backgroundColor: `${editMode ? '#67af77' : '#94FBAB'}`\n        },\n        \"aria-label\": \"editButton\",\n        onClick: handleEditButton,\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"up\",\n      in: showEmployeeForm,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        className: classes.employeeFormContainer,\n        children: /*#__PURE__*/_jsxDEV(NewEmployeeForm, {\n          currentId: currentId,\n          setCurrentId: setCurrentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeesView, \"hXWUgTsTvtOSDCLi1X0MWkVe6h4=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = EmployeesView;\nexport default EmployeesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesView\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/EmployeesPage.js"],"names":["useState","useEffect","useSelector","useDispatch","Grow","Container","Grid","Typography","Fab","Slide","Zoom","Collapse","AddIcon","EditIcon","ArrowDownwardIcon","EmployeeCard","EditCard","NewEmployeeForm","useStyles","EmployeesView","classes","employees","state","showEmployeeForm","setShowEmployeeForm","showEmployeeGrid","setShowEmployeeGrid","editMode","setEditMode","currentId","setCurrentId","dispactch","getEmployees","dispatch","handleAddButton","unmountEmployeeForm","mountEmployeeForm","setTimeout","handleEditButton","console","log","map","employee","_id","buttonTray","button","backgroundColor","employeeFormContainer"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,UAAhC,EAA4CC,GAA5C,EAAiDC,KAAjD,EAAwDC,IAAxD,EAA8DC,QAA9D,QAA8E,mBAA9E;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGF,SAAS,EAAzB;AACA,QAAMG,SAAS,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACyB,gBAAD,EAAmBC,mBAAnB,IAA0C1B,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ8B,IAAAA,SAAS,CAACC,YAAY,EAAb,CAAT;AACH,GAFQ,EAEN,CAACH,SAAD,EAAYI,QAAZ,CAFM,CAAT;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC1BX,IAAAA,gBAAgB,GAAGY,mBAAmB,EAAtB,GAA2BC,iBAAiB,EAA5D;AACH,GAFD;;AAIA,QAAMA,iBAAiB,GAAG,MAAM;AAC5BC,IAAAA,UAAU,CAAC,YAAU;AAACb,MAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AAAuC,KAAnD,EAAoD,GAApD,CAAV;AACAG,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACH,GAHD;;AAKA,QAAMU,mBAAmB,GAAG,MAAM;AAC9BX,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACAc,IAAAA,UAAU,CAAC,YAAU;AAACX,MAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AAAuC,KAAnD,EAAoD,GAApD,CAAV;AACH,GAHD;;AAKA,QAAMa,gBAAgB,GAAG,MAAM;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACAC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAHD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAC,QAA3C;AAAqD,IAAA,EAAE,EAAE,EAAzD;AAA6D,IAAA,OAAO,EAAE,CAAtE;AAAA,4BAEI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,MAAlB;AAAyB,MAAA,EAAE,EAAEF,gBAA7B;AAA+C,MAAA,YAAY,MAA3D;AAA4D,MAAA,aAAa,MAAzE;AAAA,gBAGIE,QAAQ,gBAER,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAC,cAA3C;AAA0D,QAAA,UAAU,EAAC,QAArE;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAC,KAA1B;AAAgC,UAAA,OAAO,EAAC,QAAxC;AAAiD,UAAA,EAAE,EAAE,EAArD;AAAyD,UAAA,OAAO,EAAE,CAAlE;AAAA,oBACKN,SAAS,CAACoB,GAAV,CAAeC,QAAD,iBACX,QAAC,IAAD;AAAA,mCACI,QAAC,QAAD;AAAU,cAAA,QAAQ,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ,aAAWA,QAAQ,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFQ,gBAYR,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAC,cAA3C;AAA0D,QAAA,UAAU,EAAC,QAArE;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAC,KAA1B;AAAgC,UAAA,OAAO,EAAC,QAAxC;AAAiD,UAAA,EAAE,EAAE,EAArD;AAAyD,UAAA,OAAO,EAAE,CAAlE;AAAA,oBACKtB,SAAS,CAACoB,GAAV,CAAeC,QAAD,iBACX,QAAC,IAAD;AAAA,mCACI,QAAC,YAAD;AAAc,cAAA,QAAQ,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ,aAAWA,QAAQ,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eA8BI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEvB,OAAO,CAACwB,UAAzB;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAExB,OAAO,CAACyB,MAAxB;AAAgC,QAAA,KAAK,EAAC,SAAtC;AAAgD,sBAAW,WAA3D;AAAuE,QAAA,OAAO,EAAGX,eAAjF;AAAA,kBACMX,gBAAgB,gBAAG,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA0B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEH,OAAO,CAACyB,MAAxB;AAAgC,QAAA,KAAK,EAAC,SAAtC;AAAgD,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAG,GAAEnB,QAAQ,GAAG,SAAH,GAAe,SAAU;AAAtD,SAAvD;AAAiH,sBAAW,YAA5H;AAAyI,QAAA,OAAO,EAAGW,gBAAnJ;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BJ,eAuCI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,IAAjB;AAAsB,MAAA,EAAE,EAAEf,gBAA1B;AAA4C,MAAA,YAAY,MAAxD;AAAyD,MAAA,aAAa,MAAtE;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,SAAS,EAAEH,OAAO,CAAC2B,qBAAtC;AAAA,+BACI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAElB,SAA5B;AAAuC,UAAA,YAAY,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CAhFD;;GAAMX,a;UACcD,S,EACEhB,W;;;KAFhBiB,a;AAkFN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Grow, Container, Grid, Typography, Fab, Slide, Zoom, Collapse } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport EditIcon from '@material-ui/icons/Edit'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport EmployeeCard from './employeeCard/EmployeeCard'\nimport EditCard from './employeeCard/EditCard'\nimport NewEmployeeForm from './employeeForm/EmployeeForm'\nimport useStyles from './styles'\n\nconst EmployeesView = () => {\n    const classes = useStyles()\n    const employees = useSelector((state) => state.employees)\n    const [showEmployeeForm, setShowEmployeeForm] = useState(false)\n    const [showEmployeeGrid, setShowEmployeeGrid] = useState(true)\n    const [editMode, setEditMode] = useState(false)\n    const [currentId, setCurrentId] = useState(null)\n\n    useEffect(() => {\n        dispactch(getEmployees())\n    }, [currentId, dispatch])\n\n\n    const handleAddButton = () => {\n        showEmployeeForm ? unmountEmployeeForm() : mountEmployeeForm()\n    }\n    \n    const mountEmployeeForm = () => {\n        setTimeout(function(){setShowEmployeeForm(!showEmployeeForm)},250)\n        setShowEmployeeGrid(!showEmployeeGrid)\n    }\n\n    const unmountEmployeeForm = () => {\n        setShowEmployeeForm(!showEmployeeForm)\n        setTimeout(function(){setShowEmployeeGrid(!showEmployeeGrid)},250)\n    }\n\n    const handleEditButton = () => {\n        console.log(editMode)\n        setEditMode(!editMode)\n    }\n\n    return (\n        <Grid container direction=\"column\" justify=\"center\"  xs={12} spacing={0}>\n\n            <Slide direction ='down' in={showEmployeeGrid} mountOnEnter unmountOnExit>\n                {\n\n                editMode \n                ?\n                <Grid container direction=\"column\" justify=\"space-around\" alignItems=\"center\">\n                    <Grid container direction=\"row\" justify=\"center\" xs={12} spacing={0}>\n                        {employees.map((employee) => (\n                            <Grid key={employee._id} >\n                                <EditCard employee={employee}/>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n                :\n                <Grid container direction=\"column\" justify=\"space-around\" alignItems=\"center\">\n                    <Grid container direction=\"row\" justify=\"center\" xs={12} spacing={0}>\n                        {employees.map((employee) => (\n                            <Grid key={employee._id} >\n                                <EmployeeCard employee={employee}/>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n\n                }\n            </Slide>\n\n            <Grid className={classes.buttonTray}>\n                <Fab className={classes.button} color=\"primary\" aria-label=\"addButton\" onClick={ handleAddButton }>\n                    { showEmployeeForm ? <ArrowDownwardIcon/> : <AddIcon/> }\n                </Fab>\n                <Fab className={classes.button} color=\"primary\" style={{backgroundColor: `${editMode ? '#67af77' : '#94FBAB'}`}} aria-label=\"editButton\" onClick={ handleEditButton }>\n                    <EditIcon />\n                </Fab>\n            </Grid>\n\n            <Slide direction=\"up\" in={showEmployeeForm} mountOnEnter unmountOnExit>\n                <Grid item sm={12} className={classes.employeeFormContainer} >\n                    <NewEmployeeForm currentId={currentId} setCurrentId={setCurrentId} />\n                </Grid>\n            </Slide>\n\n        </Grid>\n    )\n}\n\nexport default EmployeesView\n"]},"metadata":{},"sourceType":"module"}