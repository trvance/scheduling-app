{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/SchedulePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getEmployees } from '../../actions/employees';\nimport Calendar from '../calendars/Calendar';\nimport PersonalCalendar from '../calendars/PersonalCalendar';\nimport DropDownMenuEmployees from './dropDownMenu/DropDownMenuEmployees';\nimport DropDownMenuPositions from './dropDownMenu/DropDownMenuPositions';\nimport { Container, Slide, Switch, Typography, Card, Grid } from '@material-ui/core';\nimport ReactCardFlip from 'react-card-flip';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Schedule = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isFlipped, setIsFlipped] = useState(false);\n  const dispatch = useDispatch();\n  const employees = useSelector(state => state.employees);\n  const [selectedEmployee, setSelectedEmployee] = useState(employees[0]);\n\n  const createScheduleWithNames = () => {\n    const scheduleWithNames = [];\n    employees.forEach(employee => {\n      let name = `${employee.firstName} ${employee.lastName}`;\n      employee.weekSchedule.forEach(shift => {\n        let shiftTitle = `${name} - ${shift.title}`;\n        let tempShift = { ...shift\n        };\n        tempShift.title = shiftTitle;\n        scheduleWithNames.push(tempShift);\n      });\n    });\n    return scheduleWithNames;\n  };\n\n  const employeesSchedules = createScheduleWithNames();\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    in: true,\n    direction: \"left\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      display: \"flex\",\n      justify: \"center\",\n      direction: \"column\",\n      alignItems: \"center\",\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        justify: \"center\",\n        direction: \"row\",\n        alignItems: \"center\",\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          justify: \"center\",\n          direction: \"row\",\n          alignItems: \"center\",\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(DropDownMenuEmployees, {\n            selectedEmployee: selectedEmployee,\n            setSelectedEmployee: setSelectedEmployee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          justify: \"center\",\n          direction: \"row\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Switch, {\n            checked: isFlipped,\n            onChange: e => setIsFlipped(e.target.checked),\n            name: \"checked\",\n            inputProps: {\n              'aria-label': 'calendar checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"View Everyone's Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        flipSpeedFrontToBack: \".5\",\n        flipSpeedBackToFront: \".5\",\n        isFlipped: isFlipped,\n        flipDirection: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: classes.calendarCard,\n          children: /*#__PURE__*/_jsxDEV(PersonalCalendar, {\n            employee: selectedEmployee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.calendarCard,\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            employeesSchedules: employeesSchedules\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Schedule, \"QH9biGGOJ86yzhUHMF0ZFtO+X10=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Schedule;\nexport default Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/SchedulePage.js"],"names":["useState","useEffect","useSelector","useDispatch","getEmployees","Calendar","PersonalCalendar","DropDownMenuEmployees","DropDownMenuPositions","Container","Slide","Switch","Typography","Card","Grid","ReactCardFlip","useStyles","Schedule","classes","isFlipped","setIsFlipped","dispatch","employees","state","selectedEmployee","setSelectedEmployee","createScheduleWithNames","scheduleWithNames","forEach","employee","name","firstName","lastName","weekSchedule","shift","shiftTitle","title","tempShift","push","employeesSchedules","e","target","checked","calendarCard"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getEmployees } from '../../actions/employees'\nimport Calendar from '../calendars/Calendar'\nimport PersonalCalendar from '../calendars/PersonalCalendar'\nimport DropDownMenuEmployees from './dropDownMenu/DropDownMenuEmployees'\nimport DropDownMenuPositions from './dropDownMenu/DropDownMenuPositions'\nimport { Container, Slide, Switch, Typography, Card, Grid } from '@material-ui/core'\nimport ReactCardFlip from 'react-card-flip'\nimport useStyles from './styles'\n\nconst Schedule = () => {\n    const classes = useStyles()\n    const [isFlipped, setIsFlipped] = useState(false)\n    const dispatch = useDispatch()\n    const employees = useSelector((state) => state.employees)\n    const [selectedEmployee, setSelectedEmployee] = useState(employees[0])\n    \n    const createScheduleWithNames = () => {\n        const scheduleWithNames = []\n        employees.forEach((employee) => {\n            let name = `${employee.firstName} ${employee.lastName}`\n            employee.weekSchedule.forEach((shift) => {\n                let shiftTitle = `${name} - ${shift.title}`\n                let tempShift = {...shift}\n                tempShift.title = shiftTitle\n                scheduleWithNames.push(tempShift)\n            })\n        })\n        return scheduleWithNames\n    }\n    \n    const employeesSchedules = createScheduleWithNames()\n\n\n    return (\n        <Slide in direction=\"left\">\n            <Grid container display='flex' justify='center' direction='column' alignItems='center' spacing={0}>\n                <Grid container item justify='center' direction='row' alignItems='center' xs={12}>\n                    <Grid item justify='center' direction='row' alignItems='center' xs={6}>\n                        <DropDownMenuEmployees selectedEmployee={selectedEmployee} setSelectedEmployee={setSelectedEmployee} />\n                    </Grid>\n                    <Grid item justify='center' direction='row' alignItems='center'>\n                        <Switch\n                            checked={isFlipped}\n                            onChange={ (e)=>setIsFlipped(e.target.checked)}\n                            name='checked'\n                            inputProps={{ 'aria-label': 'calendar checkbox' }}\n                        />\n                        <Typography>View Everyone's Schedule</Typography>\n                    </Grid>\n                </Grid>\n                <ReactCardFlip flipSpeedFrontToBack='.5' flipSpeedBackToFront='.5' isFlipped={isFlipped} flipDirection='vertical'>\n                    <Card className={classes.calendarCard}>\n                        <PersonalCalendar employee={selectedEmployee} />\n                    </Card>\n                    <Card className={classes.calendarCard}>\n                        <Calendar employeesSchedules={employeesSchedules} />\n                    </Card>\n                </ReactCardFlip>\n            </Grid>\n        </Slide>\n    )\n}\n\nexport default Schedule\n"]},"metadata":{},"sourceType":"module"}