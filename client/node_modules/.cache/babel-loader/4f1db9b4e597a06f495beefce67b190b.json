{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, WeekView, Appointments, AppointmentForm, AppointmentTooltip, DragDropProvider, ConfirmationDialog, EditRecurrenceMenu, AllDayPanel, DateNavigator, Toolbar, ViewSwitcher } from '@devexpress/dx-react-scheduler-material-ui';\nimport { areIntervalsOverlapping } from 'date-fns';\nimport { testEmployees } from '../../testData/testEmployees'; // const Availability = ({employeeAvailability}) => {\n//     const currentDate = new Date()\n//     const [availability, setAvailability] = useState(employeeAvailability)\n//     const commitChanges = ({ added, changed, deleted }) => {\n//         if (added) {\n//             setAvailability([...availability, {...added}])\n//         }\n//         if (changed) {\n//              setAvailability(() => availability.map(appointment => (\n//                 changed[appointment] ? [...appointment, {...changed}] : appointment\n//              )))\n//         }\n//         if (deleted !== undefined) {\n//             setAvailability(() => availability.filter(appointment => appointment.id !== deleted))\n//         }\n//     }\n//     return (\n//             <Scheduler\n//                 data={availability}\n//                 firstDayOfWeek={1}\n//             >\n//                 <ViewState\n//                     defaultCurrentDate={currentDate}\n//                 />\n//                 <WeekView\n//                     startDayHour={6}\n//                     cellDuration={120}\n//                     endDayHour={24}\n//                 />\n//                 <EditingState onCommitChanges={commitChanges}/>\n//                 <IntegratedEditing />\n//                 <ConfirmationDialog />\n//                 <Appointments />\n//                 <AppointmentTooltip \n//                     showOpenButton\n//                     showCloseButton\n//                     showDeleteButton\n//                 />\n//                 <AppointmentForm />\n//                 <DragDropProvider />\n//             </Scheduler>\n//     )\n// }\n// export default Availability\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dragDisableIds = new Set([0, 1, 2, 3, 4, 5, 6, 7]);\n\nconst allowDrag = ({\n  id\n}) => !dragDisableIds.has(id);\n\nconst appointmentComponent = props => {\n  if (allowDrag(props.data)) {\n    return /*#__PURE__*/_jsxDEV(Appointments.Appointment, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Appointments.Appointment, { ...props,\n    style: { ...props.style\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 12\n  }, this);\n};\n\nexport default class Availability extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: testEmployees[0].availability.map(),\n      currentDate: new Date()\n    };\n    this.onCommitChanges = this.commitChanges.bind(this);\n  }\n\n  commitChanges({\n    added,\n    changed,\n    deleted\n  }) {\n    this.setState(state => {\n      let {\n        data\n      } = state;\n\n      if (added) {\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n        data = [...data, {\n          id: startingAddedId,\n          ...added\n        }];\n      }\n\n      if (changed) {\n        data = data.map(appointment => changed[appointment.id] ? { ...appointment,\n          ...changed[appointment.id]\n        } : appointment);\n      }\n\n      if (deleted !== undefined) {\n        data = data.filter(appointment => appointment.id !== deleted);\n      }\n\n      return {\n        data\n      };\n    });\n  }\n\n  render() {\n    const {\n      data,\n      currentDate\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Scheduler, {\n        data: data,\n        height: 660,\n        children: [/*#__PURE__*/_jsxDEV(ViewState, {\n          defaultCurrentDate: currentDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditingState, {\n          onCommitChanges: this.onCommitChanges\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditRecurrenceMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeekView, {\n          startDayHour: 9,\n          endDayHour: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Appointments, {\n          appointmentComponent: appointmentComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AllDayPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DragDropProvider, {\n          allowDrag: allowDrag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js"],"names":["React","useState","Paper","makeStyles","ViewState","EditingState","IntegratedEditing","Scheduler","WeekView","Appointments","AppointmentForm","AppointmentTooltip","DragDropProvider","ConfirmationDialog","EditRecurrenceMenu","AllDayPanel","DateNavigator","Toolbar","ViewSwitcher","areIntervalsOverlapping","testEmployees","dragDisableIds","Set","allowDrag","id","has","appointmentComponent","props","data","style","Availability","PureComponent","constructor","state","availability","map","currentDate","Date","onCommitChanges","commitChanges","bind","added","changed","deleted","setState","startingAddedId","length","appointment","undefined","filter","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { \n    ViewState, \n    EditingState, \n    IntegratedEditing,\n } from '@devexpress/dx-react-scheduler'\nimport { \n    Scheduler,  \n    WeekView,\n    Appointments, \n    AppointmentForm,\n    AppointmentTooltip,\n    DragDropProvider,\n    ConfirmationDialog,\n    EditRecurrenceMenu,\n    AllDayPanel,\n    DateNavigator,\n    Toolbar,\n    ViewSwitcher,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport { areIntervalsOverlapping } from 'date-fns'\nimport { testEmployees } from '../../testData/testEmployees'\n\n// const Availability = ({employeeAvailability}) => {\n//     const currentDate = new Date()\n//     const [availability, setAvailability] = useState(employeeAvailability)\n\n//     const commitChanges = ({ added, changed, deleted }) => {\n//         if (added) {\n//             setAvailability([...availability, {...added}])\n//         }\n//         if (changed) {\n//              setAvailability(() => availability.map(appointment => (\n//                 changed[appointment] ? [...appointment, {...changed}] : appointment\n//              )))\n//         }\n//         if (deleted !== undefined) {\n//             setAvailability(() => availability.filter(appointment => appointment.id !== deleted))\n//         }\n//     }\n\n//     return (\n//             <Scheduler\n//                 data={availability}\n//                 firstDayOfWeek={1}\n//             >\n//                 <ViewState\n//                     defaultCurrentDate={currentDate}\n//                 />\n//                 <WeekView\n//                     startDayHour={6}\n//                     cellDuration={120}\n//                     endDayHour={24}\n//                 />\n//                 <EditingState onCommitChanges={commitChanges}/>\n//                 <IntegratedEditing />\n//                 <ConfirmationDialog />\n//                 <Appointments />\n//                 <AppointmentTooltip \n//                     showOpenButton\n//                     showCloseButton\n//                     showDeleteButton\n//                 />\n//                 <AppointmentForm />\n//                 <DragDropProvider />\n//             </Scheduler>\n//     )\n// }\n\n// export default Availability\n\n\n\nconst dragDisableIds = new Set([0,1,2,3,4,5,6,7]);\n\nconst allowDrag = ({ id }) => !dragDisableIds.has(id);\nconst appointmentComponent = (props) => {\n  if (allowDrag(props.data)) {\n    return <Appointments.Appointment {...props} />;\n  } return <Appointments.Appointment {...props} style={{ ...props.style}} />;\n};\n\nexport default class Availability extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: testEmployees[0].availability.map(),\n      currentDate: new Date(),\n    };\n\n    this.onCommitChanges = this.commitChanges.bind(this);\n  }\n\n  commitChanges({ added, changed, deleted }) {\n    this.setState((state) => {\n      let { data } = state;\n      if (added) {\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n        data = [...data, { id: startingAddedId, ...added }];\n      }\n      if (changed) {\n        data = data.map(appointment => (\n          changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\n      }\n      if (deleted !== undefined) {\n        data = data.filter(appointment => appointment.id !== deleted);\n      }\n      return { data };\n    });\n  }\n\n  render() {\n    const { data, currentDate } = this.state;\n\n    return (\n      <Paper>\n        <Scheduler\n          data={data}\n          height={660}\n        >\n          <ViewState\n            defaultCurrentDate={currentDate}\n          />\n          <EditingState\n            onCommitChanges={this.onCommitChanges}\n          />\n          <EditRecurrenceMenu />\n          <WeekView\n            startDayHour={9}\n            endDayHour={16}\n          />\n          <Appointments\n            appointmentComponent={appointmentComponent}\n          />\n          <AllDayPanel />\n          <DragDropProvider\n            allowDrag={allowDrag}\n          />\n        </Scheduler>\n      </Paper>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}