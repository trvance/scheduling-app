{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/generateScheduleButton/GenerateScheduleButton.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Typography, Grid } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editEmployee } from '../../actions/employees';\nimport shifts from '../../testData/weekShifts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenerateScheduleButton = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const employees = useSelector(state => state.employees);\n  const [employee, setEmployee] = useState(null);\n  const [currentId, setCurrentId] = useState(null);\n\n  const random = array => {\n    console.log(\"New\");\n\n    for (let i = array.length - 1; i >= 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n\n      for (let x = array.length - 1; x >= 0; x--) {\n        const y = Math.floor(Math.random() * (x + 1));\n        [array[x], array[y]] = [array[y], array[x]];\n      }\n    }\n  }; // useEffect(()=> {\n  //     if(employee) dispatch(editEmployee(currentId, employee))\n  // }, [employee])\n\n\n  const createSchedule = () => {\n    setEmployee(employees[0]);\n    setCurrentId(employees[0]._id);\n    setEmployee({ ...employee,\n      weekSchedule: [{\n        title: 'Cold Line',\n        startDate: '2021-04-26T08:30',\n        endDate: '2021-04-26T16:00'\n      }, {\n        title: 'Hot Line',\n        startDate: '2021-04-27T16:00',\n        endDate: '2021-04-27T22:30'\n      }, {\n        title: 'Cold Line',\n        startDate: '2021-04-28T08:30',\n        endDate: '2021-04-28T16:00'\n      }, {\n        title: 'Cold Line',\n        startDate: '2021-04-28T16:00',\n        endDate: '2021-04-28T22:30'\n      }, {\n        title: 'Floater',\n        startDate: '2021-04-29T15:30',\n        endDate: '2021-04-29T22:30'\n      }, {\n        title: 'Floater',\n        startDate: '2021-04-30T15:30',\n        endDate: '2021-04-30T22:30'\n      }]\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //createSchedule()\n\n    let day = random(shifts);\n    random(shifts);\n    console.log(employee); //dispatch(editEmployee(currentId, employee))\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      color: \"secondary\",\n      style: {\n        width: 300,\n        height: 50,\n        margin: 50\n      },\n      variant: \"contained\",\n      onClick: handleSubmit,\n      children: \"Generate Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GenerateScheduleButton, \"SSihlLhZTw7P3LZ6O7K5qGSIqqg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GenerateScheduleButton;\nexport default GenerateScheduleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateScheduleButton\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/generateScheduleButton/GenerateScheduleButton.js"],"names":["Button","Typography","Grid","useState","useEffect","useDispatch","useSelector","editEmployee","shifts","GenerateScheduleButton","dispatch","employees","state","employee","setEmployee","currentId","setCurrentId","random","array","console","log","i","length","j","Math","floor","x","y","createSchedule","_id","weekSchedule","title","startDate","endDate","handleSubmit","e","preventDefault","day","width","height","margin"],"mappings":"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","sourcesContent":["import { Button, Typography, Grid } from \"@material-ui/core\"\nimport { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { editEmployee } from '../../actions/employees'\nimport shifts from '../../testData/weekShifts'\n\n\nconst GenerateScheduleButton = () => {\n    const dispatch = useDispatch()\n    const employees = useSelector((state) => state.employees)\n    const [employee, setEmployee] = useState(null)\n    const [currentId, setCurrentId] = useState(null)\n    \n    const random = (array) => {\n        console.log(\"New\")\n        for (let i = array.length - 1; i >= 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n            for (let x = array.length - 1; x >= 0; x--) {\n                const y = Math.floor(Math.random() * (x + 1));\n                [array[x], array[y]] = [array[y], array[x]];\n            }\n        }\n    }\n    // useEffect(()=> {\n    //     if(employee) dispatch(editEmployee(currentId, employee))\n    // }, [employee])\n\n    const createSchedule = () => {\n        setEmployee(employees[0])\n        setCurrentId(employees[0]._id)\n        setEmployee({...employee, weekSchedule:[\n            {\n            title: 'Cold Line',\n            startDate: '2021-04-26T08:30', \n            endDate: '2021-04-26T16:00', \n            },\n            {\n            title: 'Hot Line',\n            startDate: '2021-04-27T16:00', \n            endDate: '2021-04-27T22:30', \n            },\n            {\n            title: 'Cold Line',\n            startDate: '2021-04-28T08:30', \n            endDate: '2021-04-28T16:00', \n            },\n            {\n            title: 'Cold Line',\n            startDate: '2021-04-28T16:00', \n            endDate: '2021-04-28T22:30', \n            },\n            {\n            title: 'Floater',\n            startDate: '2021-04-29T15:30', \n            endDate: '2021-04-29T22:30', \n            },\n            {\n            title: 'Floater',\n            startDate: '2021-04-30T15:30', \n            endDate: '2021-04-30T22:30', \n            },\n        ]})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        //createSchedule()\n        let day = random(shifts)\n        random(shifts)\n        console.log(employee)\n        //dispatch(editEmployee(currentId, employee))\n    }\n\n    \n    return (\n        <Grid direction='column' justify='center' alignItems='center'>\n            <Button color='secondary' style={{width: 300, height: 50, margin:50}} variant='contained' onClick={handleSubmit}>\n                Generate Schedule\n            </Button>\n        </Grid>\n    )\n}\n\nexport default GenerateScheduleButton\n"]},"metadata":{},"sourceType":"module"}