{"ast":null,"code":"const date = new Date();\nconst floaterMorningStartTime = [7, 30, 0];\nconst floaterMorningEndTime = [16, 0, 0];\nconst floaterEveningStartTime = [15, 30, 0];\nconst floaterEveningEndTime = [22, 30, 0];\nconst coldLineMorningStartTime = [8, 30, 0];\nconst coldLineMorningEndTime = [16, 0, 0];\nconst coldLineEveningStartTime = [16, 0, 0];\nconst coldLineEveningEndTime = [22, 30, 0];\nconst hotLineMorningStartTime = [9, 30, 0];\nconst hotLineMorningEndTime = [16, 0, 0];\nconst hotLineEveningStartTime = [16, 0, 0];\nconst hotLineEveningEndTime = [22, 30, 0];\nconst backupHotLineEveningStartTime = [17, 0, 0];\nconst backupHotLineEveningEndTime = [21, 0, 0];\nconst cashierMorningStartTime = [8, 30, 0];\nconst cashierMorningEndTime = [16, 0, 0];\nconst cashierEveningStartTime = [16, 0, 0];\nconst cashierEveningEndTime = [22, 30, 0];\nconst backupCashierMorningStartTime = [8, 30, 0];\nconst backupCashierMorningEndTime = [16, 0, 0];\nconst backupCashierEveningStartTime = [16, 0, 0];\nconst backupCashierEveningEndTime = [22, 30, 0];\nlet sunday = new Date();\nlet monday = new Date();\nlet tuesday = new Date();\nlet wednesday = new Date();\nlet thursday = new Date();\nlet friday = new Date();\nlet saturday = new Date();\n\nswitch (date.getDay()) {\n  case 0:\n    break;\n\n  case 1:\n    break;\n\n  case 2:\n    break;\n\n  case 3:\n    break;\n\n  case 4:\n    break;\n\n  case 5:\n    console.log(\"hello\");\n    sunday = new Date(sunday.setDate(sunday.getDate() - 5 + 7));\n    monday = new Date(monday.setDate(monday.getDate() - 4 + 7));\n    tuesday = new Date(tuesday.setDate(tuesday.getDate() - 3 + 7));\n    wednesday = new Date(wednesday.setDate(wednesday.getDate() - 2 + 7));\n    thursday = new Date(thursday.setDate(thursday.getDate() - 1 + 7));\n    friday = new Date(friday.setDate(friday.getDate() + 0 + 7));\n    saturday = new Date(saturday.setDate(saturday.getDate() + 1 + 7));\n    break;\n\n  case 6:\n    break;\n}\n\nconst shifts = [//Sunday shifts\n[{\n  title: \"Floater\",\n  startTime: `${sunday = new Date(sunday.setHours(floaterMorningStartTime[0], floaterMorningStartTime[1], floaterMorningStartTime[2]))}`,\n  endTime: `${sunday = new Date(sunday.setHours(floaterMorningEndTime[0], floaterMorningEndTime[1], floaterMorningEndTime[2]))}`\n}], //Monday shifts\n[//Monday morning shifts\n{\n  title: \"Floater\",\n  startTime: `${monday = new Date(monday.setHours(floaterMorningStartTime[0], floaterMorningStartTime[1], floaterMorningStartTime[2]))}`,\n  endTime: `${monday = new Date(monday.setHours(floaterMorningEndTime[0], floaterMorningEndTime[1], floaterMorningEndTime[2]))}`\n}, {\n  title: \"Cold Line\",\n  startTime: `${monday = new Date(monday.setHours(coldLineMorningStartTime[0], coldLineMorningStartTime[1], coldLineMorningStartTime[2]))}`,\n  endTime: `${monday = new Date(monday.setHours(coldLineMorningEndTime[0], coldLineMorningEndTime[1], coldLineMorningEndTime[2]))}`\n}, {\n  title: \"Hot Line\",\n  startTime: `${monday = new Date(monday.setHours(hotLineMorningStartTime[0], hotLineMorningStartTime[1], hotLineMorningStartTime[2]))}`,\n  endTime: `${monday = new Date(monday.setHours(hotLineMorningEndTime[0], hotLineMorningEndTime[1], hotLineMorningEndTime[2]))}`\n}, {\n  title: \"Cashier\"\n} //Monday evening shifts\n]];\nexport default shifts;","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/testData/weekShifts.js"],"names":["date","Date","floaterMorningStartTime","floaterMorningEndTime","floaterEveningStartTime","floaterEveningEndTime","coldLineMorningStartTime","coldLineMorningEndTime","coldLineEveningStartTime","coldLineEveningEndTime","hotLineMorningStartTime","hotLineMorningEndTime","hotLineEveningStartTime","hotLineEveningEndTime","backupHotLineEveningStartTime","backupHotLineEveningEndTime","cashierMorningStartTime","cashierMorningEndTime","cashierEveningStartTime","cashierEveningEndTime","backupCashierMorningStartTime","backupCashierMorningEndTime","backupCashierEveningStartTime","backupCashierEveningEndTime","sunday","monday","tuesday","wednesday","thursday","friday","saturday","getDay","console","log","setDate","getDate","shifts","title","startTime","setHours","endTime"],"mappings":"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","sourcesContent":["const date = new Date()\n\nconst floaterMorningStartTime = [7, 30, 0];\nconst floaterMorningEndTime = [16, 0, 0];\nconst floaterEveningStartTime = [15, 30, 0];\nconst floaterEveningEndTime = [22, 30, 0];\n\nconst coldLineMorningStartTime = [8, 30, 0];\nconst coldLineMorningEndTime = [16, 0, 0];\nconst coldLineEveningStartTime = [16, 0, 0];\nconst coldLineEveningEndTime = [22, 30, 0];\n\nconst hotLineMorningStartTime = [9, 30, 0];\nconst hotLineMorningEndTime = [16, 0, 0];\nconst hotLineEveningStartTime = [16, 0, 0];\nconst hotLineEveningEndTime = [22, 30, 0];\n\nconst backupHotLineEveningStartTime = [17, 0, 0];\nconst backupHotLineEveningEndTime = [21, 0, 0];\n\nconst cashierMorningStartTime = [8, 30, 0];\nconst cashierMorningEndTime = [16, 0, 0];\nconst cashierEveningStartTime = [16, 0, 0];\nconst cashierEveningEndTime = [22, 30, 0];\n\nconst backupCashierMorningStartTime = [8, 30, 0];\nconst backupCashierMorningEndTime = [16, 0, 0];\nconst backupCashierEveningStartTime = [16, 0, 0];\nconst backupCashierEveningEndTime = [22, 30, 0];\n\n\n\nlet sunday = new Date()\nlet monday = new Date()\nlet tuesday = new Date()\nlet wednesday = new Date()\nlet thursday = new Date()\nlet friday = new Date()\nlet saturday = new Date()\n\n\nswitch (date.getDay()) {\n    case 0:\n        break;\n    case 1:\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n        break;\n    case 5:\n        console.log(\"hello\");\n        sunday = new Date(sunday.setDate(sunday.getDate() - 5 + 7))\n        monday = new Date(monday.setDate(monday.getDate() - 4 + 7))\n        tuesday = new Date(tuesday.setDate(tuesday.getDate() - 3 + 7))\n        wednesday = new Date(wednesday.setDate(wednesday.getDate() - 2 + 7))\n        thursday = new Date(thursday.setDate(thursday.getDate() - 1 + 7))\n        friday = new Date(friday.setDate(friday.getDate() + 0 + 7))\n        saturday = new Date(saturday.setDate(saturday.getDate() + 1 + 7))\n        break;\n    case 6:\n        break;\n}\n\n\nconst shifts = [\n\n    //Sunday shifts\n    [\n        {\n            title: \"Floater\",\n            startTime: `${sunday = new Date(sunday.setHours(floaterMorningStartTime[0], floaterMorningStartTime[1], floaterMorningStartTime[2]))}`,\n            endTime: `${sunday = new Date(sunday.setHours(floaterMorningEndTime[0], floaterMorningEndTime[1], floaterMorningEndTime[2]))}`\n        },\n    ],\n\n    //Monday shifts\n    [\n        //Monday morning shifts\n        {\n            title: \"Floater\",\n            startTime: `${monday = new Date(monday.setHours(floaterMorningStartTime[0], floaterMorningStartTime[1], floaterMorningStartTime[2]))}`,\n            endTime: `${monday = new Date(monday.setHours(floaterMorningEndTime[0], floaterMorningEndTime[1], floaterMorningEndTime[2]))}`\n        },\n        {\n            title: \"Cold Line\",\n            startTime: `${monday = new Date(monday.setHours(coldLineMorningStartTime[0], coldLineMorningStartTime[1], coldLineMorningStartTime[2]))}`,\n            endTime: `${monday = new Date(monday.setHours(coldLineMorningEndTime[0], coldLineMorningEndTime[1], coldLineMorningEndTime[2]))}`\n        },\n        {\n            title: \"Hot Line\",\n            startTime: `${monday = new Date(monday.setHours(hotLineMorningStartTime[0], hotLineMorningStartTime[1], hotLineMorningStartTime[2]))}`,\n            endTime: `${monday = new Date(monday.setHours(hotLineMorningEndTime[0], hotLineMorningEndTime[1], hotLineMorningEndTime[2]))}`\n        },\n        {\n            title: \"Cashier\",\n\n        },\n\n        //Monday evening shifts\n    ],\n\n]\n\nexport default shifts"]},"metadata":{},"sourceType":"module"}