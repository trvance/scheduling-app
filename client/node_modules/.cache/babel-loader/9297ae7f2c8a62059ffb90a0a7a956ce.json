{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/SchedulePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getEmployees } from '../../actions/employees';\nimport Calendar from '../calendars/Calendar';\nimport PersonalCalendar from '../calendars/PersonalCalendar';\nimport Card from '@material-ui/core/Card';\nimport { Container, Slide, Switch, Typography } from '@material-ui/core';\nimport ReactCardFlip from 'react-card-flip';\nimport useStyles from './styles';\nimport { testEmployees } from '../../testData/testEmployees';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Schedule = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isFlipped, setIsFlipped] = useState(false);\n  const dispatch = useDispatch();\n  const employees = useSelector(state => state.employees);\n  const [employeesSchedules, setEmployeesSchedules] = useState(createScheduleWithNames() ? createScheduleWithNames : []);\n\n  const createScheduleWithNames = () => {\n    const scheduleWithNames = [];\n    employees.forEach(employee => {\n      let name = employee.firstName + \" \" + employee.lastName;\n      employee.weekSchedule.forEach(schedule => {\n        schedule.title = name + \" - \" + schedule.title;\n        scheduleWithNames.push(schedule);\n      });\n    });\n    console.log(scheduleWithNames);\n    setEmployeesSchedules(scheduleWithNames); // return scheduleWithNames\n  };\n\n  const employee = employees[0]; // useEffect(() => {\n  //     if(!employees) setEmployeesSchedules(createScheduleWithNames())\n  // }, [employeesSchedules])\n\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    in: true,\n    direction: \"left\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.center,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: classes.switchRow,\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          checked: isFlipped,\n          onChange: e => setIsFlipped(e.target.checked),\n          name: \"checked\",\n          inputProps: {\n            'aria-label': 'calendar checkbox'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"View Everyone's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        flipSpeedFrontToBack: \".5\",\n        flipSpeedBackToFront: \".5\",\n        isFlipped: isFlipped,\n        flipDirection: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: classes.calendarCard,\n          children: /*#__PURE__*/_jsxDEV(PersonalCalendar, {\n            employee: employee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.calendarCard,\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            employeesSchedules: employeesSchedules\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Schedule, \"BwQkXfiYz007GSs3t1nZkPM9MKI=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Schedule;\nexport default Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/SchedulePage.js"],"names":["useState","useEffect","useSelector","useDispatch","getEmployees","Calendar","PersonalCalendar","Card","Container","Slide","Switch","Typography","ReactCardFlip","useStyles","testEmployees","Schedule","classes","isFlipped","setIsFlipped","dispatch","employees","state","employeesSchedules","setEmployeesSchedules","createScheduleWithNames","scheduleWithNames","forEach","employee","name","firstName","lastName","weekSchedule","schedule","title","push","console","log","center","switchRow","e","target","checked","calendarCard"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getEmployees } from '../../actions/employees'\nimport Calendar from '../calendars/Calendar'\nimport PersonalCalendar from '../calendars/PersonalCalendar'\nimport Card from '@material-ui/core/Card'\nimport { Container, Slide, Switch, Typography } from '@material-ui/core'\nimport ReactCardFlip from 'react-card-flip'\nimport useStyles from './styles'\nimport { testEmployees } from '../../testData/testEmployees'\n\nconst Schedule = () => {\n    const classes = useStyles()\n    const [isFlipped, setIsFlipped] = useState(false)\n    const dispatch = useDispatch()\n    const employees = useSelector((state) => state.employees)\n    const [employeesSchedules, setEmployeesSchedules] = useState( createScheduleWithNames() ? createScheduleWithNames : [])\n\n    \n    const createScheduleWithNames = () => {\n        const scheduleWithNames = []\n        employees.forEach((employee) => {\n            let name = employee.firstName + \" \" + employee.lastName\n            employee.weekSchedule.forEach((schedule) => {\n                schedule.title = name + \" - \" + schedule.title\n                scheduleWithNames.push(schedule)\n            })\n        })\n        console.log(scheduleWithNames)\n        setEmployeesSchedules(scheduleWithNames)\n        // return scheduleWithNames\n    }\n    \n    const employee = employees[0]\n    \n    // useEffect(() => {\n    //     if(!employees) setEmployeesSchedules(createScheduleWithNames())\n    // }, [employeesSchedules])\n\n\n    return (\n        <Slide in direction=\"left\">\n            <Container className={classes.center}>\n                <Container className={classes.switchRow}>\n                    <Switch\n                        checked={isFlipped}\n                        onChange={ (e)=>setIsFlipped(e.target.checked)}\n                        name='checked'\n                        inputProps={{ 'aria-label': 'calendar checkbox' }}\n                    />\n                    <Typography>View Everyone's Schedule</Typography>\n                </Container>\n                <ReactCardFlip flipSpeedFrontToBack='.5' flipSpeedBackToFront='.5' isFlipped={isFlipped} flipDirection='vertical'>\n                    <Card className={classes.calendarCard}>\n                        <PersonalCalendar employee={employee} />\n                    </Card>\n                    <Card className={classes.calendarCard}>\n                        <Calendar employeesSchedules={employeesSchedules} />\n                    </Card>\n                </ReactCardFlip>\n            </Container>\n        </Slide>\n    )\n}\n\nexport default Schedule\n"]},"metadata":{},"sourceType":"module"}