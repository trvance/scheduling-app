{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Card, Container, Typography, Divider, Grid, IconButton, Slide } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/ListRounded';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCard = ({\n  employee,\n  currentId,\n  setCurrentId,\n  setShowEmployeeForm,\n  setShowEmployeeGrid\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(true);\n\n  const warningDialog = () => {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-slide-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleClose = () => {};\n\n  const handleEditButton = () => {\n    setCurrentId(employee._id);\n    setShowEmployeeGrid(false);\n    setShowEmployeeForm(true);\n  };\n\n  const handleDeleteButton = () => {\n    setCurrentId(employee._id);\n    warningDialog();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: classes.cardFrontTop,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: [employee.firstName, \" \", employee.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Slide, {\n        direction: \"down\",\n        in: true,\n        timeout: 400,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleEditButton,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            style: {\n              color: 'lightgrey',\n              fontSize: 80\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Slide, {\n        direction: \"up\",\n        in: true,\n        timeout: 600,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => warningDialog(),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditCard, \"dcyXm259/tq6qfUQ25/6jxgXK0M=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EditCard.js"],"names":["useState","useDispatch","Card","Container","Typography","Divider","Grid","IconButton","Slide","DeleteIcon","EditIcon","useStyles","EditCard","employee","currentId","setCurrentId","setShowEmployeeForm","setShowEmployeeGrid","classes","dispatch","open","setOpen","warningDialog","Transition","handleClose","handleEditButton","_id","handleDeleteButton","card","cardFrontTop","firstName","lastName","divider","color","fontSize"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Card, Container, Typography, Divider, Grid, IconButton, Slide } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/DeleteForever'\nimport EditIcon from '@material-ui/icons/ListRounded'\nimport useStyles from './styles'\n\n\nconst EditCard = ({ employee, currentId, setCurrentId, setShowEmployeeForm, setShowEmployeeGrid }) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [open, setOpen] = useState(true)\n\n    const warningDialog = () => {\n        return(\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n            <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    Let Google help apps determine location. This means sending anonymous location data to\n                    Google, even when no apps are running.\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Disagree\n                </Button>\n                <Button onClick={handleClose} color=\"primary\">\n                    Agree\n                </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n\n    const handleClose = () => {\n\n    }\n\n    const handleEditButton = () => {\n        setCurrentId(employee._id)\n        setShowEmployeeGrid(false)\n        setShowEmployeeForm(true)\n    }\n\n    const handleDeleteButton = () => {\n        setCurrentId(employee._id)\n        warningDialog()\n    }\n\n    return (\n        <Card className={classes.card}>\n            <Container className={classes.cardFrontTop}>\n                <Typography>{employee.firstName} {employee.lastName}</Typography>\n                <Divider className={classes.divider}/>\n            </Container>\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" xs={12}>\n                <Slide direction=\"down\" in timeout={400}>\n                    <IconButton onClick={ handleEditButton } >\n                        <EditIcon style={{ color:'lightgrey', fontSize:80 }} />\n                    </IconButton>\n                </Slide>\n                <Slide direction=\"up\" in timeout={600}>\n                    <IconButton onClick={ () => warningDialog() } >\n                        <DeleteIcon color='error'/>\n                    </IconButton>\n                </Slide>\n            </Grid>\n        </Card>\n    )\n}\n\nexport default EditCard\n"]},"metadata":{},"sourceType":"module"}