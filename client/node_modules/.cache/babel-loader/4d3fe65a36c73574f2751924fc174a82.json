{"ast":null,"code":"const date = new Date();\nconst floaterMorningStartTime = [7, 30, 0];\nconst floaterMorningEndTime = [16, 0, 0];\nlet sunday = new Date();\nlet monday = new Date();\n\nswitch (date.getDay()) {\n  case 0:\n    break;\n\n  case 1:\n    break;\n\n  case 2:\n    break;\n\n  case 3:\n    break;\n\n  case 4:\n    break;\n\n  case 5:\n    console.log(\"hello\");\n    sunday = new Date(sunday.setDate(sunday.getDate() - 5 + 7));\n    monday = new Date(monday.setDate(monday.getDate() - 4 + 7));\n    break;\n\n  case 6:\n    break;\n}\n\nconst shifts = [[{\n  title: \"Floater\",\n  startTime: `${sunday = new Date(sunday.setHours(floaterMorningStartTime[0], floaterMorningStartTime[1], floaterMorningStartTime[2]))}`,\n  endTime: `${sunday = new Date(sunday.setHours(floaterMorningEndTime[0], floaterMorningEndTime[1], floaterMorningEndTime[2]))}`\n}], [{\n  title: \"Floater\",\n  startTime: `${monday = new Date(monday.setHours(floaterMorningStartTime[0], floaterMorningStartTime[1], floaterMorningStartTime[2]))}`,\n  endTime: `${monday = new Date(monday.setHours(floaterMorningEndTime[0], floaterMorningEndTime[1], floaterMorningEndTime[2]))}`\n}]];\nexport default shifts;","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/testData/weekShifts.js"],"names":["date","Date","floaterMorningStartTime","floaterMorningEndTime","sunday","monday","getDay","console","log","setDate","getDate","shifts","title","startTime","setHours","endTime"],"mappings":"AAAA,MAAMA,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEA,MAAMC,uBAAuB,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAAhC;AACA,MAAMC,qBAAqB,GAAG,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAA9B;AAEA,IAAIC,MAAM,GAAG,IAAIH,IAAJ,EAAb;AACA,IAAII,MAAM,GAAG,IAAIJ,IAAJ,EAAb;;AAGA,QAAQD,IAAI,CAACM,MAAL,EAAR;AACI,OAAK,CAAL;AACI;;AACJ,OAAK,CAAL;AACI;;AACJ,OAAK,CAAL;AACI;;AACJ,OAAK,CAAL;AACI;;AACJ,OAAK,CAAL;AACI;;AACJ,OAAK,CAAL;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAJ,IAAAA,MAAM,GAAG,IAAIH,IAAJ,CAASG,MAAM,CAACK,OAAP,CAAeL,MAAM,CAACM,OAAP,KAAmB,CAAnB,GAAuB,CAAtC,CAAT,CAAT;AACAL,IAAAA,MAAM,GAAG,IAAIJ,IAAJ,CAASI,MAAM,CAACI,OAAP,CAAeJ,MAAM,CAACK,OAAP,KAAmB,CAAnB,GAAuB,CAAtC,CAAT,CAAT;AACA;;AACJ,OAAK,CAAL;AACI;AAjBR;;AAqBA,MAAMC,MAAM,GAAG,CAEX,CACI;AACIC,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,SAAS,EAAG,GAAET,MAAM,GAAG,IAAIH,IAAJ,CAASG,MAAM,CAACU,QAAP,CAAgBZ,uBAAuB,CAAC,CAAD,CAAvC,EAA4CA,uBAAuB,CAAC,CAAD,CAAnE,EAAwEA,uBAAuB,CAAC,CAAD,CAA/F,CAAT,CAA8G,EAFzI;AAGIa,EAAAA,OAAO,EAAG,GAAEX,MAAM,GAAG,IAAIH,IAAJ,CAASG,MAAM,CAACU,QAAP,CAAgBX,qBAAqB,CAAC,CAAD,CAArC,EAA0CA,qBAAqB,CAAC,CAAD,CAA/D,EAAoEA,qBAAqB,CAAC,CAAD,CAAzF,CAAT,CAAwG;AAHjI,CADJ,CAFW,EAUX,CACI;AACIS,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,SAAS,EAAG,GAAER,MAAM,GAAG,IAAIJ,IAAJ,CAASI,MAAM,CAACS,QAAP,CAAgBZ,uBAAuB,CAAC,CAAD,CAAvC,EAA4CA,uBAAuB,CAAC,CAAD,CAAnE,EAAwEA,uBAAuB,CAAC,CAAD,CAA/F,CAAT,CAA8G,EAFzI;AAGIa,EAAAA,OAAO,EAAG,GAAEV,MAAM,GAAG,IAAIJ,IAAJ,CAASI,MAAM,CAACS,QAAP,CAAgBX,qBAAqB,CAAC,CAAD,CAArC,EAA0CA,qBAAqB,CAAC,CAAD,CAA/D,EAAoEA,qBAAqB,CAAC,CAAD,CAAzF,CAAT,CAAwG;AAHjI,CADJ,CAVW,CAAf;AAoBA,eAAeQ,MAAf","sourcesContent":["const date = new Date()\n\nconst floaterMorningStartTime = [7, 30, 0];\nconst floaterMorningEndTime = [16, 0, 0];\n\nlet sunday = new Date()\nlet monday = new Date()\n\n\nswitch (date.getDay()) {\n    case 0:\n        break;\n    case 1:\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n        break;\n    case 5:\n        console.log(\"hello\");\n        sunday = new Date(sunday.setDate(sunday.getDate() - 5 + 7))\n        monday = new Date(monday.setDate(monday.getDate() - 4 + 7))\n        break;\n    case 6:\n        break;\n}\n\n\nconst shifts = [\n\n    [\n        {\n            title: \"Floater\",\n            startTime: `${sunday = new Date(sunday.setHours(floaterMorningStartTime[0], floaterMorningStartTime[1], floaterMorningStartTime[2]))}`,\n            endTime: `${sunday = new Date(sunday.setHours(floaterMorningEndTime[0], floaterMorningEndTime[1], floaterMorningEndTime[2]))}`\n        },\n    ],\n\n    [\n        {\n            title: \"Floater\",\n            startTime: `${monday = new Date(monday.setHours(floaterMorningStartTime[0], floaterMorningStartTime[1], floaterMorningStartTime[2]))}`,\n            endTime: `${monday = new Date(monday.setHours(floaterMorningEndTime[0], floaterMorningEndTime[1], floaterMorningEndTime[2]))}`\n        },\n    ],\n\n]\n\nexport default shifts"]},"metadata":{},"sourceType":"module"}