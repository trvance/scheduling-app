{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, WeekView, Appointments, AppointmentForm, AppointmentTooltip, DragDropProvider, ConfirmationDialog, EditRecurrenceMenu, AllDayPanel, DateNavigator, Toolbar, ViewSwitcher } from '@devexpress/dx-react-scheduler-material-ui';\nimport { areIntervalsOverlapping } from 'date-fns';\nimport { testEmployees } from '../../testData/testEmployees'; // const Availability = ({employeeAvailability}) => {\n//     const currentDate = new Date()\n//     const [availability, setAvailability] = useState(employeeAvailability)\n//     const commitChanges = ({ added, changed, deleted }) => {\n//         if (added) {\n//             setAvailability([...availability, {...added}])\n//         }\n//         if (changed) {\n//              setAvailability(() => availability.map(appointment => (\n//                 changed[appointment] ? [...appointment, {...changed}] : appointment\n//              )))\n//         }\n//         if (deleted !== undefined) {\n//             setAvailability(() => availability.filter(appointment => appointment.id !== deleted))\n//         }\n//     }\n//     return (\n//             <Scheduler\n//                 data={availability}\n//                 firstDayOfWeek={1}\n//             >\n//                 <ViewState\n//                     defaultCurrentDate={currentDate}\n//                 />\n//                 <WeekView\n//                     startDayHour={6}\n//                     cellDuration={120}\n//                     endDayHour={24}\n//                 />\n//                 <EditingState onCommitChanges={commitChanges}/>\n//                 <IntegratedEditing />\n//                 <ConfirmationDialog />\n//                 <Appointments />\n//                 <AppointmentTooltip \n//                     showOpenButton\n//                     showCloseButton\n//                     showDeleteButton\n//                 />\n//                 <AppointmentForm />\n//                 <DragDropProvider />\n//             </Scheduler>\n//     )\n// }\n// export default Availability\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: testEmployees[0].availability,\n      currentDate: new Date()\n    };\n    this.commitChanges = this.commitChanges.bind(this);\n  }\n\n  commitChanges({\n    added,\n    changed,\n    deleted\n  }) {\n    this.setState(state => {\n      let {\n        data\n      } = state;\n\n      if (added) {\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n        data = [...data, {\n          id: startingAddedId,\n          ...added\n        }];\n      }\n\n      if (changed) {\n        data = data.map(appointment => changed[appointment.id] ? { ...appointment,\n          ...changed[appointment.id]\n        } : appointment);\n      }\n\n      if (deleted !== undefined) {\n        data = data.filter(appointment => appointment.id !== deleted);\n      }\n\n      return {\n        data\n      };\n    });\n  }\n\n  render() {\n    const {\n      currentDate,\n      data\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      // <Paper >\n      _jsxDEV(Scheduler, {\n        data: data,\n        firstDayOfWeek: 1,\n        children: [/*#__PURE__*/_jsxDEV(ViewState, {\n          currentDate: currentDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditingState, {\n          onCommitChanges: this.commitChanges\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeekView, {\n          startDayHour: 6,\n          cellDuration: 120,\n          endDayHour: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Appointments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AppointmentTooltip, {\n          showOpenButton: true,\n          showDeleteButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) // </Paper>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js"],"names":["React","useState","Paper","makeStyles","ViewState","EditingState","IntegratedEditing","Scheduler","WeekView","Appointments","AppointmentForm","AppointmentTooltip","DragDropProvider","ConfirmationDialog","EditRecurrenceMenu","AllDayPanel","DateNavigator","Toolbar","ViewSwitcher","areIntervalsOverlapping","testEmployees","Demo","PureComponent","constructor","props","state","data","availability","currentDate","Date","commitChanges","bind","added","changed","deleted","setState","startingAddedId","length","id","map","appointment","undefined","filter","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { \n    ViewState, \n    EditingState, \n    IntegratedEditing,\n } from '@devexpress/dx-react-scheduler'\nimport { \n    Scheduler,  \n    WeekView,\n    Appointments, \n    AppointmentForm,\n    AppointmentTooltip,\n    DragDropProvider,\n    ConfirmationDialog,\n    EditRecurrenceMenu,\n    AllDayPanel,\n    DateNavigator,\n    Toolbar,\n    ViewSwitcher,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport { areIntervalsOverlapping } from 'date-fns'\nimport { testEmployees } from '../../testData/testEmployees'\n\n// const Availability = ({employeeAvailability}) => {\n//     const currentDate = new Date()\n//     const [availability, setAvailability] = useState(employeeAvailability)\n\n//     const commitChanges = ({ added, changed, deleted }) => {\n//         if (added) {\n//             setAvailability([...availability, {...added}])\n//         }\n//         if (changed) {\n//              setAvailability(() => availability.map(appointment => (\n//                 changed[appointment] ? [...appointment, {...changed}] : appointment\n//              )))\n//         }\n//         if (deleted !== undefined) {\n//             setAvailability(() => availability.filter(appointment => appointment.id !== deleted))\n//         }\n//     }\n\n//     return (\n//             <Scheduler\n//                 data={availability}\n//                 firstDayOfWeek={1}\n//             >\n//                 <ViewState\n//                     defaultCurrentDate={currentDate}\n//                 />\n//                 <WeekView\n//                     startDayHour={6}\n//                     cellDuration={120}\n//                     endDayHour={24}\n//                 />\n//                 <EditingState onCommitChanges={commitChanges}/>\n//                 <IntegratedEditing />\n//                 <ConfirmationDialog />\n//                 <Appointments />\n//                 <AppointmentTooltip \n//                     showOpenButton\n//                     showCloseButton\n//                     showDeleteButton\n//                 />\n//                 <AppointmentForm />\n//                 <DragDropProvider />\n//             </Scheduler>\n//     )\n// }\n\n// export default Availability\n\nexport default class Demo extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: testEmployees[0].availability,\n        currentDate: new Date(),\n      };\n  \n      this.commitChanges = this.commitChanges.bind(this);\n    }\n  \n    commitChanges({ added, changed, deleted }) {\n      this.setState((state) => {\n        let { data } = state;\n        if (added) {\n          const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n          data = [...data, { id: startingAddedId, ...added }];\n        }\n        if (changed) {\n          data = data.map(appointment => (\n            changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\n        }\n        if (deleted !== undefined) {\n          data = data.filter(appointment => appointment.id !== deleted);\n        }\n        return { data };\n      });\n    }\n  \n    render() {\n      const { currentDate, data } = this.state;\n  \n      return (\n        // <Paper >\n          <Scheduler\n            data={data}\n            firstDayOfWeek={1}\n          >\n            <ViewState\n              currentDate={currentDate}\n            />\n            <EditingState\n              onCommitChanges={this.commitChanges}\n            />\n            {/* <IntegratedEditing /> */}\n            <WeekView\n              startDayHour={6}\n              cellDuration={120}\n              endDayHour={24}\n            />\n            <ConfirmationDialog />\n            <Appointments />\n            <AppointmentTooltip\n              showOpenButton\n              showDeleteButton\n            />\n            <AppointmentForm />\n          </Scheduler>\n        // </Paper>\n      );\n    }\n  }\n  \n  "]},"metadata":{},"sourceType":"module"}