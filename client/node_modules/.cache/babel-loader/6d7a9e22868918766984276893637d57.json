{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/availabilityComponent/AvailabilityComponent.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Grid, Typography, IconButton } from '@material-ui/core';\nimport DayIcon from '@material-ui/icons/WbSunnyTwoTone';\nimport NightIcon from '@material-ui/icons/NightsStayTwoTone';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailabilityComponent = ({\n  currentId,\n  getAvailability\n}) => {\n  _s();\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const [availability, setAvailability] = useState([{\n    day: 'Monday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Tuesday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Wednesday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Thursday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Friday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Saturday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Sunday',\n    morning: false,\n    evening: false\n  }]);\n\n  const handleDayButton = index => e => {\n    const newAvailability = [...availability];\n    newAvailability[index].morning = !availability[index].morning;\n    console.log(newAvailability[index]);\n    setAvailability(newAvailability);\n    getAvailability(newAvailability);\n  };\n\n  const handleNightButton = index => e => {\n    const newAvailability = [...availability];\n    newAvailability[index].evening = !availability[index].evening;\n    console.log(newAvailability[index]);\n    setAvailability(newAvailability);\n    getAvailability(newAvailability);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    align: \"center\",\n    xs: 12,\n    spacing: 0,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      justify: \"space-around\",\n      direction: \"row\",\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        children: \"Mon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Tue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Wed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          paddingRight: 8\n        },\n        children: \"Thu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          paddingRight: 10\n        },\n        children: \"Fri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          paddingRight: 8\n        },\n        children: \"Sat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Sun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      justify: \"space-around\",\n      direction: \"row\",\n      spacing: 0,\n      children: availability.map((day, index) => {\n        return /*#__PURE__*/_jsxDEV(IconButton, {\n          value: day.morning,\n          name: day.day,\n          size: \"small\",\n          style: {\n            marginBottom: 15\n          },\n          onClick: handleDayButton(index),\n          children: day.morning ? /*#__PURE__*/_jsxDEV(DayIcon, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(DayIcon, {\n            color: \"disabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      justify: \"space-around\",\n      direction: \"row\",\n      spacing: 0,\n      children: availability.map((day, index) => {\n        return /*#__PURE__*/_jsxDEV(IconButton, {\n          value: day.evening,\n          name: day.day,\n          size: \"small\",\n          style: {\n            marginBottom: 15\n          },\n          onClick: handleNightButton(index),\n          children: day.evening ? /*#__PURE__*/_jsxDEV(NightIcon, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(NightIcon, {\n            color: \"disabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailabilityComponent, \"6be8W1C0ApvL3zkWInmCqK5dbKg=\");\n\n_c = AvailabilityComponent;\nexport default AvailabilityComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailabilityComponent\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/availabilityComponent/AvailabilityComponent.js"],"names":["Card","Grid","Typography","IconButton","DayIcon","NightIcon","useState","AvailabilityComponent","currentId","getAvailability","days","availability","setAvailability","day","morning","evening","handleDayButton","index","e","newAvailability","console","log","handleNightButton","paddingRight","map","marginBottom"],"mappings":"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","sourcesContent":["import { Card, Grid, Typography, IconButton} from '@material-ui/core'\nimport DayIcon from '@material-ui/icons/WbSunnyTwoTone'\nimport NightIcon from '@material-ui/icons/NightsStayTwoTone'\nimport { useState } from 'react'\n\nconst AvailabilityComponent = ({ currentId, getAvailability }) => {\n    const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']\n    const [availability, setAvailability] = useState([\n            {\n            day: 'Monday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Tuesday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Wednesday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Thursday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Friday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Saturday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Sunday',\n            morning: false,\n            evening: false,\n            },\n\n        ])\n\n    \n    const handleDayButton = (index) => e => {\n        const newAvailability = [...availability]\n        newAvailability[index].morning = !availability[index].morning\n        console.log(newAvailability[index])\n        setAvailability(newAvailability)\n        getAvailability(newAvailability)\n    }\n    \n    const handleNightButton = (index) => e => {\n        const newAvailability = [...availability]\n        newAvailability[index].evening = !availability[index].evening\n        console.log(newAvailability[index])\n        setAvailability(newAvailability)\n        getAvailability(newAvailability)\n    }\n\n    return (\n        <Grid container justify=\"center\" direction=\"column\" align=\"center\" xs={12} spacing={0}>\n            {/* <Typography>Availability</Typography> */}\n\n            <Grid item container justify=\"space-around\" direction=\"row\"  spacing={0}>\n                <Typography gutterBottom>Mon</Typography>\n                <Typography>Tue</Typography>\n                <Typography >Wed</Typography>\n                <Typography style={{paddingRight: 8}}>Thu</Typography>\n                <Typography style={{paddingRight: 10}}>Fri</Typography>\n                <Typography style={{paddingRight: 8}}>Sat</Typography>\n                <Typography>Sun</Typography>\n            </Grid>\n\n            <Grid item container justify=\"space-around\" direction=\"row\" spacing={0}>\n                {availability.map((day, index) => {\n\n                    return(\n                        <IconButton\n                            value={day.morning}\n                            name={day.day}\n                            size=\"small\"\n                            style={{marginBottom: 15}}\n                            onClick={handleDayButton(index)}\n                        >\n                            {day.morning ?\n                                <DayIcon color=\"secondary\" /> :\n                                <DayIcon color=\"disabled\" /> \n                            }\n                        </IconButton>\n                    )\n\n                })}\n            </Grid>\n\n\n            <Grid item container justify=\"space-around\" direction=\"row\" spacing={0}>\n                {availability.map((day, index) => {\n\n                    return(\n                        <IconButton\n                            value={day.evening}\n                            name={day.day}\n                            size=\"small\"\n                            style={{marginBottom: 15}}\n                            onClick={handleNightButton(index)}\n                        >\n                            {day.evening ?\n                                <NightIcon color=\"secondary\" /> :\n                                <NightIcon color=\"disabled\" /> \n                            }\n                        </IconButton>\n                    )\n                    \n                })}\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default AvailabilityComponent\n"]},"metadata":{},"sourceType":"module"}