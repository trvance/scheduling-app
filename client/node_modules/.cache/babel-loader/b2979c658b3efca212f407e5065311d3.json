{"ast":null,"code":"export function formatPhoneNumber(value) {\n  // if input value is falsy eg if the user deletes the input, then just return\n  if (!value) return value; // clean the input for any non-digit values.\n\n  const phoneNumber = value.replace(/[^\\d]/g, \"\"); // phoneNumberLength is used to know when to apply our formatting for the phone number\n\n  const phoneNumberLength = phoneNumber.length; // we need to return the value with no formatting if its less then four digits\n  // this is to avoid weird behavior that occurs if you  format the area code to early\n\n  if (phoneNumberLength < 4) return phoneNumber; // if phoneNumberLength is greater than 4 and less the 7 we start to return\n  // the formatted number\n\n  if (phoneNumberLength < 7) {\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n  } // finally, if the phoneNumberLength is greater then seven, we add the last\n  // bit of formatting and return it.\n\n\n  return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n}","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/auto-scheduler-app/client/src/formatAndValidations/formatPhoneNumber.js"],"names":["formatPhoneNumber","value","phoneNumber","replace","phoneNumberLength","length","slice"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC;AACA,MAAI,CAACA,KAAL,EAAY,OAAOA,KAAP,CAF2B,CAIvC;;AACA,QAAMC,WAAW,GAAGD,KAAK,CAACE,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAApB,CALuC,CAOvC;;AACA,QAAMC,iBAAiB,GAAGF,WAAW,CAACG,MAAtC,CARuC,CAUvC;AACA;;AACA,MAAID,iBAAiB,GAAG,CAAxB,EAA2B,OAAOF,WAAP,CAZY,CAcvC;AACA;;AACA,MAAIE,iBAAiB,GAAG,CAAxB,EAA2B;AACzB,WAAQ,IAAGF,WAAW,CAACI,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAwB,KAAIJ,WAAW,CAACI,KAAZ,CAAkB,CAAlB,CAAqB,EAA5D;AACD,GAlBsC,CAoBvC;AACA;;;AACA,SAAQ,IAAGJ,WAAW,CAACI,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAwB,KAAIJ,WAAW,CAACI,KAAZ,CACrC,CADqC,EAErC,CAFqC,CAGrC,IAAGJ,WAAW,CAACI,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAyB,EAH9B;AAID","sourcesContent":["export function formatPhoneNumber(value) {\n  // if input value is falsy eg if the user deletes the input, then just return\n  if (!value) return value\n\n  // clean the input for any non-digit values.\n  const phoneNumber = value.replace(/[^\\d]/g, \"\")\n\n  // phoneNumberLength is used to know when to apply our formatting for the phone number\n  const phoneNumberLength = phoneNumber.length\n\n  // we need to return the value with no formatting if its less then four digits\n  // this is to avoid weird behavior that occurs if you  format the area code to early\n  if (phoneNumberLength < 4) return phoneNumber\n\n  // if phoneNumberLength is greater than 4 and less the 7 we start to return\n  // the formatted number\n  if (phoneNumberLength < 7) {\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`\n  }\n\n  // finally, if the phoneNumberLength is greater then seven, we add the last\n  // bit of formatting and return it.\n  return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(\n    3,\n    6\n  )}-${phoneNumber.slice(6, 10)}`\n}"]},"metadata":{},"sourceType":"module"}