{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, forwardRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteEmployee } from '../../../actions/employees';\nimport { Card, Container, Button, Typography, Divider, Grid, IconButton, Slide, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/ListRounded';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\n\nconst EditCard = ({\n  employee,\n  currentId,\n  setCurrentId,\n  setShowEmployeeForm,\n  setShowEmployeeGrid\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setCurrentId(null);\n    setOpen(false);\n  };\n\n  const handleEditButton = () => {\n    setCurrentId(employee._id);\n    setShowEmployeeGrid(false);\n    setShowEmployeeForm(true);\n  };\n\n  const handleDeleteButton = () => {\n    dispatch(deleteEmployee(employee._id));\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardFrontTop,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          className: classes.cardTitle,\n          textOverflow: \"ellipsis\",\n          children: [employee.firstName, \" \", employee.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Slide, {\n          direction: \"down\",\n          in: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleEditButton,\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {\n              style: {\n                color: 'lightgrey',\n                fontSize: 80\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Slide, {\n          direction: \"up\",\n          in: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              background: 'transparent'\n            },\n            onClick: () => setOpen(true),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              color: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: [\"Are you sure you want to delete \", \" \", employee.firstName, \" \", employee.lastName, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Nevermind\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleDeleteButton,\n          color: \"primary\",\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditCard, \"s947msiJBRsOAY6+fhIcxW++wVo=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c3 = EditCard;\nexport default EditCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"EditCard\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EditCard.js"],"names":["useState","forwardRef","useDispatch","deleteEmployee","Card","Container","Button","Typography","Divider","Grid","IconButton","Slide","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","DeleteIcon","EditIcon","useStyles","Transition","props","ref","EditCard","employee","currentId","setCurrentId","setShowEmployeeForm","setShowEmployeeGrid","classes","dispatch","open","setOpen","handleClose","handleEditButton","_id","handleDeleteButton","card","cardFrontTop","cardTitle","firstName","lastName","divider","color","fontSize","background"],"mappings":"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","sourcesContent":["import { useState, forwardRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { deleteEmployee } from '../../../actions/employees'\nimport { Card, Container, Button, Typography, Divider, Grid, IconButton, Slide, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/DeleteForever'\nimport EditIcon from '@material-ui/icons/ListRounded'\nimport useStyles from './styles'\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nconst EditCard = ({ employee, currentId, setCurrentId, setShowEmployeeForm, setShowEmployeeGrid }) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [open, setOpen] = useState(false)\n\n\n    const handleClose = () => {\n        setCurrentId(null)\n        setOpen(false)\n    }\n\n    const handleEditButton = () => {\n        setCurrentId(employee._id)\n        setShowEmployeeGrid(false)\n        setShowEmployeeForm(true)\n    }\n\n    const handleDeleteButton = () => {\n        dispatch(deleteEmployee(employee._id))\n        handleClose()\n    }\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <Container className={classes.cardFrontTop}>\n                    <Typography gutterBottom className={classes.cardTitle} textOverflow=\"ellipsis\">{employee.firstName} {employee.lastName}</Typography>\n                    <Divider className={classes.divider}/>\n                </Container>\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" xs={12}>\n                    <Slide direction=\"down\" in >\n                        <IconButton onClick={ handleEditButton } >\n                            <EditIcon style={{ color:'lightgrey', fontSize:80 }} />\n                        </IconButton>\n                    </Slide>\n                    <Slide direction=\"up\" in >\n                        <IconButton style={{background: 'transparent'}} onClick={ () => setOpen(true) } >\n                            <DeleteIcon color='error'/>\n                        </IconButton>\n                    </Slide>\n                </Grid>\n            </Card>\n\n\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n            <DialogTitle id=\"alert-dialog-slide-title\">{\"Are you sure you want to delete \"} {employee.firstName} {employee.lastName}?</DialogTitle>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Nevermind\n                </Button>\n                <Button variant=\"contained\" onClick={ handleDeleteButton } color=\"primary\">\n                    Agree\n                </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default EditCard\n"]},"metadata":{},"sourceType":"module"}