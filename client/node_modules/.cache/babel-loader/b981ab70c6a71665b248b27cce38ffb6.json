{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js\";\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, WeekView, Appointments, AppointmentForm, AppointmentTooltip, DragDropProvider, ConfirmationDialog, EditRecurrenceMenu, AllDayPanel } from '@devexpress/dx-react-scheduler-material-ui';\nimport { areIntervalsOverlapping } from 'date-fns'; // const Availability = ({employeeAvailability}) => {\n//     const currentDate = new Date()\n//     const [availability, setAvailability] = useState(employeeAvailability)\n//     const commitChanges = ({ added, changed, deleted }) => {\n//         if (added) {\n//             setAvailability([...availability, {...added}])\n//         }\n//         if (changed) {\n//              setAvailability(() => availability.map(appointment => (\n//                 changed[appointment] ? [...appointment, {...changed}] : appointment\n//              )))\n//         }\n//         if (deleted !== undefined) {\n//             setAvailability(() => availability.filter(appointment => appointment.id !== deleted))\n//         }\n//     }\n//     return (\n//             <Scheduler\n//                 data={availability}\n//                 firstDayOfWeek={1}\n//             >\n//                 <ViewState\n//                     defaultCurrentDate={currentDate}\n//                 />\n//                 <WeekView\n//                     startDayHour={6}\n//                     cellDuration={120}\n//                     endDayHour={24}\n//                 />\n//                 <EditingState onCommitChanges={commitChanges}/>\n//                 <IntegratedEditing />\n//                 <ConfirmationDialog />\n//                 <Appointments />\n//                 <AppointmentTooltip \n//                     showOpenButton\n//                     showCloseButton\n//                     showDeleteButton\n//                 />\n//                 <AppointmentForm />\n//                 <DragDropProvider />\n//             </Scheduler>\n//     )\n// }\n// export default Availability\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Availability extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: appointments,\n      currentDate: '2018-06-27',\n      addedAppointment: {},\n      appointmentChanges: {},\n      editingAppointment: undefined\n    };\n    this.commitChanges = this.commitChanges.bind(this);\n    this.changeAddedAppointment = this.changeAddedAppointment.bind(this);\n    this.changeAppointmentChanges = this.changeAppointmentChanges.bind(this);\n    this.changeEditingAppointment = this.changeEditingAppointment.bind(this);\n  }\n\n  changeAddedAppointment(addedAppointment) {\n    this.setState({\n      addedAppointment\n    });\n  }\n\n  changeAppointmentChanges(appointmentChanges) {\n    this.setState({\n      appointmentChanges\n    });\n  }\n\n  changeEditingAppointment(editingAppointment) {\n    this.setState({\n      editingAppointment\n    });\n  }\n\n  commitChanges({\n    added,\n    changed,\n    deleted\n  }) {\n    this.setState(state => {\n      let {\n        data\n      } = state;\n\n      if (added) {\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n        data = [...data, {\n          id: startingAddedId,\n          ...added\n        }];\n      }\n\n      if (changed) {\n        data = data.map(appointment => changed[appointment.id] ? { ...appointment,\n          ...changed[appointment.id]\n        } : appointment);\n      }\n\n      if (deleted !== undefined) {\n        data = data.filter(appointment => appointment.id !== deleted);\n      }\n\n      return {\n        data\n      };\n    });\n  }\n\n  render() {\n    const {\n      currentDate,\n      data,\n      addedAppointment,\n      appointmentChanges,\n      editingAppointment\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Scheduler, {\n        data: data,\n        height: 660,\n        children: [/*#__PURE__*/_jsxDEV(ViewState, {\n          currentDate: currentDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditingState, {\n          onCommitChanges: this.commitChanges,\n          addedAppointment: addedAppointment,\n          onAddedAppointmentChange: this.changeAddedAppointment,\n          appointmentChanges: appointmentChanges,\n          onAppointmentChangesChange: this.changeAppointmentChanges,\n          editingAppointment: editingAppointment,\n          onEditingAppointmentChange: this.changeEditingAppointment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeekView, {\n          startDayHour: 9,\n          endDayHour: 17\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AllDayPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditRecurrenceMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Appointments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AppointmentTooltip, {\n          showOpenButton: true,\n          showDeleteButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js"],"names":["useState","makeStyles","ViewState","EditingState","IntegratedEditing","Scheduler","WeekView","Appointments","AppointmentForm","AppointmentTooltip","DragDropProvider","ConfirmationDialog","EditRecurrenceMenu","AllDayPanel","areIntervalsOverlapping","Availability","React","PureComponent","constructor","props","state","data","appointments","currentDate","addedAppointment","appointmentChanges","editingAppointment","undefined","commitChanges","bind","changeAddedAppointment","changeAppointmentChanges","changeEditingAppointment","setState","added","changed","deleted","startingAddedId","length","id","map","appointment","filter","render"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler'\nimport { \n    Scheduler,  \n    WeekView,\n    Appointments, \n    AppointmentForm,\n    AppointmentTooltip,\n    DragDropProvider,\n    ConfirmationDialog,\n    EditRecurrenceMenu,\n    AllDayPanel,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport { areIntervalsOverlapping } from 'date-fns'\n\n// const Availability = ({employeeAvailability}) => {\n//     const currentDate = new Date()\n//     const [availability, setAvailability] = useState(employeeAvailability)\n\n//     const commitChanges = ({ added, changed, deleted }) => {\n//         if (added) {\n//             setAvailability([...availability, {...added}])\n//         }\n//         if (changed) {\n//              setAvailability(() => availability.map(appointment => (\n//                 changed[appointment] ? [...appointment, {...changed}] : appointment\n//              )))\n//         }\n//         if (deleted !== undefined) {\n//             setAvailability(() => availability.filter(appointment => appointment.id !== deleted))\n//         }\n//     }\n\n//     return (\n//             <Scheduler\n//                 data={availability}\n//                 firstDayOfWeek={1}\n//             >\n//                 <ViewState\n//                     defaultCurrentDate={currentDate}\n//                 />\n//                 <WeekView\n//                     startDayHour={6}\n//                     cellDuration={120}\n//                     endDayHour={24}\n//                 />\n//                 <EditingState onCommitChanges={commitChanges}/>\n//                 <IntegratedEditing />\n//                 <ConfirmationDialog />\n//                 <Appointments />\n//                 <AppointmentTooltip \n//                     showOpenButton\n//                     showCloseButton\n//                     showDeleteButton\n//                 />\n//                 <AppointmentForm />\n//                 <DragDropProvider />\n//             </Scheduler>\n//     )\n// }\n\n// export default Availability\n\n\n\nexport default class Availability extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: appointments,\n        currentDate: '2018-06-27',\n  \n        addedAppointment: {},\n        appointmentChanges: {},\n        editingAppointment: undefined,\n      };\n  \n      this.commitChanges = this.commitChanges.bind(this);\n      this.changeAddedAppointment = this.changeAddedAppointment.bind(this);\n      this.changeAppointmentChanges = this.changeAppointmentChanges.bind(this);\n      this.changeEditingAppointment = this.changeEditingAppointment.bind(this);\n    }\n  \n    changeAddedAppointment(addedAppointment) {\n      this.setState({ addedAppointment });\n    }\n  \n    changeAppointmentChanges(appointmentChanges) {\n      this.setState({ appointmentChanges });\n    }\n  \n    changeEditingAppointment(editingAppointment) {\n      this.setState({ editingAppointment });\n    }\n  \n    commitChanges({ added, changed, deleted }) {\n      this.setState((state) => {\n        let { data } = state;\n        if (added) {\n          const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n          data = [...data, { id: startingAddedId, ...added }];\n        }\n        if (changed) {\n          data = data.map(appointment => (\n            changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\n        }\n        if (deleted !== undefined) {\n          data = data.filter(appointment => appointment.id !== deleted);\n        }\n        return { data };\n      });\n    }\n  \n    render() {\n      const {\n        currentDate, data, addedAppointment, appointmentChanges, editingAppointment,\n      } = this.state;\n  \n      return (\n        <Paper>\n          <Scheduler\n            data={data}\n            height={660}\n          >\n            <ViewState\n              currentDate={currentDate}\n            />\n            <EditingState\n              onCommitChanges={this.commitChanges}\n  \n              addedAppointment={addedAppointment}\n              onAddedAppointmentChange={this.changeAddedAppointment}\n  \n              appointmentChanges={appointmentChanges}\n              onAppointmentChangesChange={this.changeAppointmentChanges}\n  \n              editingAppointment={editingAppointment}\n              onEditingAppointmentChange={this.changeEditingAppointment}\n            />\n            <WeekView\n              startDayHour={9}\n              endDayHour={17}\n            />\n            <AllDayPanel />\n            <EditRecurrenceMenu />\n            <ConfirmationDialog />\n            <Appointments />\n            <AppointmentTooltip\n              showOpenButton\n              showDeleteButton\n            />\n            <AppointmentForm />\n          </Scheduler>\n        </Paper>\n      );\n    }\n  }\n\n\n"]},"metadata":{},"sourceType":"module"}