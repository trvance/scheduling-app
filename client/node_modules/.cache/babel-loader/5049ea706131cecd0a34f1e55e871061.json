{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/dropDownMenu/DropDownMenu.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { Menu, MenuItem, IconButton, Fade } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDownMenu = ({\n  setSelectedEmployee\n}) => {\n  _s();\n\n  const employees = useSelector(state => state.employees);\n  const [option, setOption] = useState(employees[0]);\n  const ITEM_HEIGHT = 48;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = event => {\n    const name = event.target.innerText;\n    if (name) findByName(name); // console.log(name)\n\n    setAnchorEl(null);\n  };\n\n  const findByName = name => {\n    const fName = name.split(' ')[0];\n    const lName = name.split(' ')[1];\n    console.log(fName);\n    console.log(lName);\n    const employee = employees.filter(emp => {\n      if (emp.firstName == fName && emp.lastName == lName) return emp;\n    });\n    console.log(employee);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"more\",\n      \"aria-controls\": \"long-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"long-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      value: option,\n      open: open,\n      onClose: handleClose,\n      PaperProps: {\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5,\n          width: '40ch'\n        }\n      },\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClose,\n        children: [employee.firstName, \" \", employee.lastName]\n      }, employee, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DropDownMenu, \"Ux73IrbXduQO52m7Uq8OuhWx83s=\", false, function () {\n  return [useSelector];\n});\n\n_c = DropDownMenu;\nexport default DropDownMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDownMenu\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/dropDownMenu/DropDownMenu.js"],"names":["useSelector","useState","Menu","MenuItem","IconButton","Fade","MoreVertIcon","DropDownMenu","setSelectedEmployee","employees","state","option","setOption","ITEM_HEIGHT","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","name","target","innerText","findByName","fName","split","lName","console","log","employee","filter","emp","firstName","lastName","style","maxHeight","width","map"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,IAArC,QAAiD,mBAAjD;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA2B;AAAA;;AAC5C,QAAMC,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAACQ,SAAS,CAAC,CAAD,CAAV,CAApC;AACA,QAAMI,WAAW,GAAG,EAApB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMe,IAAI,GAAGC,OAAO,CAACH,QAAD,CAApB;;AAEA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC3BJ,IAAAA,WAAW,CAACI,KAAK,CAACC,aAAP,CAAX;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIF,KAAD,IAAW;AAC3B,UAAMG,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAaC,SAA1B;AACA,QAAGF,IAAH,EAASG,UAAU,CAACH,IAAD,CAAV,CAFkB,CAG3B;;AACAP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GALD;;AAOA,QAAMU,UAAU,GAAIH,IAAD,IAAU;AACzB,UAAMI,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAd;AACA,UAAMC,KAAK,GAAGN,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,UAAMG,QAAQ,GAAGtB,SAAS,CAACuB,MAAV,CAAkBC,GAAD,IAAS;AACvC,UAAGA,GAAG,CAACC,SAAJ,IAAiBR,KAAjB,IACCO,GAAG,CAACE,QAAJ,IAAgBP,KADpB,EAC2B,OAAOK,GAAP;AAC9B,KAHgB,CAAjB;AAIAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,GAXD;;AAcA,sBACI;AAAA,4BACI,QAAC,UAAD;AACI,oBAAW,MADf;AAEI,uBAAc,WAFlB;AAGI,uBAAc,MAHlB;AAII,MAAA,OAAO,EAAEb,WAJb;AAAA,6BAMI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,IAAD;AACI,MAAA,EAAE,EAAC,WADP;AAEI,MAAA,QAAQ,EAAEJ,QAFd;AAGI,MAAA,WAAW,MAHf;AAII,MAAA,KAAK,EAAEH,MAJX;AAKI,MAAA,IAAI,EAAEK,IALV;AAMI,MAAA,OAAO,EAAEK,WANb;AAQI,MAAA,UAAU,EAAE;AACRe,QAAAA,KAAK,EAAE;AACHC,UAAAA,SAAS,EAAExB,WAAW,GAAG,GADtB;AAEHyB,UAAAA,KAAK,EAAE;AAFJ;AADC,OARhB;AAAA,gBAeC7B,SAAS,CAAC8B,GAAV,CAAeR,QAAD,iBACX,QAAC,QAAD;AAAyB,QAAA,OAAO,EAAEV,WAAlC;AAAA,mBACKU,QAAQ,CAACG,SADd,OAC0BH,QAAQ,CAACI,QADnC;AAAA,SAAeJ,QAAf;AAAA;AAAA;AAAA;AAAA,cADH;AAfD;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAjED;;GAAMxB,Y;UACgBP,W;;;KADhBO,Y;AAmEN,eAAeA,YAAf","sourcesContent":["import { useSelector } from 'react-redux'\nimport { useState } from 'react'\nimport { Menu, MenuItem, IconButton, Fade } from '@material-ui/core'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\n\n\nconst DropDownMenu = ({setSelectedEmployee}) => {\n    const employees = useSelector((state) => state.employees)\n    const [option, setOption] = useState(employees[0])\n    const ITEM_HEIGHT = 48\n    const [anchorEl, setAnchorEl] = useState(null)\n    const open = Boolean(anchorEl)\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget)\n    }\n    \n    const handleClose = (event) => {\n        const name = event.target.innerText\n        if(name) findByName(name)\n        // console.log(name)\n        setAnchorEl(null);\n    }\n\n    const findByName = (name) => {\n        const fName = name.split(' ')[0]\n        const lName = name.split(' ')[1]\n        console.log(fName)\n        console.log(lName)\n\n        const employee = employees.filter((emp) => {\n            if(emp.firstName == fName &&\n                emp.lastName == lName) return emp\n        })\n        console.log(employee)\n    }\n\n\n    return (\n        <div>\n            <IconButton\n                aria-label=\"more\"\n                aria-controls=\"long-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                id=\"long-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                value={option}\n                open={open}\n                onClose={handleClose}\n                \n                PaperProps={{\n                    style: {\n                        maxHeight: ITEM_HEIGHT * 4.5,\n                        width: '40ch',\n                    },\n                }}\n            >\n            {employees.map((employee) => (\n                <MenuItem key={employee} onClick={handleClose} >\n                    {employee.firstName} {employee.lastName}\n                </MenuItem>\n            ))}\n            </Menu>\n        </div>\n    )\n}\n\nexport default DropDownMenu\n"]},"metadata":{},"sourceType":"module"}