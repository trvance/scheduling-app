{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EmployeeCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport { deleteEmployee } from '../../../actions/employees';\nimport { Card, Container, Grid, Divider, Button, Typography, IconButton, Slide } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircleOutlined';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport contactButtonImage from \"../../../images/more.svg\";\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeCard = ({\n  employee\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [isFlipped, setIsFlipped] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipDirection: \"vertical\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          opacity: 0,\n          height: 200,\n          width: 200\n        },\n        onClick: () => setIsFlipped(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardFrontTop,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          className: classes.cardTitle,\n          textOverflow: \"ellipsis\",\n          children: [employee.firstName, \" \", employee.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Slide, {\n        direction: \"down\",\n        in: true,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: classes.cardFrontDetails,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontSize: 14,\n              color: 'lightgray'\n            },\n            variant: \"body2\",\n            children: employee.positions.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.cardBack,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        jusfity: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            position: 'absolute',\n            opacity: 0,\n            height: 200,\n            width: 200\n          },\n          onClick: () => setIsFlipped(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          flexDirection: \"column\",\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            variant: \"body2\",\n            children: \"Phone number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.cardBackContent,\n            children: employee.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"column\",\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            variant: \"body2\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.cardBackContent,\n            children: employee.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"column\",\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.cardBackContent,\n            children: [\"Desired Hours: \", employee.desiredHours]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          flexDirection: \"column\",\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.cardBackContent,\n            children: [\"Scheduled Hours: \", employee.numHours]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeCard, \"W43rvmaaRm9LSHd1prqWdQGtJD8=\", false, function () {\n  return [useStyles];\n});\n\n_c = EmployeeCard;\nexport default EmployeeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeCard\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EmployeeCard.js"],"names":["useState","ReactCardFlip","deleteEmployee","Card","Container","Grid","Divider","Button","Typography","IconButton","Slide","AccountCircleIcon","ArrowBackIcon","useStyles","EmployeeCard","employee","classes","isFlipped","setIsFlipped","card","position","opacity","height","width","cardFrontTop","cardTitle","firstName","lastName","divider","cardFrontDetails","fontSize","color","positions","join","cardBack","cardBackContent","phoneNumber","email","desiredHours","numHours"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,MAAzC,EAAiDC,UAAjD,EAA6DC,UAA7D,EAAyEC,KAAzE,QAAsF,mBAAtF;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACjC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AAEA,sBACI,QAAC,aAAD;AAAe,IAAA,SAAS,EAAEiB,SAA1B;AAAqC,IAAA,aAAa,EAAC,UAAnD;AAAA,4BAEI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAED,OAAO,CAACG,IAAzB;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,OAAO,EAAE,CAAhC;AAAmCC,UAAAA,MAAM,EAAE,GAA3C;AAAgDC,UAAAA,KAAK,EAAE;AAAvD,SAAf;AAA4E,QAAA,OAAO,EAAE,MAAML,YAAY,CAAC,IAAD;AAAvG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEF,OAAO,CAACQ,YAA9B;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,SAAS,EAAER,OAAO,CAACS,SAA5C;AAAuD,UAAA,YAAY,EAAC,UAApE;AAAA,qBAAgFV,QAAQ,CAACW,SAAzF,OAAqGX,QAAQ,CAACY,QAA9G;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,OAAD;AAAS,UAAA,SAAS,EAAEX,OAAO,CAACY;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,EAAE,MAA1B;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEZ,OAAO,CAACa,gBAA9B;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAACC,cAAAA,QAAQ,EAAE,EAAX;AAAeC,cAAAA,KAAK,EAAE;AAAtB,aAAnB;AAAuD,YAAA,OAAO,EAAC,OAA/D;AAAA,sBAAwEhB,QAAQ,CAACiB,SAAT,CAAmBC,IAAnB,CAAwB,IAAxB;AAAxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAqBI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEjB,OAAO,CAACkB,QAAzB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAC,QAA3C;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAACd,YAAAA,QAAQ,EAAE,UAAX;AAAuBC,YAAAA,OAAO,EAAE,CAAhC;AAAmCC,YAAAA,MAAM,EAAE,GAA3C;AAAgDC,YAAAA,KAAK,EAAE;AAAvD,WAAf;AAA4E,UAAA,OAAO,EAAE,MAAML,YAAY,CAAC,KAAD;AAAvG;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,aAAa,EAAC,QAAnC;AAA4C,UAAA,OAAO,EAAC,QAApD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,SAAlB;AAA4B,YAAA,OAAO,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEF,OAAO,CAACmB,eAA/B;AAAA,sBAAiDpB,QAAQ,CAACqB;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,eAMQ,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,SAAS,EAAC,QAA/B;AAAwC,UAAA,OAAO,EAAC,QAAhD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,SAAlB;AAA4B,YAAA,OAAO,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEpB,OAAO,CAACmB,eAA/B;AAAA,sBAAiDpB,QAAQ,CAACsB;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANR,eAUQ,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,SAAS,EAAC,QAA/B;AAAwC,UAAA,OAAO,EAAC,QAAhD;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAErB,OAAO,CAACmB,eAA/B;AAAA,0CAAgEpB,QAAQ,CAACuB,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVR,eAaQ,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,aAAa,EAAC,QAAnC;AAA4C,UAAA,OAAO,EAAC,QAApD;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEtB,OAAO,CAACmB,eAA/B;AAAA,4CAAkEpB,QAAQ,CAACwB,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH,CA/CD;;GAAMzB,Y;UACcD,S;;;KADdC,Y;AAiDN,eAAeA,YAAf","sourcesContent":["import { useState } from 'react'\nimport ReactCardFlip from 'react-card-flip'\nimport { deleteEmployee } from '../../../actions/employees'\nimport { Card, Container, Grid, Divider, Button, Typography, IconButton, Slide } from '@material-ui/core'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircleOutlined'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport contactButtonImage from '../../../images/more.svg'\nimport useStyles from './styles'\n\nconst EmployeeCard = ({employee}) => {\n    const classes = useStyles()\n    const [isFlipped, setIsFlipped] = useState(false)\n\n    return (\n        <ReactCardFlip isFlipped={isFlipped} flipDirection='vertical'>\n            \n            <Card className={classes.card} >\n                <Button style={{position: 'absolute', opacity: 0, height: 200, width: 200}} onClick={() => setIsFlipped(true)} />\n                <Container className={classes.cardFrontTop}>\n                    <Typography gutterBottom className={classes.cardTitle} textOverflow=\"ellipsis\">{employee.firstName} {employee.lastName}</Typography>\n                    <Divider className={classes.divider}/>\n                </Container>\n                <Slide direction=\"down\" in >\n                    <Container className={classes.cardFrontDetails}>\n                        <Typography style={{fontSize: 14, color: 'lightgray'}} variant=\"body2\">{employee.positions.join(\", \")}</Typography>\n                    </Container>\n                </Slide>\n                {/* <Slide direction=\"up\" in>\n                    <Container className={classes.flipButtonFrontArea}>\n                        <IconButton style={{marginBottom: 30,}} onClick={() => setIsFlipped(true)}>\n                            <AccountCircleIcon/>\n                        </IconButton>\n                    </Container>\n                </Slide> */}\n            </Card>\n            <Card className={classes.cardBack} >\n                <Grid container direction='column' jusfity='center' >\n                    <Button style={{position: 'absolute', opacity: 0, height: 200, width: 200}} onClick={() => setIsFlipped(false)} />\n                        <Grid container item flexDirection='column' justify='center'>\n                            <Typography color='primary' variant='body2'>Phone number:</Typography>\n                            <Typography className={classes.cardBackContent}>{employee.phoneNumber}</Typography>\n                        </Grid>\n                        <Grid container item direction='column' justify='center'>\n                            <Typography color='primary' variant='body2'>Email:</Typography>\n                            <Typography className={classes.cardBackContent}>{employee.email}</Typography>\n                        </Grid>\n                        <Grid container item direction='column' justify='center'>\n                            <Typography className={classes.cardBackContent}>Desired Hours: {employee.desiredHours}</Typography>\n                        </Grid>\n                        <Grid container item flexDirection='column' justify='center'>\n                            <Typography className={classes.cardBackContent}>Scheduled Hours: {employee.numHours}</Typography>\n                        </Grid>\n                </Grid>\n            </Card>\n        </ReactCardFlip>\n    )\n}\n\nexport default EmployeeCard\n"]},"metadata":{},"sourceType":"module"}