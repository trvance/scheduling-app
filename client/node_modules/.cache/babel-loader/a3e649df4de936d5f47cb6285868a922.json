{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/generateScheduleButton/GenerateScheduleButton.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Typography, Grid } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editEmployee } from '../../actions/employees';\nimport shifts from '../../testData/weekShifts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst randomShift = () => {\n  console.log(\"New\");\n\n  for (let i = shifts.length - 1; i >= 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shifts[i], shifts[j]] = [shifts[j], shifts[i]];\n    console.log(shifts[i][3]);\n  }\n};\n\nconst GenerateScheduleButton = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const employees = useSelector(state => state.employees);\n  const [employee, setEmployee] = useState(null);\n  const [currentId, setCurrentId] = useState(null);\n  useEffect(() => {\n    //if(employee) dispatch(editEmployee(currentId, employee))\n    if (employee) setEmployee(employees[0]);\n  }, [employee]);\n\n  const createSchedule = () => {\n    setEmployee(employees[0]);\n    setCurrentId(employees[0]._id);\n    setEmployee({ ...employee,\n      weekSchedule: [{\n        title: 'Cold Line',\n        startDate: '2021-04-26T08:30',\n        endDate: '2021-04-26T16:00'\n      }, {\n        title: 'Hot Line',\n        startDate: '2021-04-27T16:00',\n        endDate: '2021-04-27T22:30'\n      }, {\n        title: 'Cold Line',\n        startDate: '2021-04-28T08:30',\n        endDate: '2021-04-28T16:00'\n      }, {\n        title: 'Cold Line',\n        startDate: '2021-04-28T16:00',\n        endDate: '2021-04-28T22:30'\n      }, {\n        title: 'Floater',\n        startDate: '2021-04-29T15:30',\n        endDate: '2021-04-29T22:30'\n      }, {\n        title: 'Floater',\n        startDate: '2021-04-30T15:30',\n        endDate: '2021-04-30T22:30'\n      }]\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createSchedule();\n    console.log(employee); //dispatch(editEmployee(currentId, employee))\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"secondary\",\n      style: {\n        width: 300,\n        height: 50,\n        margin: 50\n      },\n      variant: \"contained\",\n      onClick: handleSubmit,\n      children: \"Generate Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: employee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GenerateScheduleButton, \"bnGcOS0Spf/XQA35lSx/XXyu/o0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GenerateScheduleButton;\nexport default GenerateScheduleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateScheduleButton\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/generateScheduleButton/GenerateScheduleButton.js"],"names":["Button","Typography","Grid","useState","useEffect","useDispatch","useSelector","editEmployee","shifts","randomShift","console","log","i","length","j","Math","floor","random","GenerateScheduleButton","dispatch","employees","state","employee","setEmployee","currentId","setCurrentId","createSchedule","_id","weekSchedule","title","startDate","endDate","handleSubmit","e","preventDefault","width","height","margin"],"mappings":"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","sourcesContent":["import { Button, Typography, Grid } from \"@material-ui/core\"\nimport { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { editEmployee } from '../../actions/employees'\nimport shifts from '../../testData/weekShifts'\n\nconst randomShift = () => {\n    console.log(\"New\")\n    for (let i = shifts.length - 1; i >= 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shifts[i], shifts[j]] = [shifts[j], shifts[i]];\n        console.log(shifts[i][3])\n    }\n}\n\nconst GenerateScheduleButton = () => {\n    const dispatch = useDispatch()\n    const employees = useSelector((state) => state.employees)\n    const [employee, setEmployee] = useState(null)\n    const [currentId, setCurrentId] = useState(null)\n\n    useEffect(()=> {\n        //if(employee) dispatch(editEmployee(currentId, employee))\n        if(employee) setEmployee(employees[0])\n    }, [employee])\n\n    const createSchedule = () => {\n        setEmployee(employees[0])\n        setCurrentId(employees[0]._id)\n        setEmployee({...employee, weekSchedule:[\n            {\n            title: 'Cold Line',\n            startDate: '2021-04-26T08:30', \n            endDate: '2021-04-26T16:00', \n            },\n            {\n            title: 'Hot Line',\n            startDate: '2021-04-27T16:00', \n            endDate: '2021-04-27T22:30', \n            },\n            {\n            title: 'Cold Line',\n            startDate: '2021-04-28T08:30', \n            endDate: '2021-04-28T16:00', \n            },\n            {\n            title: 'Cold Line',\n            startDate: '2021-04-28T16:00', \n            endDate: '2021-04-28T22:30', \n            },\n            {\n            title: 'Floater',\n            startDate: '2021-04-29T15:30', \n            endDate: '2021-04-29T22:30', \n            },\n            {\n            title: 'Floater',\n            startDate: '2021-04-30T15:30', \n            endDate: '2021-04-30T22:30', \n            },\n        ]})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        createSchedule()\n        console.log(employee)\n        //dispatch(editEmployee(currentId, employee))\n    }\n\n    \n    return (\n        <Grid>\n            <Button color='secondary' style={{width: 300, height: 50, margin:50}} variant='contained' onClick={handleSubmit}>\n                Generate Schedule\n            </Button>\n            <Typography>\n                {employee}\n            </Typography>\n        </Grid>\n    )\n}\n\nexport default GenerateScheduleButton\n"]},"metadata":{},"sourceType":"module"}