{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/availabilityComponent/AvailabilityComponent.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Grid, Typography, IconButton } from '@material-ui/core';\nimport DayIcon from '@material-ui/icons/WbSunnyTwoTone';\nimport NightIcon from '@material-ui/icons/NightsStayTwoTone';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailabilityComponent = () => {\n  _s();\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const [availability, setAvailability] = useState([{\n    day: 'Monday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Tuesday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Wednesday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Thursday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Friday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Saturday',\n    morning: false,\n    evening: false\n  }, {\n    day: 'Sunday',\n    morning: false,\n    evening: false\n  }]); // const [mondayMorning, setMondayMorning] = useState(true)\n  // const [mondayEvening, setMondayEvening] = useState(true)\n  // const [tuesdayMorning, setTuesdayMorning] = useState(true)\n  // const [tuesdayEvening, setTuesdayEvening] = useState(true)\n  // const [wednesdayMorning, setWednesdayMorning] = useState(true)\n  // const [wednesdayEvening, setWednesdayEvening] = useState(true)\n  // const [thursdayMorning, setThursdayMorning] = useState(true)\n  // const [thursdayEvening, setThursdayEvening] = useState(true)\n  // const [fridayMorning, setFridayMorning] = useState(true)\n  // const [fridayEvening, setFridayEvening] = useState(true)\n  // const [saturdayMorning, setSaturdayMorning] = useState(true)\n  // const [saturdayEvening, setSaturdayEvening] = useState(true)\n  // const [sundayMorning, setSundayMorning] = useState(true)\n  // const [sundayEvening, setSundayEvening] = useState(true)\n  // const handleMorningToggle = (day) => {\n  //     switch (day) {\n  //         case 'monday':\n  //             setAvailability([...availability, ])\n  //             break\n  //         case 'tuesday':\n  //             setTuesdayMorning(!tuesdayMorning)\n  //             break\n  //         case 'wednesday':\n  //             setWednesdayMorning(!wednesdayMorning)\n  //             break\n  //         case 'thursday':\n  //             setThursdayMorning(!thursdayMorning)\n  //             break\n  //         case 'friday':\n  //             setFridayMorning(!fridayMorning)\n  //             break\n  //         case 'saturday':\n  //             setSaturdayMorning(!saturdayMorning)\n  //             break\n  //         case 'sunday':\n  //             setSundayMorning(!sundayMorning)\n  //             break\n  //     }\n  // }\n\n  const handleEveningToggle = day => {};\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    align: \"center\",\n    xs: 12,\n    spacing: 0,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      justify: \"space-around\",\n      direction: \"row\",\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        children: \"Mon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Tue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Wed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          paddingRight: 8\n        },\n        children: \"Thu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          paddingRight: 10\n        },\n        children: \"Fri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          paddingRight: 8\n        },\n        children: \"Sat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Sun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), alert(availability[0].morning), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      justify: \"space-around\",\n      direction: \"row\",\n      spacing: 0,\n      children: days.map(day => {\n        return /*#__PURE__*/_jsxDEV(IconButton //value=\"check\"\n        , {\n          name: day,\n          size: \"small\",\n          style: {\n            marginBottom: 15\n          },\n          onClick: () => {\n            alert(day);\n          },\n          children: /*#__PURE__*/_jsxDEV(DayIcon, {\n            color: \"secondary\",\n            onClick: () => setAvailability([...availability, {\n              day: `${day}`,\n              morning: true\n            }])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      justify: \"space-around\",\n      direction: \"row\",\n      spacing: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailabilityComponent, \"6be8W1C0ApvL3zkWInmCqK5dbKg=\");\n\n_c = AvailabilityComponent;\nexport default AvailabilityComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailabilityComponent\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/availabilityComponent/AvailabilityComponent.js"],"names":["Card","Grid","Typography","IconButton","DayIcon","NightIcon","useState","AvailabilityComponent","days","availability","setAvailability","day","morning","evening","handleEveningToggle","paddingRight","alert","map","marginBottom"],"mappings":"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","sourcesContent":["import { Card, Grid, Typography, IconButton} from '@material-ui/core'\nimport DayIcon from '@material-ui/icons/WbSunnyTwoTone'\nimport NightIcon from '@material-ui/icons/NightsStayTwoTone'\nimport { useState } from 'react'\n\nconst AvailabilityComponent = () => {\n    const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']\n    const [availability, setAvailability] = useState([\n            {\n            day: 'Monday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Tuesday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Wednesday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Thursday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Friday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Saturday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Sunday',\n            morning: false,\n            evening: false,\n            },\n\n        ])\n\n    // const [mondayMorning, setMondayMorning] = useState(true)\n    // const [mondayEvening, setMondayEvening] = useState(true)\n    // const [tuesdayMorning, setTuesdayMorning] = useState(true)\n    // const [tuesdayEvening, setTuesdayEvening] = useState(true)\n    // const [wednesdayMorning, setWednesdayMorning] = useState(true)\n    // const [wednesdayEvening, setWednesdayEvening] = useState(true)\n    // const [thursdayMorning, setThursdayMorning] = useState(true)\n    // const [thursdayEvening, setThursdayEvening] = useState(true)\n    // const [fridayMorning, setFridayMorning] = useState(true)\n    // const [fridayEvening, setFridayEvening] = useState(true)\n    // const [saturdayMorning, setSaturdayMorning] = useState(true)\n    // const [saturdayEvening, setSaturdayEvening] = useState(true)\n    // const [sundayMorning, setSundayMorning] = useState(true)\n    // const [sundayEvening, setSundayEvening] = useState(true)\n\n    // const handleMorningToggle = (day) => {\n    //     switch (day) {\n    //         case 'monday':\n    //             setAvailability([...availability, ])\n    //             break\n    //         case 'tuesday':\n    //             setTuesdayMorning(!tuesdayMorning)\n    //             break\n    //         case 'wednesday':\n    //             setWednesdayMorning(!wednesdayMorning)\n    //             break\n    //         case 'thursday':\n    //             setThursdayMorning(!thursdayMorning)\n    //             break\n    //         case 'friday':\n    //             setFridayMorning(!fridayMorning)\n    //             break\n    //         case 'saturday':\n    //             setSaturdayMorning(!saturdayMorning)\n    //             break\n    //         case 'sunday':\n    //             setSundayMorning(!sundayMorning)\n    //             break\n    //     }\n\n    // }\n    \n    const handleEveningToggle = (day) => {\n\n    }\n\n    return (\n        <Grid container justify=\"center\" direction=\"column\" align=\"center\" xs={12} spacing={0}>\n            <Typography>Availability</Typography>\n\n            <Grid item container justify=\"space-around\" direction=\"row\"  spacing={0}>\n                <Typography gutterBottom>Mon</Typography>\n                <Typography>Tue</Typography>\n                <Typography >Wed</Typography>\n                <Typography style={{paddingRight: 8}}>Thu</Typography>\n                <Typography style={{paddingRight: 10}}>Fri</Typography>\n                <Typography style={{paddingRight: 8}}>Sat</Typography>\n                <Typography>Sun</Typography>\n            </Grid>\n            {alert(availability[0].morning)}\n\n            <Grid item container justify=\"space-around\" direction=\"row\" spacing={0}>\n                {days.map((day) => {\n\n                    return(\n                        <IconButton\n                            //value=\"check\"\n                            name={day}\n                            size=\"small\"\n                            style={{marginBottom: 15}}\n                            onClick={() => {\n                                alert(day)\n                            }}\n                        >\n                            <DayIcon color=\"secondary\" onClick={() => setAvailability([...availability,{day: `${day}`, morning: true}])}/>\n                        </IconButton>\n\n                    )\n                })}\n                {/* <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <DayIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <DayIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <DayIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <DayIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <DayIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <DayIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <DayIcon />\n                </ToggleButton> */}\n                \n            </Grid>\n\n\n            <Grid item container justify=\"space-around\" direction=\"row\" spacing={0}>\n                {/* <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <NightIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <NightIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <NightIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <NightIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <NightIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <NightIcon />\n                </ToggleButton>\n                <ToggleButton\n                    value=\"check\"\n                    selected={mondayMorning}\n                    size=\"small\"\n                    style={{marginBottom: 15}}\n                    onChange={() => {\n                        setMondayMorning(!mondayMorning);\n                    }}\n                >\n                    <NightIcon />\n                </ToggleButton> */}\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default AvailabilityComponent\n"]},"metadata":{},"sourceType":"module"}