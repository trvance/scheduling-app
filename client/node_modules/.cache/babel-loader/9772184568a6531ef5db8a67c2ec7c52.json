{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app/src/components/Calendar/calendar.js\";\nimport './calendar.css';\nimport { format } from 'date-fns';\nimport { subMonths, addMonths } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst state = {\n  currentMonth: new Date(),\n  selectedDate: new Date()\n};\n\nconst renderHeader = () => {\n  const dateFormat = 'MMMM yyyy';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header row flex-middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col col-start\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        onClick: prevMonth,\n        children: \"chevron_left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col col-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: format(state.currentMonth, dateFormat)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col col-end\",\n      onClick: nextMonth,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: \"chevron_right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n\nconst renderDays = () => {};\n\nconst renderCells = () => {};\n\nconst onDateClick = day => {};\n\nconst prevMonth = currentMonth => {\n  subMonths(currentMonth, 1);\n};\n\nconst nextMonth = () => {};\n\nconst calendar = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: [renderHeader(), renderDays(), renderCells()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\nexport default calendar;","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app/src/components/Calendar/calendar.js"],"names":["format","subMonths","addMonths","state","currentMonth","Date","selectedDate","renderHeader","dateFormat","prevMonth","nextMonth","renderDays","renderCells","onDateClick","day","calendar"],"mappings":";AAAA,OAAO,gBAAP;AACA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,UAArC;;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,YAAY,EAAE,IAAIC,IAAJ,EADJ;AAEVC,EAAAA,YAAY,EAAE,IAAID,IAAJ;AAFJ,CAAd;;AAKA,MAAME,YAAY,GAAG,MAAM;AACvB,QAAMC,UAAU,GAAG,WAAnB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,OAAO,EAAEC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAA,kBACGT,MAAM,CAACG,KAAK,CAACC,YAAP,EAAqBI,UAArB;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAEE,SAAtC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH,CAnBD;;AAoBA,MAAMC,UAAU,GAAC,MAAI,CAAE,CAAvB;;AACA,MAAMC,WAAW,GAAC,MAAI,CAAE,CAAxB;;AAEA,MAAMC,WAAW,GAAGC,GAAG,IAAI,CAAE,CAA7B;;AAEA,MAAML,SAAS,GAAIL,YAAD,IAAkB;AAChCH,EAAAA,SAAS,CAACG,YAAD,EAAe,CAAf,CAAT;AACH,CAFD;;AAIA,MAAMM,SAAS,GAAG,MAAM,CAAE,CAA1B;;AAGA,MAAMK,QAAQ,GAAG,MAAM;AACnB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACKR,YAAY,EADjB,EAEKI,UAAU,EAFf,EAGKC,WAAW,EAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;AAaA,eAAeG,QAAf","sourcesContent":["import './calendar.css'\nimport { format } from 'date-fns'\nimport { subMonths, addMonths } from 'date-fns'\n\nconst state = {\n    currentMonth: new Date(),\n    selectedDate: new Date(),\n}\n\nconst renderHeader = () => {\n    const dateFormat = 'MMMM yyyy'\n    return (\n      <div className='header row flex-middle'>\n        <div className='col col-start'>\n          <div className='icon' onClick={prevMonth}>\n            chevron_left\n          </div>\n        </div>\n        <div className='col col-center'>\n          <span>\n            {format(state.currentMonth, dateFormat)}\n          </span>\n        </div>\n        <div className='col col-end' onClick={nextMonth}>\n          <div className='icon'>chevron_right</div>\n        </div>\n      </div>\n    )\n}\nconst renderDays=()=>{}\nconst renderCells=()=>{}\n\nconst onDateClick = day => {}\n\nconst prevMonth = (currentMonth) => {\n    subMonths(currentMonth, 1)\n}\n\nconst nextMonth = () => {}\n\n\nconst calendar = () => {\n    return (\n        <div>\n            <h2>Calendar</h2>\n            <div className='calendar'>\n                {renderHeader()}\n                {renderDays()}\n                {renderCells()}\n            </div>\n        </div>\n    )\n}\n\nexport default calendar\n"]},"metadata":{},"sourceType":"module"}