{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/generateScheduleButton/GenerateScheduleButton.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editEmployee } from '../../actions/employees';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenerateScheduleButton = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const employees = useSelector(state => state.employees);\n  const [employee, setEmployee] = useState(null);\n  const [currentId, setCurrentId] = useState(null);\n  useEffect(() => {\n    if (employee) dispatch(editEmployee(currentId, employee));\n  }, [employee]);\n\n  const createSchedule = () => {\n    setEmployee(employees[0]);\n    setCurrentId(employees[0]._id);\n    setEmployee({ ...employee,\n      weekSchedule: [{\n        title: 'Cold Line',\n        startDate: '2021-04-19T08:30',\n        endDate: '2021-04-19T16:00'\n      }, {\n        title: 'Hot Line',\n        startDate: '2021-04-20T16:00',\n        endDate: '2021-04-20T22:30'\n      }, {\n        title: 'Cold Line',\n        startDate: '2021-04-21T08:30',\n        endDate: '2021-04-21T16:00'\n      }, {\n        title: 'Cold Line',\n        startDate: '2021-04-21T16:00',\n        endDate: '2021-04-21T22:30'\n      }, {\n        title: 'Floater',\n        startDate: '2021-04-22T15:30',\n        endDate: '2021-04-22T22:30'\n      }]\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createSchedule(); //console.log(employee)\n    //dispatch(editEmployee(currentId, employee))\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    color: \"secondary\",\n    style: {\n      width: 300,\n      height: 50,\n      margin: 50\n    },\n    variant: \"contained\",\n    onClick: handleSubmit,\n    children: \"Generate Schedule\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GenerateScheduleButton, \"bnGcOS0Spf/XQA35lSx/XXyu/o0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GenerateScheduleButton;\nexport default GenerateScheduleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateScheduleButton\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/generateScheduleButton/GenerateScheduleButton.js"],"names":["Button","useState","useEffect","useDispatch","useSelector","editEmployee","GenerateScheduleButton","dispatch","employees","state","employee","setEmployee","currentId","setCurrentId","createSchedule","_id","weekSchedule","title","startDate","endDate","handleSubmit","e","preventDefault","width","height","margin"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AACjC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGQ,QAAH,EAAaH,QAAQ,CAACF,YAAY,CAACO,SAAD,EAAYF,QAAZ,CAAb,CAAR;AAChB,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,QAAMI,cAAc,GAAG,MAAM;AACzBH,IAAAA,WAAW,CAACH,SAAS,CAAC,CAAD,CAAV,CAAX;AACAK,IAAAA,YAAY,CAACL,SAAS,CAAC,CAAD,CAAT,CAAaO,GAAd,CAAZ;AACAJ,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcM,MAAAA,YAAY,EAAC,CACnC;AACAC,QAAAA,KAAK,EAAE,WADP;AAEAC,QAAAA,SAAS,EAAE,kBAFX;AAGAC,QAAAA,OAAO,EAAE;AAHT,OADmC,EAMnC;AACAF,QAAAA,KAAK,EAAE,UADP;AAEAC,QAAAA,SAAS,EAAE,kBAFX;AAGAC,QAAAA,OAAO,EAAE;AAHT,OANmC,EAWnC;AACAF,QAAAA,KAAK,EAAE,WADP;AAEAC,QAAAA,SAAS,EAAE,kBAFX;AAGAC,QAAAA,OAAO,EAAE;AAHT,OAXmC,EAgBnC;AACAF,QAAAA,KAAK,EAAE,WADP;AAEAC,QAAAA,SAAS,EAAE,kBAFX;AAGAC,QAAAA,OAAO,EAAE;AAHT,OAhBmC,EAqBnC;AACAF,QAAAA,KAAK,EAAE,SADP;AAEAC,QAAAA,SAAS,EAAE,kBAFX;AAGAC,QAAAA,OAAO,EAAE;AAHT,OArBmC;AAA3B,KAAD,CAAX;AA2BH,GA9BD;;AAgCA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,cAAc,GAFU,CAGxB;AACA;AACH,GALD;;AAQA,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,KAAK,EAAE;AAACS,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBC,MAAAA,MAAM,EAAC;AAAhC,KAAjC;AAAsE,IAAA,OAAO,EAAC,WAA9E;AAA0F,IAAA,OAAO,EAAEL,YAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxDD;;GAAMd,sB;UACeH,W,EACCC,W;;;KAFhBE,sB;AA0DN,eAAeA,sBAAf","sourcesContent":["import { Button } from \"@material-ui/core\"\nimport { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { editEmployee } from '../../actions/employees'\n\nconst GenerateScheduleButton = () => {\n    const dispatch = useDispatch()\n    const employees = useSelector((state) => state.employees)\n    const [employee, setEmployee] = useState(null)\n    const [currentId, setCurrentId] = useState(null)\n\n    useEffect(()=> {\n        if(employee) dispatch(editEmployee(currentId, employee))\n    }, [employee])\n\n    const createSchedule = () => {\n        setEmployee(employees[0])\n        setCurrentId(employees[0]._id)\n        setEmployee({...employee, weekSchedule:[\n            {\n            title: 'Cold Line',\n            startDate: '2021-04-19T08:30', \n            endDate: '2021-04-19T16:00', \n            },\n            {\n            title: 'Hot Line',\n            startDate: '2021-04-20T16:00', \n            endDate: '2021-04-20T22:30', \n            },\n            {\n            title: 'Cold Line',\n            startDate: '2021-04-21T08:30', \n            endDate: '2021-04-21T16:00', \n            },\n            {\n            title: 'Cold Line',\n            startDate: '2021-04-21T16:00', \n            endDate: '2021-04-21T22:30', \n            },\n            {\n            title: 'Floater',\n            startDate: '2021-04-22T15:30', \n            endDate: '2021-04-22T22:30', \n            },\n        ]})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        createSchedule()\n        //console.log(employee)\n        //dispatch(editEmployee(currentId, employee))\n    }\n\n    \n    return (\n        <Button color='secondary' style={{width: 300, height: 50, margin:50}} variant='contained' onClick={handleSubmit}>\n            Generate Schedule\n        </Button>\n\n    )\n}\n\nexport default GenerateScheduleButton\n"]},"metadata":{},"sourceType":"module"}