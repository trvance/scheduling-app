{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/calendars/Calendar.js\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, DayView, WeekView, Appointments, AppointmentForm, ConfirmationDialog, AppointmentTooltip, Toolbar, ViewSwitcher, TodayButton, DateNavigator } from '@devexpress/dx-react-scheduler-material-ui';\nimport Card from '@material-ui/core/Card';\nimport { appointments } from '../../testData/testTimes';\nimport shifts from '../../testData/weekShifts';\nimport { useSelector } from 'react-redux';\nimport theme from '../../themes/mintTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Appointment = ({\n  children,\n  style,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Appointments.Appointment, { ...restProps,\n  style: { ...style,\n    color: 'black',\n    backgroundColor: theme.palette.primary.dark,\n    borderRadius: '8px',\n    borderWidth: 1.5\n  },\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 5\n}, this);\n\n_c = Appointment;\n\nconst Calendar = ({\n  employeesSchedules\n}) => {\n  const currentDate = new Date(); //const nextWeekDate = new Date(currentDate.setDate(currentDate.getDate() + 7))\n\n  let schedulerData = employeesSchedules ? employeesSchedules : [];\n  return /*#__PURE__*/_jsxDEV(Scheduler, {\n    data: schedulerData,\n    firstDayOfWeek: 1,\n    children: [/*#__PURE__*/_jsxDEV(ViewState, {\n      defaultCurrentDate: currentDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DayView, {\n      startDayHour: 7,\n      cellDuration: 60,\n      endDayHour: 23\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Appointments, {\n      appointmentComponent: Appointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppointmentTooltip, {\n      showCloseButton: true,\n      showDeleteButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodayButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DateNavigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Calendar;\nexport default Calendar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Appointment\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/calendars/Calendar.js"],"names":["makeStyles","ViewState","EditingState","IntegratedEditing","Scheduler","DayView","WeekView","Appointments","AppointmentForm","ConfirmationDialog","AppointmentTooltip","Toolbar","ViewSwitcher","TodayButton","DateNavigator","Card","appointments","shifts","useSelector","theme","Appointment","children","style","restProps","color","backgroundColor","palette","primary","dark","borderRadius","borderWidth","Calendar","employeesSchedules","currentDate","Date","schedulerData"],"mappings":";AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SACIC,SADJ,EAEIC,YAFJ,EAGIC,iBAHJ,QAIO,gCAJP;AAKA,SACIC,SADJ,EAEIC,OAFJ,EAGIC,QAHJ,EAIIC,YAJJ,EAKIC,eALJ,EAMIC,kBANJ,EAOIC,kBAPJ,EAQIC,OARJ,EASIC,YATJ,EAUIC,WAVJ,EAWIC,aAXJ,QAYO,4CAZP;AAaA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAIA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA,QADiB;AACPC,EAAAA,KADO;AACA,KAAGC;AADH,CAAD,kBAGhB,QAAC,YAAD,CAAc,WAAd,OACMA,SADN;AAEE,EAAA,KAAK,EAAE,EACL,GAAGD,KADE;AAELE,IAAAA,KAAK,EAAE,OAFF;AAGLC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBC,IAHlC;AAILC,IAAAA,YAAY,EAAE,KAJT;AAKLC,IAAAA,WAAW,EAAC;AALP,GAFT;AAAA,YAUGT;AAVH;AAAA;AAAA;AAAA;AAAA,QAHJ;;KAAMD,W;;AAkBN,MAAMW,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA0B;AACvC,QAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB,CADuC,CAEvC;;AACA,MAAIC,aAAa,GAAGH,kBAAkB,GAAGA,kBAAH,GAAwB,EAA9D;AAEA,sBACI,QAAC,SAAD;AACI,IAAA,IAAI,EAAEG,aADV;AAEI,IAAA,cAAc,EAAE,CAFpB;AAAA,4BAII,QAAC,SAAD;AACI,MAAA,kBAAkB,EAAEF;AADxB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,OAAD;AACI,MAAA,YAAY,EAAE,CADlB;AAEI,MAAA,YAAY,EAAE,EAFlB;AAGI,MAAA,UAAU,EAAE;AAHhB;AAAA;AAAA;AAAA;AAAA,YAPJ,eAiBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAmBI,QAAC,YAAD;AAAc,MAAA,oBAAoB,EAAEb;AAApC;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAoBI,QAAC,kBAAD;AACI,MAAA,eAAe,MADnB;AAEI,MAAA,gBAAgB;AAFpB;AAAA;AAAA;AAAA;AAAA,YApBJ,eAwBI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAxBJ,eAyBI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAlCD;;MAAMW,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\nimport { \n    ViewState, \n    EditingState, \n    IntegratedEditing \n} from '@devexpress/dx-react-scheduler'\nimport { \n    Scheduler, \n    DayView, \n    WeekView,\n    Appointments, \n    AppointmentForm,\n    ConfirmationDialog,\n    AppointmentTooltip,\n    Toolbar,\n    ViewSwitcher,\n    TodayButton,\n    DateNavigator,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport Card from '@material-ui/core/Card'\nimport { appointments } from '../../testData/testTimes'\nimport shifts from '../../testData/weekShifts'\nimport { useSelector } from 'react-redux'\nimport theme from '../../themes/mintTheme'\n\n\n\nconst Appointment = ({\n    children, style, ...restProps\n  }) => (\n    <Appointments.Appointment\n      {...restProps}\n      style={{\n        ...style,\n        color: 'black',\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: '8px',\n        borderWidth:1.5,\n      }}\n    >\n      {children}\n    </Appointments.Appointment>\n);\n\n\nconst Calendar = ({employeesSchedules}) => {\n    const currentDate = new Date()\n    //const nextWeekDate = new Date(currentDate.setDate(currentDate.getDate() + 7))\n    let schedulerData = employeesSchedules ? employeesSchedules : []\n    \n    return (\n        <Scheduler\n            data={schedulerData}\n            firstDayOfWeek={1}\n        >\n            <ViewState\n                defaultCurrentDate={currentDate}\n            />\n            <DayView\n                startDayHour={7}\n                cellDuration={60}\n                endDayHour={23}\n            />\n            {/* <WeekView\n                startDayHour={7}\n                cellDuration={60}\n                endDayHour={23}\n            /> */}\n            <Toolbar />\n            {/* <ViewSwitcher /> */}\n            <Appointments appointmentComponent={Appointment} />\n            <AppointmentTooltip \n                showCloseButton\n                showDeleteButton\n            />\n            <TodayButton />\n            <DateNavigator />\n        </Scheduler>\n    )\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}