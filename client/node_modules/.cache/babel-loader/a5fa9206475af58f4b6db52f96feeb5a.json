{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, WeekView, Appointments, AppointmentForm, AppointmentTooltip, DragDropProvider, ConfirmationDialog, EditRecurrenceMenu, AllDayPanel } from '@devexpress/dx-react-scheduler-material-ui';\nimport { areIntervalsOverlapping } from 'date-fns';\nimport { testEmployees } from '../../testData/testEmployees'; // const Availability = ({employeeAvailability}) => {\n//     const currentDate = new Date()\n//     const [availability, setAvailability] = useState(employeeAvailability)\n//     const commitChanges = ({ added, changed, deleted }) => {\n//         if (added) {\n//             setAvailability([...availability, {...added}])\n//         }\n//         if (changed) {\n//              setAvailability(() => availability.map(appointment => (\n//                 changed[appointment] ? [...appointment, {...changed}] : appointment\n//              )))\n//         }\n//         if (deleted !== undefined) {\n//             setAvailability(() => availability.filter(appointment => appointment.id !== deleted))\n//         }\n//     }\n//     return (\n//             <Scheduler\n//                 data={availability}\n//                 firstDayOfWeek={1}\n//             >\n//                 <ViewState\n//                     defaultCurrentDate={currentDate}\n//                 />\n//                 <WeekView\n//                     startDayHour={6}\n//                     cellDuration={120}\n//                     endDayHour={24}\n//                 />\n//                 <EditingState onCommitChanges={commitChanges}/>\n//                 <IntegratedEditing />\n//                 <ConfirmationDialog />\n//                 <Appointments />\n//                 <AppointmentTooltip \n//                     showOpenButton\n//                     showCloseButton\n//                     showDeleteButton\n//                 />\n//                 <AppointmentForm />\n//                 <DragDropProvider />\n//             </Scheduler>\n//     )\n// }\n// export default Availability\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentDate = '2018-06-27';\nconst editingOptionsList = [{\n  id: 'allowAdding',\n  text: 'Adding'\n}, {\n  id: 'allowDeleting',\n  text: 'Deleting'\n}, {\n  id: 'allowUpdating',\n  text: 'Updating'\n}, {\n  id: 'allowResizing',\n  text: 'Resizing'\n}, {\n  id: 'allowDragging',\n  text: 'Dragging'\n}];\n\nconst EditingOptionsSelector = ({\n  options,\n  onOptionsChange\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.text,\n      children: \"Enabled Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      children: editingOptionsList.map(({\n        id,\n        text\n      }) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: options[id],\n          onChange: onOptionsChange,\n          value: id,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this),\n        classes: {\n          label: classes.formControlLabel\n        },\n        label: text,\n        disabled: (id === 'allowDragging' || id === 'allowResizing') && !options.allowUpdating\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditingOptionsSelector, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = EditingOptionsSelector;\nexport default _s2(() => {\n  _s2();\n\n  const [data, setData] = React.useState(appointments);\n  const [editingOptions, setEditingOptions] = React.useState({\n    allowAdding: true,\n    allowDeleting: true,\n    allowUpdating: true,\n    allowDragging: true,\n    allowResizing: true\n  });\n  const [addedAppointment, setAddedAppointment] = React.useState({});\n  const [isAppointmentBeingCreated, setIsAppointmentBeingCreated] = React.useState(false);\n  const {\n    allowAdding,\n    allowDeleting,\n    allowUpdating,\n    allowResizing,\n    allowDragging\n  } = editingOptions;\n  const onCommitChanges = React.useCallback(({\n    added,\n    changed,\n    deleted\n  }) => {\n    if (added) {\n      const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n      setData([...data, {\n        id: startingAddedId,\n        ...added\n      }]);\n    }\n\n    if (changed) {\n      setData(data.map(appointment => changed[appointment.id] ? { ...appointment,\n        ...changed[appointment.id]\n      } : appointment));\n    }\n\n    if (deleted !== undefined) {\n      setData(data.filter(appointment => appointment.id !== deleted));\n    }\n\n    setIsAppointmentBeingCreated(false);\n  }, [setData, setIsAppointmentBeingCreated, data]);\n  const onAddedAppointmentChange = React.useCallback(appointment => {\n    setAddedAppointment(appointment);\n    setIsAppointmentBeingCreated(true);\n  });\n  const handleEditingOptionsChange = React.useCallback(({\n    target\n  }) => {\n    const {\n      value\n    } = target;\n    const {\n      [value]: checked\n    } = editingOptions;\n    setEditingOptions({ ...editingOptions,\n      [value]: !checked\n    });\n  });\n  const TimeTableCell = React.useCallback( /*#__PURE__*/React.memo(({\n    onDoubleClick,\n    ...restProps\n  }) => /*#__PURE__*/_jsxDEV(WeekView.TimeTableCell, { ...restProps,\n    onDoubleClick: allowAdding ? onDoubleClick : undefined\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this)), [allowAdding]);\n  const CommandButton = React.useCallback(({\n    id,\n    ...restProps\n  }) => {\n    if (id === 'deleteButton') {\n      return /*#__PURE__*/_jsxDEV(AppointmentForm.CommandButton, {\n        id: id,\n        ...restProps,\n        disabled: !allowDeleting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(AppointmentForm.CommandButton, {\n      id: id,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 12\n    }, this);\n  }, [allowDeleting]);\n  const allowDrag = React.useCallback(() => allowDragging && allowUpdating, [allowDragging, allowUpdating]);\n  const allowResize = React.useCallback(() => allowResizing && allowUpdating, [allowResizing, allowUpdating]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EditingOptionsSelector, {\n      options: editingOptions,\n      onOptionsChange: handleEditingOptionsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Scheduler, {\n        data: data,\n        height: 600,\n        children: [/*#__PURE__*/_jsxDEV(ViewState, {\n          currentDate: currentDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditingState, {\n          onCommitChanges: onCommitChanges,\n          addedAppointment: addedAppointment,\n          onAddedAppointmentChange: onAddedAppointmentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IntegratedEditing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeekView, {\n          startDayHour: 9,\n          endDayHour: 19,\n          timeTableCellComponent: TimeTableCell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Appointments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AppointmentTooltip, {\n          showOpenButton: true,\n          showDeleteButton: allowDeleting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {\n          commandButtonComponent: CommandButton,\n          readOnly: isAppointmentBeingCreated ? false : !allowUpdating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DragDropProvider, {\n          allowDrag: allowDrag,\n          allowResize: allowResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}, \"l5EoQ3yWxFels11hHNopSUL4H1M=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"EditingOptionsSelector\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app copy/src/components/calendars/Availability.js"],"names":["React","useState","Paper","makeStyles","ViewState","EditingState","IntegratedEditing","Scheduler","WeekView","Appointments","AppointmentForm","AppointmentTooltip","DragDropProvider","ConfirmationDialog","EditRecurrenceMenu","AllDayPanel","areIntervalsOverlapping","testEmployees","currentDate","editingOptionsList","id","text","EditingOptionsSelector","options","onOptionsChange","classes","useStyles","container","map","label","formControlLabel","allowUpdating","data","setData","appointments","editingOptions","setEditingOptions","allowAdding","allowDeleting","allowDragging","allowResizing","addedAppointment","setAddedAppointment","isAppointmentBeingCreated","setIsAppointmentBeingCreated","onCommitChanges","useCallback","added","changed","deleted","startingAddedId","length","appointment","undefined","filter","onAddedAppointmentChange","handleEditingOptionsChange","target","value","checked","TimeTableCell","memo","onDoubleClick","restProps","CommandButton","allowDrag","allowResize"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACIC,SADJ,EAEIC,YAFJ,EAGIC,iBAHJ,QAIQ,gCAJR;AAKA,SACIC,SADJ,EAEIC,QAFJ,EAGIC,YAHJ,EAIIC,eAJJ,EAKIC,kBALJ,EAMIC,gBANJ,EAOIC,kBAPJ,EAQIC,kBARJ,EASIC,WATJ,QAUO,4CAVP;AAWA,SAASC,uBAAT,QAAwC,UAAxC;AACA,SAASC,aAAT,QAA8B,8BAA9B,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAIA,MAAMC,WAAW,GAAG,YAApB;AACA,MAAMC,kBAAkB,GAAG,CACzB;AAAEC,EAAAA,EAAE,EAAE,aAAN;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CADyB,EAEzB;AAAED,EAAAA,EAAE,EAAE,eAAN;AAAuBC,EAAAA,IAAI,EAAE;AAA7B,CAFyB,EAGzB;AAAED,EAAAA,EAAE,EAAE,eAAN;AAAuBC,EAAAA,IAAI,EAAE;AAA7B,CAHyB,EAIzB;AAAED,EAAAA,EAAE,EAAE,eAAN;AAAuBC,EAAAA,IAAI,EAAE;AAA7B,CAJyB,EAKzB;AAAED,EAAAA,EAAE,EAAE,eAAN;AAAuBC,EAAAA,IAAI,EAAE;AAA7B,CALyB,CAA3B;;AAQA,MAAMC,sBAAsB,GAAG,CAAC;AAC9BC,EAAAA,OAD8B;AACrBC,EAAAA;AADqB,CAAD,KAEzB;AAAA;;AACJ,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,sBACE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACE,SAAxB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEF,OAAO,CAACJ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA,gBACGF,kBAAkB,CAACS,GAAnB,CAAuB,CAAC;AAAER,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAD,kBACtB,QAAC,gBAAD;AACE,QAAA,OAAO,eACL,QAAC,QAAD;AACE,UAAA,OAAO,EAAEE,OAAO,CAACH,EAAD,CADlB;AAEE,UAAA,QAAQ,EAAEI,eAFZ;AAGE,UAAA,KAAK,EAAEJ,EAHT;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AASE,QAAA,OAAO,EAAE;AAAES,UAAAA,KAAK,EAAEJ,OAAO,CAACK;AAAjB,SATX;AAUE,QAAA,KAAK,EAAET,IAVT;AAYE,QAAA,QAAQ,EAAE,CAACD,EAAE,KAAK,eAAP,IAA0BA,EAAE,KAAK,eAAlC,KAAsD,CAACG,OAAO,CAACQ;AAZ3E,SAWOX,EAXP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA7BD;;GAAME,sB;;KAAAA,sB;AA+BN,mBAAe,MAAM;AAAA;;AACnB,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBjC,KAAK,CAACC,QAAN,CAAeiC,YAAf,CAAxB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCpC,KAAK,CAACC,QAAN,CAAe;AACzDoC,IAAAA,WAAW,EAAE,IAD4C;AAEzDC,IAAAA,aAAa,EAAE,IAF0C;AAGzDP,IAAAA,aAAa,EAAE,IAH0C;AAIzDQ,IAAAA,aAAa,EAAE,IAJ0C;AAKzDC,IAAAA,aAAa,EAAE;AAL0C,GAAf,CAA5C;AAOA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0C1C,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhD;AACA,QAAM,CAAC0C,yBAAD,EAA4BC,4BAA5B,IAA4D5C,KAAK,CAACC,QAAN,CAAe,KAAf,CAAlE;AAEA,QAAM;AACJoC,IAAAA,WADI;AACSC,IAAAA,aADT;AACwBP,IAAAA,aADxB;AACuCS,IAAAA,aADvC;AACsDD,IAAAA;AADtD,MAEFJ,cAFJ;AAIA,QAAMU,eAAe,GAAG7C,KAAK,CAAC8C,WAAN,CAAkB,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAD,KAAiC;AACzE,QAAIF,KAAJ,EAAW;AACT,YAAMG,eAAe,GAAGlB,IAAI,CAACmB,MAAL,GAAc,CAAd,GAAkBnB,IAAI,CAACA,IAAI,CAACmB,MAAL,GAAc,CAAf,CAAJ,CAAsB/B,EAAtB,GAA2B,CAA7C,GAAiD,CAAzE;AACAa,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAAEZ,QAAAA,EAAE,EAAE8B,eAAN;AAAuB,WAAGH;AAA1B,OAAV,CAAD,CAAP;AACD;;AACD,QAAIC,OAAJ,EAAa;AACXf,MAAAA,OAAO,CAACD,IAAI,CAACJ,GAAL,CAASwB,WAAW,IAC1BJ,OAAO,CAACI,WAAW,CAAChC,EAAb,CAAP,GAA0B,EAAE,GAAGgC,WAAL;AAAkB,WAAGJ,OAAO,CAACI,WAAW,CAAChC,EAAb;AAA5B,OAA1B,GAA2EgC,WADrE,CAAD,CAAP;AAED;;AACD,QAAIH,OAAO,KAAKI,SAAhB,EAA2B;AACzBpB,MAAAA,OAAO,CAACD,IAAI,CAACsB,MAAL,CAAYF,WAAW,IAAIA,WAAW,CAAChC,EAAZ,KAAmB6B,OAA9C,CAAD,CAAP;AACD;;AACDL,IAAAA,4BAA4B,CAAC,KAAD,CAA5B;AACD,GAbuB,EAarB,CAACX,OAAD,EAAUW,4BAAV,EAAwCZ,IAAxC,CAbqB,CAAxB;AAcA,QAAMuB,wBAAwB,GAAGvD,KAAK,CAAC8C,WAAN,CAAmBM,WAAD,IAAiB;AAClEV,IAAAA,mBAAmB,CAACU,WAAD,CAAnB;AACAR,IAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACD,GAHgC,CAAjC;AAIA,QAAMY,0BAA0B,GAAGxD,KAAK,CAAC8C,WAAN,CAAkB,CAAC;AAAEW,IAAAA;AAAF,GAAD,KAAgB;AACnE,UAAM;AAAEC,MAAAA;AAAF,QAAYD,MAAlB;AACA,UAAM;AAAE,OAACC,KAAD,GAASC;AAAX,QAAuBxB,cAA7B;AACAC,IAAAA,iBAAiB,CAAC,EAChB,GAAGD,cADa;AAEhB,OAACuB,KAAD,GAAS,CAACC;AAFM,KAAD,CAAjB;AAID,GAPkC,CAAnC;AASA,QAAMC,aAAa,GAAG5D,KAAK,CAAC8C,WAAN,eAAkB9C,KAAK,CAAC6D,IAAN,CAAW,CAAC;AAAEC,IAAAA,aAAF;AAAiB,OAAGC;AAApB,GAAD,kBACjD,QAAC,QAAD,CAAU,aAAV,OACMA,SADN;AAEE,IAAA,aAAa,EAAE1B,WAAW,GAAGyB,aAAH,GAAmBT;AAF/C;AAAA;AAAA;AAAA;AAAA,UADsC,CAAlB,EAKlB,CAAChB,WAAD,CALkB,CAAtB;AAOA,QAAM2B,aAAa,GAAGhE,KAAK,CAAC8C,WAAN,CAAkB,CAAC;AAAE1B,IAAAA,EAAF;AAAM,OAAG2C;AAAT,GAAD,KAA0B;AAChE,QAAI3C,EAAE,KAAK,cAAX,EAA2B;AACzB,0BAAO,QAAC,eAAD,CAAiB,aAAjB;AAA+B,QAAA,EAAE,EAAEA,EAAnC;AAAA,WAA2C2C,SAA3C;AAAsD,QAAA,QAAQ,EAAE,CAACzB;AAAjE;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBAAO,QAAC,eAAD,CAAiB,aAAjB;AAA+B,MAAA,EAAE,EAAElB,EAAnC;AAAA,SAA2C2C;AAA3C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GALqB,EAKnB,CAACzB,aAAD,CALmB,CAAtB;AAOA,QAAM2B,SAAS,GAAGjE,KAAK,CAAC8C,WAAN,CAChB,MAAMP,aAAa,IAAIR,aADP,EAEhB,CAACQ,aAAD,EAAgBR,aAAhB,CAFgB,CAAlB;AAIA,QAAMmC,WAAW,GAAGlE,KAAK,CAAC8C,WAAN,CAClB,MAAMN,aAAa,IAAIT,aADL,EAElB,CAACS,aAAD,EAAgBT,aAAhB,CAFkB,CAApB;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,sBAAD;AACE,MAAA,OAAO,EAAEI,cADX;AAEE,MAAA,eAAe,EAAEqB;AAFnB;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,IAAI,EAAExB,IADR;AAEE,QAAA,MAAM,EAAE,GAFV;AAAA,gCAIE,QAAC,SAAD;AACE,UAAA,WAAW,EAAEd;AADf;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,YAAD;AACE,UAAA,eAAe,EAAE2B,eADnB;AAGE,UAAA,gBAAgB,EAAEJ,gBAHpB;AAIE,UAAA,wBAAwB,EAAEc;AAJ5B;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE,QAAC,QAAD;AACE,UAAA,YAAY,EAAE,CADhB;AAEE,UAAA,UAAU,EAAE,EAFd;AAGE,UAAA,sBAAsB,EAAEK;AAH1B;AAAA;AAAA;AAAA;AAAA,gBAfF,eAqBE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBArBF,eAuBE,QAAC,kBAAD;AACE,UAAA,cAAc,MADhB;AAEE,UAAA,gBAAgB,EAAEtB;AAFpB;AAAA;AAAA;AAAA;AAAA,gBAvBF,eA2BE,QAAC,eAAD;AACE,UAAA,sBAAsB,EAAE0B,aAD1B;AAEE,UAAA,QAAQ,EAAErB,yBAAyB,GAAG,KAAH,GAAW,CAACZ;AAFjD;AAAA;AAAA;AAAA;AAAA,gBA3BF,eA+BE,QAAC,gBAAD;AACE,UAAA,SAAS,EAAEkC,SADb;AAEE,UAAA,WAAW,EAAEC;AAFf;AAAA;AAAA;AAAA;AAAA,gBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CAhHD","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { \n    ViewState, \n    EditingState, \n    IntegratedEditing,\n } from '@devexpress/dx-react-scheduler'\nimport { \n    Scheduler,  \n    WeekView,\n    Appointments, \n    AppointmentForm,\n    AppointmentTooltip,\n    DragDropProvider,\n    ConfirmationDialog,\n    EditRecurrenceMenu,\n    AllDayPanel,\n} from '@devexpress/dx-react-scheduler-material-ui'\nimport { areIntervalsOverlapping } from 'date-fns'\nimport { testEmployees } from '../../testData/testEmployees'\n\n// const Availability = ({employeeAvailability}) => {\n//     const currentDate = new Date()\n//     const [availability, setAvailability] = useState(employeeAvailability)\n\n//     const commitChanges = ({ added, changed, deleted }) => {\n//         if (added) {\n//             setAvailability([...availability, {...added}])\n//         }\n//         if (changed) {\n//              setAvailability(() => availability.map(appointment => (\n//                 changed[appointment] ? [...appointment, {...changed}] : appointment\n//              )))\n//         }\n//         if (deleted !== undefined) {\n//             setAvailability(() => availability.filter(appointment => appointment.id !== deleted))\n//         }\n//     }\n\n//     return (\n//             <Scheduler\n//                 data={availability}\n//                 firstDayOfWeek={1}\n//             >\n//                 <ViewState\n//                     defaultCurrentDate={currentDate}\n//                 />\n//                 <WeekView\n//                     startDayHour={6}\n//                     cellDuration={120}\n//                     endDayHour={24}\n//                 />\n//                 <EditingState onCommitChanges={commitChanges}/>\n//                 <IntegratedEditing />\n//                 <ConfirmationDialog />\n//                 <Appointments />\n//                 <AppointmentTooltip \n//                     showOpenButton\n//                     showCloseButton\n//                     showDeleteButton\n//                 />\n//                 <AppointmentForm />\n//                 <DragDropProvider />\n//             </Scheduler>\n//     )\n// }\n\n// export default Availability\n\n\n\nconst currentDate = '2018-06-27';\nconst editingOptionsList = [\n  { id: 'allowAdding', text: 'Adding' },\n  { id: 'allowDeleting', text: 'Deleting' },\n  { id: 'allowUpdating', text: 'Updating' },\n  { id: 'allowResizing', text: 'Resizing' },\n  { id: 'allowDragging', text: 'Dragging' },\n];\n\nconst EditingOptionsSelector = ({\n  options, onOptionsChange,\n}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <Typography className={classes.text}>\n        Enabled Options\n      </Typography>\n      <FormGroup row>\n        {editingOptionsList.map(({ id, text }) => (\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={options[id]}\n                onChange={onOptionsChange}\n                value={id}\n                color=\"primary\"\n              />\n            )}\n            classes={{ label: classes.formControlLabel }}\n            label={text}\n            key={id}\n            disabled={(id === 'allowDragging' || id === 'allowResizing') && !options.allowUpdating}\n          />\n        ))}\n      </FormGroup>\n    </div>\n  );\n};\n\nexport default () => {\n  const [data, setData] = React.useState(appointments);\n  const [editingOptions, setEditingOptions] = React.useState({\n    allowAdding: true,\n    allowDeleting: true,\n    allowUpdating: true,\n    allowDragging: true,\n    allowResizing: true,\n  });\n  const [addedAppointment, setAddedAppointment] = React.useState({});\n  const [isAppointmentBeingCreated, setIsAppointmentBeingCreated] = React.useState(false);\n\n  const {\n    allowAdding, allowDeleting, allowUpdating, allowResizing, allowDragging,\n  } = editingOptions;\n\n  const onCommitChanges = React.useCallback(({ added, changed, deleted }) => {\n    if (added) {\n      const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n      setData([...data, { id: startingAddedId, ...added }]);\n    }\n    if (changed) {\n      setData(data.map(appointment => (\n        changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment)));\n    }\n    if (deleted !== undefined) {\n      setData(data.filter(appointment => appointment.id !== deleted));\n    }\n    setIsAppointmentBeingCreated(false);\n  }, [setData, setIsAppointmentBeingCreated, data]);\n  const onAddedAppointmentChange = React.useCallback((appointment) => {\n    setAddedAppointment(appointment);\n    setIsAppointmentBeingCreated(true);\n  });\n  const handleEditingOptionsChange = React.useCallback(({ target }) => {\n    const { value } = target;\n    const { [value]: checked } = editingOptions;\n    setEditingOptions({\n      ...editingOptions,\n      [value]: !checked,\n    });\n  });\n\n  const TimeTableCell = React.useCallback(React.memo(({ onDoubleClick, ...restProps }) => (\n    <WeekView.TimeTableCell\n      {...restProps}\n      onDoubleClick={allowAdding ? onDoubleClick : undefined}\n    />\n  )), [allowAdding]);\n\n  const CommandButton = React.useCallback(({ id, ...restProps }) => {\n    if (id === 'deleteButton') {\n      return <AppointmentForm.CommandButton id={id} {...restProps} disabled={!allowDeleting} />;\n    }\n    return <AppointmentForm.CommandButton id={id} {...restProps} />;\n  }, [allowDeleting]);\n\n  const allowDrag = React.useCallback(\n    () => allowDragging && allowUpdating,\n    [allowDragging, allowUpdating],\n  );\n  const allowResize = React.useCallback(\n    () => allowResizing && allowUpdating,\n    [allowResizing, allowUpdating],\n  );\n\n  return (\n    <React.Fragment>\n      <EditingOptionsSelector\n        options={editingOptions}\n        onOptionsChange={handleEditingOptionsChange}\n      />\n      <Paper>\n        <Scheduler\n          data={data}\n          height={600}\n        >\n          <ViewState\n            currentDate={currentDate}\n          />\n          <EditingState\n            onCommitChanges={onCommitChanges}\n\n            addedAppointment={addedAppointment}\n            onAddedAppointmentChange={onAddedAppointmentChange}\n          />\n\n          <IntegratedEditing />\n          <WeekView\n            startDayHour={9}\n            endDayHour={19}\n            timeTableCellComponent={TimeTableCell}\n          />\n\n          <Appointments />\n\n          <AppointmentTooltip\n            showOpenButton\n            showDeleteButton={allowDeleting}\n          />\n          <AppointmentForm\n            commandButtonComponent={CommandButton}\n            readOnly={isAppointmentBeingCreated ? false : !allowUpdating}\n          />\n          <DragDropProvider\n            allowDrag={allowDrag}\n            allowResize={allowResize}\n          />\n        </Scheduler>\n      </Paper>\n    </React.Fragment>\n  );\n};"]},"metadata":{},"sourceType":"module"}