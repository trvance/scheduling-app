{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app/src/components/Calendar/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport './calendar.css';\nimport { useState } from 'react';\nimport { format } from 'date-fns';\nimport { subMonths, addMonths } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = () => {\n  _s();\n\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const renderHeader = () => {\n    const dateFormat = 'MMMM yyyy';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header row flex-middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          onClick: setCurrentMonth(subMonths(currentMonth, 1)),\n          children: \"chevron_left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: format(currentMonth, dateFormat)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-end\",\n        onClick: nextMonth,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"chevron_right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  };\n\n  const renderDays = () => {};\n\n  const renderCells = () => {};\n\n  const onDateClick = day => {};\n\n  const nextMonth = () => {\n    setCurrentMonth(addMonths(currentMonth, 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: [renderHeader(), renderDays(), renderCells()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendar, \"ld2IqSM6Xpfu7szfrf0VMoF6O/U=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app/src/components/Calendar/Calendar.js"],"names":["useState","format","subMonths","addMonths","Calendar","currentMonth","setCurrentMonth","Date","selectedDate","setSelectedDate","renderHeader","dateFormat","nextMonth","renderDays","renderCells","onDateClick","day"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAuC,UAAvC;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAIO,IAAJ,EAAD,CAAhD;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAIO,IAAJ,EAAD,CAAhD;;AAEA,QAAMG,YAAY,GAAG,MAAM;AACvB,UAAMC,UAAU,GAAG,WAAnB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AACI,UAAA,SAAS,EAAC,MADd;AAEI,UAAA,OAAO,EAAEL,eAAe,CAACJ,SAAS,CAACG,YAAD,EAAe,CAAf,CAAV,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAA,oBACGJ,MAAM,CAACI,YAAD,EAAeM,UAAf;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAcE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,OAAO,EAAEC,SAAtC;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBH,GAtBD;;AAuBA,QAAMC,UAAU,GAAC,MAAI,CAAE,CAAvB;;AACA,QAAMC,WAAW,GAAC,MAAI,CAAE,CAAxB;;AAEA,QAAMC,WAAW,GAAGC,GAAG,IAAI,CAAE,CAA7B;;AAEA,QAAMJ,SAAS,GAAG,MAAM;AACpBN,IAAAA,eAAe,CAACH,SAAS,CAACE,YAAD,EAAe,CAAf,CAAV,CAAf;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACKK,YAAY,EADjB,EAEKG,UAAU,EAFf,EAGKC,WAAW,EAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA9CD;;GAAMV,Q;;KAAAA,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import './calendar.css'\nimport { useState } from 'react'\nimport { format } from 'date-fns'\nimport { subMonths, addMonths,  } from 'date-fns'\n\n\n\nconst Calendar = () => {\n    const [currentMonth, setCurrentMonth] = useState(new Date())\n    const [selectedDate, setSelectedDate] = useState(new Date())\n    \n    const renderHeader = () => {\n        const dateFormat = 'MMMM yyyy'\n        return (\n          <div className='header row flex-middle'>\n            <div className='col col-start'>\n                <div \n                    className='icon' \n                    onClick={setCurrentMonth(subMonths(currentMonth, 1))}\n                >\n                chevron_left\n              </div>\n            </div>\n            <div className='col col-center'>\n              <span>\n                {format(currentMonth, dateFormat)}\n              </span>\n            </div>\n            <div className='col col-end' onClick={nextMonth}>\n              <div className='icon'>chevron_right</div>\n            </div>\n          </div>\n        )\n    }\n    const renderDays=()=>{}\n    const renderCells=()=>{}\n    \n    const onDateClick = day => {}\n    \n    const nextMonth = () => {\n        setCurrentMonth(addMonths(currentMonth, 1))\n    }\n\n    return (\n        <div>\n            <h2>Calendar</h2>\n            <div className='calendar'>\n                {renderHeader()}\n                {renderDays()}\n                {renderCells()}\n            </div>\n        </div>\n    )\n}\n\nexport default Calendar\n"]},"metadata":{},"sourceType":"module"}