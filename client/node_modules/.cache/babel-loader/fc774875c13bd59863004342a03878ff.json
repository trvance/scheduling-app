{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/EmployeesPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grow, Container, Grid, Typography, Fab, Slide } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmployeeCard from './employeeCard/EmployeeCard';\nimport NewEmployeeForm from './employeeForm/EmployeeForm';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeesView = () => {\n  _s();\n\n  const classes = useStyles();\n  const employees = useSelector(state => state.employees);\n  const [showEmployeeForm, setShowEmployeeForm] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n\n  const handleAddButton = () => {\n    setShowEmployeeForm(!showEmployeeForm);\n  };\n\n  const handleEditButton = () => {\n    employees.map(employee => handleEditMode());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.center,\n    children: [/*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        spacing: 1,\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(EmployeeCard, {\n            employee: employee,\n            edit: editMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, employee._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.buttonTray,\n      children: [/*#__PURE__*/_jsxDEV(Fab, {\n        className: classes.button,\n        color: \"primary\",\n        \"aria-label\": \"addButton\",\n        onClick: handleAddButton,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        className: classes.button,\n        color: \"primary\",\n        \"aria-label\": \"editButton\",\n        onClick: handleEditButton,\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"up\",\n      in: showEmployeeForm,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.employeeFormContainer,\n        children: /*#__PURE__*/_jsxDEV(NewEmployeeForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeesView, \"YX94QPAKO4/WWtaG1CLIEnMKL6Y=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = EmployeesView;\nexport default EmployeesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesView\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/EmployeesPage.js"],"names":["useState","useEffect","useSelector","useDispatch","Grow","Container","Grid","Typography","Fab","Slide","AddIcon","EditIcon","EmployeeCard","NewEmployeeForm","useStyles","EmployeesView","classes","employees","state","showEmployeeForm","setShowEmployeeForm","editMode","setEditMode","handleAddButton","handleEditButton","map","employee","handleEditMode","center","grid","_id","buttonTray","button","employeeFormContainer"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Grow, Container, Grid, Typography, Fab, Slide } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport EditIcon from '@material-ui/icons/Edit'\nimport EmployeeCard from './employeeCard/EmployeeCard'\nimport NewEmployeeForm from './employeeForm/EmployeeForm'\nimport useStyles from './styles'\n\nconst EmployeesView = () => {\n    const classes = useStyles()\n    const employees = useSelector((state) => state.employees)\n    const [showEmployeeForm, setShowEmployeeForm] = useState(false)\n    const [editMode, setEditMode] = useState(false)\n\n    const handleAddButton = () => {\n        setShowEmployeeForm(!showEmployeeForm)\n    }\n\n    const handleEditButton = () => {\n        employees.map((employee) => (\n            handleEditMode()\n        ))\n    }\n\n    return (\n        <Grid className={classes.center}>\n            \n            \n            {/* <NewEmployeeForm /> */}\n\n            <Grow in>\n                <Grid container className={classes.grid} spacing={1}>\n                    {employees.map((employee) => (\n                        <Grid key={employee._id} item>\n                            <EmployeeCard employee={employee} edit={editMode}/>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grow>\n            <Grid className={classes.buttonTray}>\n                <Fab className={classes.button} color=\"primary\" aria-label=\"addButton\" onClick={handleAddButton}>\n                    <AddIcon />\n                </Fab>\n                <Fab className={classes.button} color=\"primary\" aria-label=\"editButton\" onClick={handleEditButton}>\n                    <EditIcon />\n                </Fab>\n            </Grid>\n            <Slide direction=\"up\" in={showEmployeeForm} mountOnEnter unmountOnExit>\n                <Grid container className={classes.employeeFormContainer}>\n                    <NewEmployeeForm />\n                </Grid>\n            </Slide>\n        </Grid>\n    )\n}\n\nexport default EmployeesView\n"]},"metadata":{},"sourceType":"module"}