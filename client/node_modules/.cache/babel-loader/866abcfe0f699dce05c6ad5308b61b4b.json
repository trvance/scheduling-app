{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/styledComponents/NewEmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport StyledTextField from './StyledTextField.js';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport StyledButton from './StyledButton.js';\nimport { useState, forwardRef, useEffect, useRef } from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addEmployee } from '../../actions/employees';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      margin: 0,\n      padding: 0\n    },\n    backgroundColor: 'rgba(25,25,25,.8)'\n  }\n}));\n\nconst NewEmployeeForm = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [scroll, setScroll] = useState('paper');\n  const classes = useStyles();\n  const [employee, setEmployee] = useState({\n    firstName: '',\n    middleInitial: '',\n    lastName: '',\n    phoneNumber: '',\n    email: '',\n    position: ''\n  });\n  const newEmployee = useSelector(state => currentId ? state.employees.find(e => e._id === currentId) : null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (newEmployee) setEmployee(newEmployee);\n  }, [newEmployee]);\n\n  const handleClickOpen = scrollType => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = e => {\n    e.prevenDefault();\n    dispatch(addEmployee(employee));\n    setOpen(false); //addEmployee({employee})\n  };\n\n  const descriptionElementRef = useRef(null);\n  useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        bottom: '2vh'\n      },\n      onClick: handleClickOpen('paper'),\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        color: \"primary\",\n        children: \"add-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      className: classes.root,\n      open: open,\n      onClose: handleClose,\n      scroll: scroll,\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      \"aria-describedby\": \"scroll-dialog-description\",\n      style: {\n        width: '100%',\n        borderRadius: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        style: {\n          backgroundImage: 'linear-gradient(0deg, #353535 30%, #424242 70%)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: scroll === 'paper',\n        style: {\n          backgroundColor: '#333333',\n          boxShadow: '0 0 10px #202020',\n          paddingTop: '2.5rem',\n          margin: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"scroll-dialog-description\",\n          ref: descriptionElementRef,\n          tabIndex: -1,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              noValidate: true,\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(StyledTextField, {\n                label: \"First Name\",\n                required: true,\n                fullWidth: true,\n                variant: \"filled\",\n                color: \"secondary\",\n                value: employee.firstName,\n                onChange: e => setEmployee({ ...employee,\n                  firstName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTextField, {\n                label: \"M.I.\",\n                inputProps: {\n                  maxLength: '1'\n                },\n                fullWidth: true,\n                variant: \"filled\",\n                color: \"secondary\",\n                value: employee.middleInitial,\n                onChange: e => setEmployee({ ...employee,\n                  middleInitial: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTextField, {\n                label: \"Last Name\",\n                required: true,\n                fullWidth: true,\n                variant: \"filled\",\n                color: \"secondary\",\n                value: employee.lastName,\n                onChange: e => setEmployee({ ...employee,\n                  lastName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTextField, {\n                label: \"Phone Number\",\n                required: true,\n                fullWidth: true,\n                variant: \"filled\",\n                color: \"secondary\",\n                value: employee.phoneNumber,\n                onChange: e => setEmployee({ ...employee,\n                  phoneNumber: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTextField, {\n                label: \"Email\",\n                required: true,\n                fullWidth: true,\n                variant: \"filled\",\n                color: \"secondary\",\n                value: employee.email,\n                onChange: e => setEmployee({ ...employee,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTextField, {\n                label: \"Date Started\",\n                required: true,\n                fullWidth: true,\n                variant: \"filled\",\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTextField, {\n                label: \"Starting Position\",\n                required: true,\n                fullWidth: true,\n                variant: \"filled\",\n                color: \"secondary\",\n                value: employee.position,\n                onChange: e => setEmployee({ ...employee,\n                  position: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        style: {\n          backgroundColor: '#424242',\n          padding: '1rem 2rem 1rem 2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: handleClose,\n          color: \"primary\",\n          style: {\n            color: '#bbb'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          style: {\n            height: '3rem',\n            width: '12rem'\n          },\n          variant: \"contained\",\n          onClick: handleSubmit,\n          color: \"secondary\",\n          children: \"Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n\n_s(NewEmployeeForm, \"rHOuqG75Rt7z/j7WKm9YU+Pe/9E=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = NewEmployeeForm;\nexport default NewEmployeeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEmployeeForm\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/styledComponents/NewEmployeeForm.js"],"names":["StyledTextField","Card","Box","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Icon","IconButton","StyledButton","useState","forwardRef","useEffect","useRef","useTheme","makeStyles","useSelector","useDispatch","addEmployee","useStyles","theme","root","breakpoints","down","width","margin","padding","backgroundColor","NewEmployeeForm","currentId","setCurrentId","open","setOpen","scroll","setScroll","classes","employee","setEmployee","firstName","middleInitial","lastName","phoneNumber","email","position","newEmployee","state","employees","find","e","_id","dispatch","handleClickOpen","scrollType","handleClose","handleSubmit","prevenDefault","descriptionElementRef","current","descriptionElement","focus","bottom","borderRadius","backgroundImage","boxShadow","paddingTop","target","value","maxLength","color","height"],"mappings":"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","sourcesContent":["import StyledTextField from './StyledTextField.js'\nimport Card from '@material-ui/core/Card'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Slide from '@material-ui/core/Slide'\nimport Icon from '@material-ui/core/Icon'\nimport IconButton from '@material-ui/core/IconButton'\nimport StyledButton from './StyledButton.js'\nimport { useState, forwardRef, useEffect, useRef} from 'react'\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addEmployee } from '../../actions/employees'\n\nconst useStyles = makeStyles((theme)=> ({\n    root: {\n        [theme.breakpoints.down('sm')]: {\n            width:'100%',\n            margin: 0,\n            padding: 0,\n        },\n        backgroundColor: 'rgba(25,25,25,.8)',\n    }\n}))\n\nconst NewEmployeeForm = ({currentId, setCurrentId, }) => {\n    const [open, setOpen] = useState(false)\n    const [scroll, setScroll] = useState('paper')\n    const classes = useStyles()\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        middleInitial: '',\n        lastName: '',\n        phoneNumber: '',\n        email: '',\n        position: '',\n    })\n    const newEmployee = useSelector((state) => currentId ? state.employees.find((e) => e._id === currentId) : null)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(newEmployee) setEmployee(newEmployee)\n    }, [newEmployee])\n  \n    const handleClickOpen = (scrollType) => () => {\n        setOpen(true)\n        setScroll(scrollType)\n    }\n  \n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleSubmit = (e) => {\n        e.prevenDefault()\n        \n        dispatch(addEmployee(employee))\n        setOpen(false)\n        //addEmployee({employee})\n    }\n\n  \n    const descriptionElementRef = useRef(null)\n    useEffect(() => {\n      if (open) {\n        const { current: descriptionElement } = descriptionElementRef\n        if (descriptionElement !== null) {\n          descriptionElement.focus()\n        }\n      }\n    }, [open])\n  \n    return (\n      <div>\n        <IconButton style={{bottom: '2vh'}} onClick={handleClickOpen('paper')}>\n            <Icon color='primary'>add-icon</Icon>\n        </IconButton>\n        <Dialog\n            className={classes.root}\n            open={open}\n            onClose={handleClose}\n            scroll={scroll}\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            style={{width: '100%', borderRadius: '20px',}}\n        >\n        <DialogTitle \n            id=\"scroll-dialog-title\"\n            style={{\n                backgroundImage:'linear-gradient(0deg, #353535 30%, #424242 70%)',\n            }}\n        >\n            <h3 className='card-title'>New Employee</h3>\n        </DialogTitle>\n            <DialogContent \n                dividers={scroll === 'paper'}\n                style={{\n                    backgroundColor:'#333333',\n                    boxShadow: '0 0 10px #202020',\n                    paddingTop: '2.5rem',\n                    margin: 0\n                }}\n            >\n            <DialogContentText\n              id=\"scroll-dialog-description\"\n              ref={descriptionElementRef}\n              tabIndex={-1}\n            >\n                <Box >\n                    <form noValidate autoComplete='off' >\n                        \n                            <StyledTextField \n                                label='First Name' \n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.firstName}\n                                onChange={(e) => setEmployee({...employee, firstName: e.target.value})}\n                            />\n                        \n                            <StyledTextField \n                                label='M.I.' \n                                inputProps={{ maxLength: '1'}}\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.middleInitial}\n                                onChange={(e) => setEmployee({...employee, middleInitial: e.target.value})}\n                            />\n                            <StyledTextField \n                                label='Last Name' \n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.lastName}\n                                onChange={(e) => setEmployee({...employee, lastName: e.target.value})}\n                            />\n                            <StyledTextField \n                                label='Phone Number' \n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.phoneNumber}\n                                onChange={(e) => setEmployee({...employee, phoneNumber: e.target.value})}\n                            />\n                            <StyledTextField \n                                label='Email' \n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.email}\n                                onChange={(e) => setEmployee({...employee, email: e.target.value})}\n                            />\n                            <StyledTextField \n                                label='Date Started'\n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                            />\n                            <StyledTextField \n                                label='Starting Position'\n                                required\n                                fullWidth\n                                variant='filled'\n                                color='secondary'\n                                value={employee.position}\n                                onChange={(e) => setEmployee({...employee, position: e.target.value})}\n                            />\n                    </form>\n                </Box>\n            </DialogContentText>\n            </DialogContent>\n            <DialogActions style={{backgroundColor:'#424242', padding:'1rem 2rem 1rem 2rem'}}>\n            <Button variant='text' onClick={handleClose} color='primary' style={{color:'#bbb'}}>\n              Cancel\n            </Button>\n            <StyledButton style={{height:'3rem', width:'12rem'}} variant='contained' onClick={handleSubmit} color='secondary'>\n              Add Employee\n            </StyledButton>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}\n\nexport default NewEmployeeForm"]},"metadata":{},"sourceType":"module"}