{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/generateScheduleButton/GenerateScheduleButton.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Typography, Grid } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editEmployee } from '../../actions/employees';\nimport weekShifts from '../../testData/weekShifts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenerateScheduleButton = () => {\n  _s();\n\n  let shifts = weekShifts;\n  const dispatch = useDispatch();\n  const employees = useSelector(state => state.employees);\n  const [employee, setEmployee] = useState(null);\n  const [currentId, setCurrentId] = useState(null);\n  useEffect(() => {\n    console.log(employee); // console.log(currentId)\n\n    setEmployee({ ...employee,\n      weekSchedule: [shift]\n    });\n    console.log(employee);\n  });\n\n  const randomizeShifts = array => {\n    const shuffledArray = [];\n    let shift = null;\n\n    for (let i = array.length - 1; i >= 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n      shift = array[i];\n\n      for (let x = shift.length - 1; x >= 0; x--) {\n        const y = Math.floor(Math.random() * (x + 1));\n        [array[i][x], array[i][y]] = [array[i][y], array[i][x]];\n        shift = array[i][x];\n        shuffledArray.push(shift);\n      }\n    }\n\n    return shuffledArray;\n  };\n\n  const createSchedule = shift => {\n    const startTime = shift.startDate.split(' ')[4];\n    const endTime = shift.endDate.split(' ')[4];\n    console.log(shift);\n    console.log(startTime);\n    console.log(endTime);\n    setEmployee(employees[0]);\n    setCurrentId(employees[0]._id); // setEmployee({...employee, weekSchedule:[\n    //     shift\n    // ]})\n  };\n\n  const convertTimeToNumber = time => {\n    const startHour = time.split(':')[0];\n    const startMin = time.split(':')[1];\n    console.log(startHour + \" \" + startMin);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const randomShiftsArray = randomizeShifts(shifts);\n    createSchedule(randomShiftsArray[0]); //dispatch(editEmployee(currentId, employee))\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      color: \"secondary\",\n      style: {\n        width: 300,\n        height: 50,\n        margin: 50\n      },\n      variant: \"contained\",\n      onClick: handleSubmit,\n      children: \"Generate Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GenerateScheduleButton, \"bnGcOS0Spf/XQA35lSx/XXyu/o0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GenerateScheduleButton;\nexport default GenerateScheduleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateScheduleButton\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/generateScheduleButton/GenerateScheduleButton.js"],"names":["Button","Typography","Grid","useState","useEffect","useDispatch","useSelector","editEmployee","weekShifts","GenerateScheduleButton","shifts","dispatch","employees","state","employee","setEmployee","currentId","setCurrentId","console","log","weekSchedule","shift","randomizeShifts","array","shuffledArray","i","length","j","Math","floor","random","x","y","push","createSchedule","startTime","startDate","split","endTime","endDate","_id","convertTimeToNumber","time","startHour","startMin","handleSubmit","e","preventDefault","randomShiftsArray","width","height","margin"],"mappings":"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","sourcesContent":["import { Button, Typography, Grid } from \"@material-ui/core\"\nimport { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { editEmployee } from '../../actions/employees'\nimport weekShifts from '../../testData/weekShifts'\n\n\nconst GenerateScheduleButton = () => {\n    let shifts = weekShifts\n    const dispatch = useDispatch()\n    const employees = useSelector((state) => state.employees)\n    const [employee, setEmployee] = useState(null)\n    const [currentId, setCurrentId] = useState(null)\n\n    useEffect(() => {\n        console.log(employee)\n        // console.log(currentId)\n        setEmployee({...employee, weekSchedule:[\n            shift\n        ]})\n        console.log(employee)\n    })\n    \n\n    const randomizeShifts = (array) => {\n        const shuffledArray = []\n\n        let shift = null\n\n        for (let i = array.length - 1; i >= 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n            shift = array[i]\n\n            for (let x = shift.length - 1; x >= 0; x--) {\n                const y = Math.floor(Math.random() * (x + 1));\n                [array[i][x], array[i][y]] = [array[i][y], array[i][x]];\n                shift = array[i][x]\n                shuffledArray.push(shift)\n            }\n        }\n        return shuffledArray\n    }\n\n\n    const createSchedule = (shift) => {\n        const startTime = shift.startDate.split(' ').[4]\n        const endTime = shift.endDate.split(' ').[4]\n        console.log(shift)\n        console.log(startTime)\n        console.log(endTime)\n        \n\n        setEmployee(employees[0])\n        setCurrentId(employees[0]._id)\n        // setEmployee({...employee, weekSchedule:[\n        //     shift\n        // ]})\n    }\n\n\n    const convertTimeToNumber = (time) => {\n        const startHour = time.split(':').[0]\n        const startMin = time.split(':').[1]\n        console.log(startHour + \" \" + startMin)\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const randomShiftsArray = randomizeShifts(shifts)\n        createSchedule(randomShiftsArray[0])\n        //dispatch(editEmployee(currentId, employee))\n    }\n\n    \n    return (\n        <Grid container direction='column' justify='center' alignItems='center'>\n            <Button color='secondary' style={{width: 300, height: 50, margin:50}} variant='contained' onClick={handleSubmit}>\n                Generate Schedule\n            </Button>\n        </Grid>\n    )\n}\n\nexport default GenerateScheduleButton\n"]},"metadata":{},"sourceType":"module"}