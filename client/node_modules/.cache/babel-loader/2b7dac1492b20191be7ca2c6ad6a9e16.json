{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/EmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Typography, TextField, Button, MenuItem, Paper, Grid, List, ListItem } from \"@material-ui/core\";\nimport { useState } from 'react';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { addEmployee } from '../../../actions/employees';\nimport { formatPhoneNumber } from '../../../formatAndValidations/formatPhoneNumber';\nimport { isEmailValid } from '../../../formatAndValidations/validateEmail';\nimport { HOTLINE, COLDLINE, MAINTENANCE, FLOATER, BACKUPCASH, CASHIER, MEATPREP, VEGGIE } from '../../../constants/positions';\nimport AvailabilityComponent from './availabilityComponent/AvailabilityComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positions = [MAINTENANCE, HOTLINE, COLDLINE, FLOATER, BACKUPCASH, CASHIER, MEATPREP, VEGGIE];\nconst hours = ['0-5', '5-10', '10-15', '15-20', '20-25', '25-30', '30-35', '35-40', '40-45', '45+'];\n\nconst EmployeeForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [firstNameError, setFirstNameError] = useState(null);\n  const [firstNameHelperText, setFirstNameHelperText] = useState('');\n  const [lastNameError, setLastNameError] = useState(null);\n  const [lastNameHelperText, setLastNameHelperText] = useState('');\n  const [emailError, setEmailError] = useState(null);\n  const [emailHelperText, setEmailHelperText] = useState('');\n  const [phoneNumberError, setPhoneNumberError] = useState(null);\n  const [phoneNumberHelperText, setPhoneNumberHelperText] = useState('');\n  const [desiredHours, setDesiredHours] = useState(null);\n  const [employee, setEmployee] = useState({\n    firstName: '',\n    middleInitial: '',\n    lastName: '',\n    phoneNumber: '',\n    email: '',\n    positions: [MAINTENANCE],\n    desiredHours: '25-30',\n    // availability: [\n    //     { \n    //         id: 1,\n    //         startDate: '2021-03-15T07:30',\n    //         endDate: '2021-03-15T22:30',\n    //         rRule: 'FREQ=WEEKLY;WKST=SU'\n    //     },\n    //     { \n    //         id: 2,\n    //         startDate: '2021-03-16T07:30',\n    //         endDate: '2021-03-16T22:30',\n    //         rRule: 'FREQ=WEEKLY;WKST=SU'\n    //     },\n    //     { \n    //         id: 3,\n    //         startDate: '2021-03-17T07:30',\n    //         endDate: '2021-03-17T22:30',\n    //         rRule: 'FREQ=WEEKLY;WKST=SU'\n    //     },\n    //     { \n    //         id: 4,\n    //         startDate: '2021-03-18T07:30',\n    //         endDate: '2021-03-18T22:30',\n    //         rRule: 'FREQ=WEEKLY;WKST=SU'\n    //     },\n    //     { \n    //         id: 5,\n    //         startDate: '2021-03-19T07:30',\n    //         endDate: '2021-03-19T22:30',\n    //         rRule: 'FREQ=WEEKLY;WKST=SU'\n    //     },\n    //     { \n    //         id: 6,\n    //         startDate: '2021-03-20T07:30',\n    //         endDate: '2021-03-20T22:30',\n    //         rRule: 'FREQ=WEEKLY;WKST=SU'\n    //     },\n    //     { \n    //         id: 0,\n    //         startDate: '2021-03-21T07:30',\n    //         endDate: '2021-03-21T22:30',\n    //         rRule: 'FREQ=WEEKLY;WKST=SU'\n    //     },\n    // ],\n    availability: [{\n      day: 'Monday',\n      morning: false,\n      evening: false\n    }, {\n      day: 'Tuesday',\n      morning: false,\n      evening: false\n    }, {\n      day: 'Wednesday',\n      morning: false,\n      evening: false\n    }, {\n      day: 'Thursday',\n      morning: false,\n      evening: false\n    }, {\n      day: 'Friday',\n      morning: false,\n      evening: false\n    }, {\n      day: 'Saturday',\n      morning: false,\n      evening: false\n    }, {\n      day: 'Sunday',\n      morning: false,\n      evening: false\n    }]\n  });\n\n  const handleFocus = e => {\n    const fieldName = e.target.name;\n\n    switch (fieldName) {\n      case 'firstName':\n        {\n          setFirstNameError(null);\n          setFirstNameHelperText('');\n          break;\n        }\n\n      case 'lastName':\n        {\n          setLastNameError(null);\n          setLastNameHelperText('');\n          break;\n        }\n\n      case 'email':\n        {\n          setEmailError(null);\n          setEmailHelperText('');\n          break;\n        }\n\n      case 'phoneNumber':\n        {\n          setPhoneNumberError(null);\n          setPhoneNumberHelperText('');\n          break;\n        }\n    }\n  };\n\n  const handleFirstName = () => {\n    if (employee.firstName == '') {\n      setFirstNameError(true);\n      setFirstNameHelperText('Gotta have a first name!');\n    } else {\n      setFirstNameError(false);\n      setFirstNameHelperText('');\n    }\n  };\n\n  const handleLastName = () => {\n    if (employee.lastName == '') {\n      setLastNameError(true);\n      setLastNameHelperText('Gotta have a last name!');\n    } else {\n      setLastNameError(false);\n      setLastNameHelperText('');\n    }\n  };\n\n  const handlePhoneNumber = () => {\n    if (employee.phoneNumber.length < 14) {\n      setPhoneNumberError(true);\n      setPhoneNumberHelperText('Phone number is too short!');\n    } else {\n      setPhoneNumberError(false);\n      setPhoneNumberHelperText('');\n    }\n  };\n\n  const handleEmail = () => {\n    if (!isEmailValid(employee.email)) {\n      setEmailError(true);\n      setEmailHelperText(\"That isn't a valid email!\");\n    } else {\n      setEmailError(false);\n      setEmailHelperText('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(employee);\n    handleFirstName();\n    handleLastName();\n    handlePhoneNumber();\n    handleEmail();\n\n    if (firstNameError == false && lastNameError == false && phoneNumberError == false && emailError == false) {\n      dispatch(addEmployee(employee));\n      clear();\n    }\n  };\n\n  const clear = () => {\n    setEmployee({\n      firstName: '',\n      middleInitial: '',\n      lastName: '',\n      phoneNumber: '',\n      email: '',\n      positions: [MAINTENANCE],\n      desiredHours: '25-30',\n      availability: [{\n        day: 'Monday',\n        morning: false,\n        evening: false\n      }, {\n        day: 'Tuesday',\n        morning: false,\n        evening: false\n      }, {\n        day: 'Wednesday',\n        morning: false,\n        evening: false\n      }, {\n        day: 'Thursday',\n        morning: false,\n        evening: false\n      }, {\n        day: 'Friday',\n        morning: false,\n        evening: false\n      }, {\n        day: 'Saturday',\n        morning: false,\n        evening: false\n      }, {\n        day: 'Sunday',\n        morning: false,\n        evening: false\n      }]\n    });\n    setFirstNameError(null);\n    setFirstNameHelperText('');\n    setLastNameError(null);\n    setLastNameHelperText('');\n    setEmailError(null);\n    setEmailHelperText('');\n    setPhoneNumberError(null);\n    setPhoneNumberHelperText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h5\",\n      children: \"Add New Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `${classes.root} ${classes.form}`,\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifty: \"center\",\n          item: true,\n          md: 6,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"firstName\",\n            required: true,\n            error: firstNameError,\n            variant: \"outlined\",\n            label: \"First Name\",\n            value: employee.firstName,\n            helperText: firstNameHelperText,\n            onChange: e => setEmployee({ ...employee,\n              firstName: e.target.value.trim()\n            }),\n            onFocus: e => handleFocus(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"middleInitial\",\n            variant: \"outlined\",\n            label: \"Middle Initial\",\n            value: employee.middleInitial,\n            onChange: e => setEmployee({ ...employee,\n              middleInitial: e.target.value.toUpperCase()\n            }),\n            inputProps: {\n              maxLength: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"lastName\",\n            required: true,\n            error: lastNameError,\n            variant: \"outlined\",\n            label: \"Last Name\",\n            value: employee.lastName,\n            helperText: lastNameHelperText,\n            onChange: e => setEmployee({ ...employee,\n              lastName: e.target.value.trim()\n            }),\n            onFocus: e => handleFocus(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"phoneNumber\",\n            required: true,\n            error: phoneNumberError,\n            variant: \"outlined\",\n            label: \"Phone Number\",\n            value: employee.phoneNumber,\n            helperText: phoneNumberHelperText,\n            onChange: e => setEmployee({ ...employee,\n              phoneNumber: formatPhoneNumber(e.target.value)\n            }),\n            onFocus: e => handleFocus(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"email\",\n            required: true,\n            error: emailError,\n            variant: \"outlined\",\n            label: \"Email\",\n            value: employee.email,\n            helperText: emailHelperText,\n            onChange: e => setEmployee({ ...employee,\n              email: e.target.value\n            }),\n            onFocus: e => handleFocus(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            name: \"hours\",\n            required: true,\n            variant: \"outlined\",\n            label: \"Desired Hours\",\n            value: employee.desiredHours,\n            children: hours.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"column\",\n          justifty: \"center\",\n          md: 6,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            select: true,\n            name: \"position\",\n            required: true,\n            label: \"Position\",\n            value: employee.positions,\n            children: positions.map(option => /*#__PURE__*/_jsxDEV(ListItem, {\n              value: option,\n              button: true,\n              onClick: handlePosition,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(AvailabilityComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.submitButton,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.clearButton,\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: clear,\n          fullWidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeForm, \"CY+5KmLNiI97n836RvIYBM2VbVY=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = EmployeeForm;\nexport default EmployeeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeForm/EmployeeForm.js"],"names":["Card","Typography","TextField","Button","MenuItem","Paper","Grid","List","ListItem","useState","useStyles","useDispatch","addEmployee","formatPhoneNumber","isEmailValid","HOTLINE","COLDLINE","MAINTENANCE","FLOATER","BACKUPCASH","CASHIER","MEATPREP","VEGGIE","AvailabilityComponent","positions","hours","EmployeeForm","classes","dispatch","firstNameError","setFirstNameError","firstNameHelperText","setFirstNameHelperText","lastNameError","setLastNameError","lastNameHelperText","setLastNameHelperText","emailError","setEmailError","emailHelperText","setEmailHelperText","phoneNumberError","setPhoneNumberError","phoneNumberHelperText","setPhoneNumberHelperText","desiredHours","setDesiredHours","employee","setEmployee","firstName","middleInitial","lastName","phoneNumber","email","availability","day","morning","evening","handleFocus","e","fieldName","target","name","handleFirstName","handleLastName","handlePhoneNumber","length","handleEmail","handleSubmit","preventDefault","console","log","clear","card","title","root","form","value","trim","toUpperCase","maxLength","map","option","handlePosition","submitButton","clearButton"],"mappings":"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","sourcesContent":["import { Card, Typography, TextField, Button, MenuItem, Paper, Grid, List, ListItem } from \"@material-ui/core\"\nimport { useState } from 'react'\nimport useStyles from './styles'\nimport { useDispatch } from 'react-redux'\nimport { addEmployee } from '../../../actions/employees'\nimport {formatPhoneNumber} from '../../../formatAndValidations/formatPhoneNumber'\nimport {isEmailValid} from '../../../formatAndValidations/validateEmail'\nimport { HOTLINE, COLDLINE, MAINTENANCE, FLOATER, BACKUPCASH, CASHIER, MEATPREP, VEGGIE } from '../../../constants/positions'\nimport AvailabilityComponent from './availabilityComponent/AvailabilityComponent'\n\n\nconst positions = [ MAINTENANCE, HOTLINE, COLDLINE, FLOATER, BACKUPCASH, CASHIER, MEATPREP, VEGGIE]\nconst hours = [ '0-5', '5-10', '10-15', '15-20', '20-25', '25-30', '30-35', '35-40', '40-45', '45+']\n\nconst EmployeeForm = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [firstNameError, setFirstNameError] = useState(null)\n    const [firstNameHelperText, setFirstNameHelperText] = useState('')\n    const [lastNameError, setLastNameError] = useState(null)\n    const [lastNameHelperText, setLastNameHelperText] = useState('')\n    const [emailError, setEmailError] = useState(null)\n    const [emailHelperText, setEmailHelperText] = useState('')\n    const [phoneNumberError, setPhoneNumberError] = useState(null)\n    const [phoneNumberHelperText, setPhoneNumberHelperText] = useState('')\n    const [desiredHours, setDesiredHours] = useState(null)\n\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        middleInitial: '',\n        lastName: '',\n        phoneNumber: '',\n        email: '',\n        positions: [MAINTENANCE],\n        desiredHours: '25-30',\n        // availability: [\n        //     { \n        //         id: 1,\n        //         startDate: '2021-03-15T07:30',\n        //         endDate: '2021-03-15T22:30',\n        //         rRule: 'FREQ=WEEKLY;WKST=SU'\n        //     },\n        //     { \n        //         id: 2,\n        //         startDate: '2021-03-16T07:30',\n        //         endDate: '2021-03-16T22:30',\n        //         rRule: 'FREQ=WEEKLY;WKST=SU'\n        //     },\n        //     { \n        //         id: 3,\n        //         startDate: '2021-03-17T07:30',\n        //         endDate: '2021-03-17T22:30',\n        //         rRule: 'FREQ=WEEKLY;WKST=SU'\n        //     },\n        //     { \n        //         id: 4,\n        //         startDate: '2021-03-18T07:30',\n        //         endDate: '2021-03-18T22:30',\n        //         rRule: 'FREQ=WEEKLY;WKST=SU'\n        //     },\n        //     { \n        //         id: 5,\n        //         startDate: '2021-03-19T07:30',\n        //         endDate: '2021-03-19T22:30',\n        //         rRule: 'FREQ=WEEKLY;WKST=SU'\n        //     },\n        //     { \n        //         id: 6,\n        //         startDate: '2021-03-20T07:30',\n        //         endDate: '2021-03-20T22:30',\n        //         rRule: 'FREQ=WEEKLY;WKST=SU'\n        //     },\n        //     { \n        //         id: 0,\n        //         startDate: '2021-03-21T07:30',\n        //         endDate: '2021-03-21T22:30',\n        //         rRule: 'FREQ=WEEKLY;WKST=SU'\n        //     },\n        // ],\n        availability: [\n            {\n            day: 'Monday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Tuesday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Wednesday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Thursday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Friday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Saturday',\n            morning: false,\n            evening: false,\n            },\n            {\n            day: 'Sunday',\n            morning: false,\n            evening: false,\n            },\n        ]\n    }) \n\n    const handleFocus = (e) => {\n        const fieldName = e.target.name\n        switch (fieldName){\n            case 'firstName':{\n                setFirstNameError(null)\n                setFirstNameHelperText('')\n                break\n            }\n            case 'lastName': {\n                setLastNameError(null)\n                setLastNameHelperText('')\n                break\n            }\n            case 'email': {\n                setEmailError(null)\n                setEmailHelperText('')\n                break\n            }\n            case 'phoneNumber': {\n                setPhoneNumberError(null)\n                setPhoneNumberHelperText('')\n                break\n            }\n        }\n    }\n    \n    const handleFirstName = () => {\n        if (employee.firstName == '') {\n            setFirstNameError(true)\n            setFirstNameHelperText('Gotta have a first name!')\n        }\n        else {\n            setFirstNameError(false)\n            setFirstNameHelperText('')\n        }\n    }\n\n    const handleLastName = () => {\n        if (employee.lastName == '') {\n            setLastNameError(true)\n            setLastNameHelperText('Gotta have a last name!')\n        }\n        else {\n            setLastNameError(false)\n            setLastNameHelperText('')\n        }\n    }\n\n    const handlePhoneNumber = () => {\n        if (employee.phoneNumber.length < 14) {\n            setPhoneNumberError(true)\n            setPhoneNumberHelperText('Phone number is too short!')\n        }\n        else {\n            setPhoneNumberError(false)\n            setPhoneNumberHelperText('')\n        }\n    }\n\n    const handleEmail = () => {\n        if (!isEmailValid(employee.email)) {\n            setEmailError(true)\n            setEmailHelperText(\"That isn't a valid email!\")\n        }\n        else {\n            setEmailError(false)\n            setEmailHelperText('')\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(employee)\n\n        handleFirstName()\n        handleLastName()\n        handlePhoneNumber()\n        handleEmail()\n\n        if(firstNameError==false && lastNameError==false && phoneNumberError==false && emailError==false){\n            dispatch(addEmployee(employee))\n            clear()\n        }\n\n    }\n\n    const clear = () => {\n        setEmployee({\n            firstName: '',\n            middleInitial: '',\n            lastName: '',\n            phoneNumber: '',\n            email: '',\n            positions: [MAINTENANCE],\n            desiredHours: '25-30',\n            availability: [\n                {\n                day: 'Monday',\n                morning: false,\n                evening: false,\n                },\n                {\n                day: 'Tuesday',\n                morning: false,\n                evening: false,\n                },\n                {\n                day: 'Wednesday',\n                morning: false,\n                evening: false,\n                },\n                {\n                day: 'Thursday',\n                morning: false,\n                evening: false,\n                },\n                {\n                day: 'Friday',\n                morning: false,\n                evening: false,\n                },\n                {\n                day: 'Saturday',\n                morning: false,\n                evening: false,\n                },\n                {\n                day: 'Sunday',\n                morning: false,\n                evening: false,\n                },\n    \n            ]\n        })\n        setFirstNameError(null)\n        setFirstNameHelperText('')\n        setLastNameError(null)\n        setLastNameHelperText('')\n        setEmailError(null)\n        setEmailHelperText('')\n        setPhoneNumberError(null)\n        setPhoneNumberHelperText('')\n    }\n\n    return (\n        <Card className={classes.card} >\n            <Typography className={classes.title} variant=\"h5\">Add New Employee</Typography>\n            <Grid container direction=\"row\" justify=\"center\" xs={12}>\n                <form className={`${classes.root} ${classes.form}`} autoComplete=\"off\" noValidate onSubmit={handleSubmit} >\n\n                <Grid container direction=\"column\" justifty=\"center\" item md={6} xs={12}>\n                    <TextField name=\"firstName\" required error={firstNameError} variant=\"outlined\" label=\"First Name\" value={employee.firstName} helperText={firstNameHelperText} onChange={ (e) => setEmployee({ ...employee, firstName: e.target.value.trim() })}  onFocus={ (e) => handleFocus(e) } />\n                    <TextField name=\"middleInitial\" variant=\"outlined\" label=\"Middle Initial\" value={employee.middleInitial} onChange={ (e) => setEmployee({ ...employee, middleInitial: e.target.value.toUpperCase() })} inputProps={{ maxLength:1 }}/>\n                    <TextField name=\"lastName\" required error={lastNameError} variant=\"outlined\" label=\"Last Name\" value={employee.lastName} helperText={lastNameHelperText} onChange={ (e) => setEmployee({ ...employee, lastName: e.target.value.trim() })}  onFocus={ (e) => handleFocus(e) }/>\n                    <TextField name=\"phoneNumber\" required error={phoneNumberError} variant=\"outlined\" label=\"Phone Number\" value={employee.phoneNumber} helperText={phoneNumberHelperText} onChange={ (e) => setEmployee({...employee, phoneNumber: formatPhoneNumber(e.target.value) })}  onFocus={ (e) => handleFocus(e)} />\n                    <TextField name=\"email\" required error={emailError} variant=\"outlined\" label=\"Email\" value={employee.email} helperText={emailHelperText} onChange={ (e) => setEmployee({...employee, email: e.target.value})} onFocus={ (e) => handleFocus(e) } />\n                    <TextField select name=\"hours\" required variant=\"outlined\" label=\"Desired Hours\" value={employee.desiredHours}>\n                        {hours.map((option) => (\n                            <MenuItem key={option} value={option}>\n                                {option}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </Grid>\n\n                <Grid container item direction=\"column\" justifty=\"center\" md={6} xs={12} >\n                    <List select name=\"position\" required label=\"Position\" value={employee.positions} >\n                        {positions.map((option) => (\n                            <ListItem key={option} value={option} button onClick={handlePosition}>\n                                {option}\n                            </ListItem>\n                        ))}\n                    </List>\n\n                    <Grid item >\n                        <AvailabilityComponent />\n                    </Grid>\n\n                </Grid>\n\n                <Button className={classes.submitButton} variant=\"contained\" color=\"primary\" size=\"large\"  type='submit' fullWidth>Submit</Button>\n                <Button className={classes.clearButton} variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n\n                </form>\n            </Grid>\n        </Card>\n    )\n}\n\nexport default EmployeeForm\n"]},"metadata":{},"sourceType":"module"}