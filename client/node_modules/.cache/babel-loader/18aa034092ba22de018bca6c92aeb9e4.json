{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EmployeeCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport ReactCardFlip from 'react-card-flip';\nimport Card from '@material-ui/core/Card';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeCard = ({\n  employee\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [isFlipped, setIsFlipped] = useState();\n  const positions = employee.positions;\n  return /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipDirection: \"vertical\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardFrontTop,\n        children: [employee.firstName, \" \", employee.lastName, /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardFrontDetails,\n        children: positions.map(position => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.flipButtonFrontArea,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.flipButton,\n          variant: \"text\",\n          style: {},\n          onClick: () => setIsFlipped(!isFlipped),\n          children: \"Flip Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.cardBack,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardBackContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: employee.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: employee.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.flipButton,\n          onClick: () => setIsFlipped(!isFlipped),\n          children: \"Flip Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeCard, \"N/wwgGLNQM0d1c6WgNMjxDeNYGU=\", true);\n\n_c = EmployeeCard;\nexport default EmployeeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeCard\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/employeesPage/employeeCard/EmployeeCard.js"],"names":["useState","makeStyles","ReactCardFlip","Card","Container","Divider","Button","Typography","EmployeeCard","employee","classes","useStyles","isFlipped","setIsFlipped","positions","card","cardFrontTop","firstName","lastName","divider","cardFrontDetails","map","position","flipButtonFrontArea","flipButton","cardBack","cardBackContent","phoneNumber","email"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACjC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,EAA1C;AACA,QAAMc,SAAS,GAAGL,QAAQ,CAACK,SAA3B;AAEA,sBACI,QAAC,aAAD;AAAe,IAAA,SAAS,EAAEF,SAA1B;AAAqC,IAAA,aAAa,EAAC,UAAnD;AAAA,4BAEI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEF,OAAO,CAACK,IAAzB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEL,OAAO,CAACM,YAA9B;AAAA,mBACKP,QAAQ,CAACQ,SADd,OAC0BR,QAAQ,CAACS,QADnC,eAEI,QAAC,OAAD;AAAS,UAAA,SAAS,EAAER,OAAO,CAACS;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAET,OAAO,CAACU,gBAA9B;AAAA,kBACKN,SAAS,CAACO,GAAV,CAAeC,QAAD,iBACX;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cALJ,eAUI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEZ,OAAO,CAACa,mBAA9B;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,SAAS,EAAEb,OAAO,CAACc,UADvB;AAEI,UAAA,OAAO,EAAC,MAFZ;AAGI,UAAA,KAAK,EAAE,EAHX;AAII,UAAA,OAAO,EAAE,MAAMX,YAAY,CAAC,CAACD,SAAF,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAuBI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEF,OAAO,CAACe,QAAzB;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEf,OAAO,CAACgB,eAA9B;AAAA,gCACI;AAAA,oBACKjB,QAAQ,CAACkB;AADd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,oBACKlB,QAAQ,CAACmB;AADd;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,MAAD;AACI,UAAA,SAAS,EAAElB,OAAO,CAACc,UADvB;AAEI,UAAA,OAAO,EAAE,MAAMX,YAAY,CAAC,CAACD,SAAF,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH,CA/CD;;GAAMJ,Y;;KAAAA,Y;AAiDN,eAAeA,YAAf","sourcesContent":["import { useState } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport ReactCardFlip from 'react-card-flip'\nimport Card from '@material-ui/core/Card'\nimport Container from '@material-ui/core/Container'\nimport Divider from '@material-ui/core/Divider'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmployeeCard = ({employee}) => {\n    const classes = useStyles()\n    const [isFlipped, setIsFlipped] = useState()\n    const positions = employee.positions\n\n    return (\n        <ReactCardFlip isFlipped={isFlipped} flipDirection='vertical'>\n\n            <Card className={classes.card}>\n                <Container className={classes.cardFrontTop}>\n                    {employee.firstName} {employee.lastName}\n                    <Divider className={classes.divider}/>\n                </Container>\n                <Container className={classes.cardFrontDetails}>\n                    {positions.map((position)=>\n                        <li>{position}</li>\n                    )}\n                </Container>\n                <Container className={classes.flipButtonFrontArea}>\n                    <Button \n                        className={classes.flipButton} \n                        variant='text'\n                        style={{}}\n                        onClick={() => setIsFlipped(!isFlipped)}\n                    >\n                        Flip Card\n                    </Button>\n                </Container>\n            </Card>\n            <Card className={classes.cardBack}>\n                <Container className={classes.cardBackContent}>\n                    <div>\n                        {employee.phoneNumber}\n                    </div>\n                    <div>\n                        {employee.email}\n                    </div>\n                    <Button \n                        className={classes.flipButton} \n                        onClick={() => setIsFlipped(!isFlipped)}\n                        >\n                            Flip Card\n                    </Button>\n                </Container>\n            </Card>\n        </ReactCardFlip>\n    )\n}\n\nexport default EmployeeCard\n"]},"metadata":{},"sourceType":"module"}