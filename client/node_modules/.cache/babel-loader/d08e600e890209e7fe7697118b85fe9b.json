{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/SchedulePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getEmployees } from '../../actions/employees';\nimport Calendar from '../calendars/Calendar';\nimport PersonalCalendar from '../calendars/PersonalCalendar';\nimport { Container, Slide, Switch, Typography, Card, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport ReactCardFlip from 'react-card-flip';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Schedule = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isFlipped, setIsFlipped] = useState(false);\n  const dispatch = useDispatch();\n  const employees = useSelector(state => state.employees);\n  const dropDownNames = employees.map(employee => `${employee.firstName} ${employee.lastName}`);\n\n  const createScheduleWithNames = () => {\n    const scheduleWithNames = [];\n    employees.forEach(employee => {\n      let name = `${employee.firstName} ${employee.lastName}`;\n      employee.weekSchedule.forEach(shift => {\n        let shiftTitle = `${name} - ${shift.title}`;\n        let tempShift = { ...shift\n        };\n        tempShift.title = shiftTitle;\n        scheduleWithNames.push(tempShift);\n      });\n    });\n    return scheduleWithNames;\n  };\n\n  const employee = employees[0];\n  const employeesSchedules = createScheduleWithNames();\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    in: true,\n    direction: \"left\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.center,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: classes.switchRow,\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          checked: isFlipped,\n          onChange: e => setIsFlipped(e.target.checked),\n          name: \"checked\",\n          inputProps: {\n            'aria-label': 'calendar checkbox'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"View Everyone's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        flipSpeedFrontToBack: \".5\",\n        flipSpeedBackToFront: \".5\",\n        isFlipped: isFlipped,\n        flipDirection: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: classes.calendarCard,\n          children: /*#__PURE__*/_jsxDEV(PersonalCalendar, {\n            employee: employee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.calendarCard,\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            employeesSchedules: employeesSchedules\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Schedule, \"H890VoYapYzUohRLa9IGMWa2TAQ=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Schedule;\nexport default Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app-database/client/src/components/schedulePage/SchedulePage.js"],"names":["useState","useEffect","useSelector","useDispatch","getEmployees","Calendar","PersonalCalendar","Container","Slide","Switch","Typography","Card","IconButton","Menu","MenuItem","ReactCardFlip","useStyles","Schedule","classes","isFlipped","setIsFlipped","dispatch","employees","state","dropDownNames","map","employee","firstName","lastName","createScheduleWithNames","scheduleWithNames","forEach","name","weekSchedule","shift","shiftTitle","title","tempShift","push","employeesSchedules","center","switchRow","e","target","checked","calendarCard"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getEmployees } from '../../actions/employees'\nimport Calendar from '../calendars/Calendar'\nimport PersonalCalendar from '../calendars/PersonalCalendar'\nimport { Container, Slide, Switch, Typography, Card, IconButton, Menu, MenuItem } from '@material-ui/core'\nimport ReactCardFlip from 'react-card-flip'\nimport useStyles from './styles'\n\nconst Schedule = () => {\n    const classes = useStyles()\n    const [isFlipped, setIsFlipped] = useState(false)\n    const dispatch = useDispatch()\n    const employees = useSelector((state) => state.employees)\n    const dropDownNames = employees.map((employee) => `${employee.firstName} ${employee.lastName}`)\n    \n    const createScheduleWithNames = () => {\n        const scheduleWithNames = []\n        employees.forEach((employee) => {\n            let name = `${employee.firstName} ${employee.lastName}`\n            employee.weekSchedule.forEach((shift) => {\n                let shiftTitle = `${name} - ${shift.title}`\n                let tempShift = {...shift}\n                tempShift.title = shiftTitle\n                scheduleWithNames.push(tempShift)\n            })\n        })\n        return scheduleWithNames\n    }\n    \n    const employee = employees[0]\n    const employeesSchedules = createScheduleWithNames()\n\n\n    return (\n        <Slide in direction=\"left\">\n            <Container className={classes.center}>\n                <Container className={classes.switchRow}>\n                    <Switch\n                        checked={isFlipped}\n                        onChange={ (e)=>setIsFlipped(e.target.checked)}\n                        name='checked'\n                        inputProps={{ 'aria-label': 'calendar checkbox' }}\n                    />\n                    <Typography>View Everyone's Schedule</Typography>\n                </Container>\n                <ReactCardFlip flipSpeedFrontToBack='.5' flipSpeedBackToFront='.5' isFlipped={isFlipped} flipDirection='vertical'>\n                    <Card className={classes.calendarCard}>\n                        <PersonalCalendar employee={employee} />\n                    </Card>\n                    <Card className={classes.calendarCard}>\n                        <Calendar employeesSchedules={employeesSchedules} />\n                    </Card>\n                </ReactCardFlip>\n            </Container>\n        </Slide>\n    )\n}\n\nexport default Schedule\n"]},"metadata":{},"sourceType":"module"}