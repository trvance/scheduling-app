{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/Programming/ReactApps/scheduler-app/src/components/AddEmployeeButton.js\",\n    _s = $RefreshSig$();\n\nimport StyledTextField from './styledComponents/StyledTextField.js';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useState, forwardRef } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport StyledButton from './styledComponents/StyledButton.js'; // const Transition = forwardRef(function Transition(props, ref) {\n//     return <Slide direction=\"up\" ref={ref} {...props} />\n// })\n// export default function AddEmployeeButton({employees, addEmployee}) {\n//     const [open, setOpen] = useState(false)\n//     const theme = useTheme()\n//     const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n//     const handleClickOpen = () => {\n//         setOpen(true)\n//     }\n//     const handleClose = () => {\n//         setOpen(false)\n//     }\n//     return (\n//         <div>\n//             <IconButton style={{bottom: '2vh'}} onClick={handleClickOpen}>\n//                     <Icon color='secondary'>add-icon</Icon>\n//             </IconButton>\n//             <Dialog\n//                 open={open}\n//                 TransitionComponent={Transition}\n//                 keepMounted\n//                 onClose={handleClose}\n//                 aria-labelledby=\"alert-dialog-slide-title\"\n//                 aria-describedby=\"alert-dialog-slide-description\"\n//             >\n//                 <Card>\n//                 <DialogContent \n//                     style={{\n//                         backgroundImage:'linear-gradient(0deg, #424242 60%, #ccdc39e4 60%)', \n//                         // borderRadius: '10px',\n//                     }}\n//                 >\n//                 <DialogTitle id=\"alert-dialog-slide-title\"><h2>Add Employee</h2></DialogTitle>\n//                 <div></div>\n//                     <DialogContentText id=\"alert-dialog-slide-description\">\n//                         <Box\n//                             container\n//                             direction=\"column\"\n//                             alignItems=\"center\"\n//                             justify=\"center\"\n//                             style={{ backgroundColor: '#424242', borderRadius: '10px'}}\n//                         >\n//                             <form style={{margin:'2rem'}} noValidate autoComplete='off'>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='First Name' \n//                                         required\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='M.I.' \n//                                         inputProps={{ maxLength: '1'}}\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='Last Name' \n//                                         required\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='Phone Number' \n//                                         required\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='Email' \n//                                         required\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                             </form>\n//                         </Box>\n//                     </DialogContentText>\n//                     <DialogActions>\n//                         <Button onClick={handleClose} color=\"secondary\">\n//                             Cancel\n//                         </Button>\n//                         <StyledButton style={{width:'10rem', marginLeft:'2rem'}} onClick={addEmployee} color=\"secondary\">\n//                             Save Employee\n//                         </StyledButton>\n//                     </DialogActions>\n//                 </DialogContent>\n//                 </Card>\n//             </Dialog>\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScrollDialog() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [scroll, setScroll] = useState('paper');\n\n  const handleClickOpen = scrollType => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = useRef(null);\n  useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen('paper'),\n      children: \"scroll=paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen('body'),\n      children: \"scroll=body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      scroll: scroll,\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      \"aria-describedby\": \"scroll-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: scroll === 'paper',\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"scroll-dialog-description\",\n          ref: descriptionElementRef,\n          tabIndex: -1,\n          children: [...new Array(50)].map(() => `Cras mattis consectetur purus sit amet fermentum.\n  Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n  Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n  Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`).join('\\n')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ScrollDialog, \"cKaj3ulJoogf260F/Xd9/QnRqew=\");\n\n_c = ScrollDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollDialog\");","map":{"version":3,"sources":["/Users/tyler/Documents/Programming/ReactApps/scheduler-app/src/components/AddEmployeeButton.js"],"names":["StyledTextField","Card","Box","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Icon","IconButton","useState","forwardRef","useTheme","useMediaQuery","StyledButton","ScrollDialog","open","setOpen","scroll","setScroll","handleClickOpen","scrollType","handleClose","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","Array","map","join"],"mappings":"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","sourcesContent":["import StyledTextField from './styledComponents/StyledTextField.js'\nimport Card from '@material-ui/core/Card'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Slide from '@material-ui/core/Slide'\nimport Icon from '@material-ui/core/Icon'\nimport IconButton from '@material-ui/core/IconButton'\nimport { useState, forwardRef,  } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport StyledButton from './styledComponents/StyledButton.js'\n\n// const Transition = forwardRef(function Transition(props, ref) {\n//     return <Slide direction=\"up\" ref={ref} {...props} />\n// })\n\n// export default function AddEmployeeButton({employees, addEmployee}) {\n//     const [open, setOpen] = useState(false)\n//     const theme = useTheme()\n//     const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n    \n//     const handleClickOpen = () => {\n//         setOpen(true)\n//     }\n    \n//     const handleClose = () => {\n//         setOpen(false)\n//     }\n    \n//     return (\n//         <div>\n//             <IconButton style={{bottom: '2vh'}} onClick={handleClickOpen}>\n//                     <Icon color='secondary'>add-icon</Icon>\n//             </IconButton>\n//             <Dialog\n//                 open={open}\n//                 TransitionComponent={Transition}\n//                 keepMounted\n//                 onClose={handleClose}\n//                 aria-labelledby=\"alert-dialog-slide-title\"\n//                 aria-describedby=\"alert-dialog-slide-description\"\n//             >\n//                 <Card>\n//                 <DialogContent \n//                     style={{\n//                         backgroundImage:'linear-gradient(0deg, #424242 60%, #ccdc39e4 60%)', \n//                         // borderRadius: '10px',\n\n//                     }}\n//                 >\n//                 <DialogTitle id=\"alert-dialog-slide-title\"><h2>Add Employee</h2></DialogTitle>\n//                 <div></div>\n//                     <DialogContentText id=\"alert-dialog-slide-description\">\n//                         <Box\n//                             container\n//                             direction=\"column\"\n//                             alignItems=\"center\"\n//                             justify=\"center\"\n//                             style={{ backgroundColor: '#424242', borderRadius: '10px'}}\n//                         >\n//                             <form style={{margin:'2rem'}} noValidate autoComplete='off'>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='First Name' \n//                                         required\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='M.I.' \n//                                         inputProps={{ maxLength: '1'}}\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='Last Name' \n//                                         required\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='Phone Number' \n//                                         required\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                                 <div>\n//                                     <StyledTextField \n//                                         label='Email' \n//                                         required\n//                                         variant='filled'\n//                                         color='secondary'\n//                                     />\n//                                 </div>\n//                             </form>\n//                         </Box>\n//                     </DialogContentText>\n//                     <DialogActions>\n//                         <Button onClick={handleClose} color=\"secondary\">\n//                             Cancel\n//                         </Button>\n//                         <StyledButton style={{width:'10rem', marginLeft:'2rem'}} onClick={addEmployee} color=\"secondary\">\n//                             Save Employee\n//                         </StyledButton>\n//                     </DialogActions>\n//                 </DialogContent>\n//                 </Card>\n//             </Dialog>\n//         </div>\n//     )\n// }\n\n\n\n\n\n\n\nexport default function ScrollDialog() {\n    const [open, setOpen] = useState(false);\n    const [scroll, setScroll] = useState('paper');\n  \n    const handleClickOpen = (scrollType) => () => {\n      setOpen(true);\n      setScroll(scrollType);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    const descriptionElementRef = useRef(null);\n    useEffect(() => {\n      if (open) {\n        const { current: descriptionElement } = descriptionElementRef;\n        if (descriptionElement !== null) {\n          descriptionElement.focus();\n        }\n      }\n    }, [open]);\n  \n    return (\n      <div>\n        <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\n        <Button onClick={handleClickOpen('body')}>scroll=body</Button>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          scroll={scroll}\n          aria-labelledby=\"scroll-dialog-title\"\n          aria-describedby=\"scroll-dialog-description\"\n        >\n          <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n          <DialogContent dividers={scroll === 'paper'}>\n            <DialogContentText\n              id=\"scroll-dialog-description\"\n              ref={descriptionElementRef}\n              tabIndex={-1}\n            >\n              {[...new Array(50)]\n                .map(\n                  () => `Cras mattis consectetur purus sit amet fermentum.\n  Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n  Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n  Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n                )\n                .join('\\n')}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleClose} color=\"primary\">\n              Subscribe\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}